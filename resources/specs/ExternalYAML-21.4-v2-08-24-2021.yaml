openapi: 3.0.2
#
info:
  version: 21.4.0.20210824.002
  title: Payment Gateway API Specification.
  description: "The documentation here is designed to provide all of the technical guidance required to consume and integrate with our APIs for payment processing. To learn more about our APIs please visit https://docs.firstdata.com/org/gateway."
servers:
  - url: 'https://cert.api.firstdata.com/gateway/v2'
paths:
  /payments:
    post:
      tags:
        - Payment
      x-proxy-name: 'Create Primary Transaction'
      summary: Generate a primary transaction.
      description: Use this to originate a financial transaction like a sale, preauthorization, or credit.
      operationId: submitPrimaryTransaction
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/RegionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrimaryTransaction'
        description: 'Accepted request types: AliPaySaleTransaction, ChinaPnRSaleTransaction, PaymentCardCreditTransaction, PaymentCardForcedTicketTransaction, PaymentCardSaleTransaction, PaymentCardPreAuthTransaction, PaymentCardPayerAuthTransaction, PaymentCardDisbursementTransaction, PaymentTokenCreditTransaction, PaymentTokenPreAuthTransaction, PaymentTokenSaleTransaction, PaymentTokenDisbursementTransaction, PaypalCreditTransaction, SepaSaleTransaction, SepaCreditTransaction, WalletSaleTransaction, and WalletPreAuthTransaction, PaymentDeviceSaleTransaction, PaymentDevicePreAuthTransaction, PaymentDeviceCreditTransaction, PaymentDeviceDisbursementTransaction, AchPreAuthTransaction, AchSaleTransaction, AchCreditTransaction.'
        required: true
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthenticated'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        409:
          $ref: '#/components/responses/TransactionGatewayDeclined'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        422:
          $ref: '#/components/responses/TransactionEndpointDeclined'
        500:
          $ref: '#/components/responses/ServerError'
        502:
          $ref: '#/components/responses/EndpointCommunicationError'
  /payments/{transaction-id}:
    get:
      tags:
        - Payment
      x-proxy-name: 'Transaction Inquiry'
      summary: Retrieve the state of a transaction.
      description: Use this query to get the current state of an existing transaction.
      operationId: transactionInquiry
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/TransactionIdParam'
        - $ref: '#/components/parameters/StoreIdParam'
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthenticated'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        409:
          $ref: '#/components/responses/TransactionGatewayDeclined'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        422:
          $ref: '#/components/responses/TransactionEndpointDeclined'
        500:
          $ref: '#/components/responses/ServerError'
        502:
          $ref: '#/components/responses/EndpointCommunicationError'
    patch:
      tags:
        - Payment
      x-proxy-name: 'Finalize Secure Transaction'
      operationId: finalizeSecureTransaction
      summary: Update a 3DSecure or UnionPay payment and continue processing. # APAC only: UnionPay
      description: Use this to handle a 3DSecure redirect response or UnionPay authentication, updating the transaction and continuing processing.
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/TransactionIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationUpdateRequest'
        required: true
        # APAC only: UnionPayAuthenticationUpdateRequest
        description: 'Accepted request types: Secure3DAuthenticationUpdateRequest, Secure3D10AuthenticationUpdateRequest, Secure3D21AuthenticationUpdateRequest and UnionPayAuthenticationUpdateRequest.'
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthenticated'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        409:
          $ref: '#/components/responses/TransactionGatewayDeclined'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        422:
          $ref: '#/components/responses/TransactionEndpointDeclined'
        500:
          $ref: '#/components/responses/ServerError'
        502:
          $ref: '#/components/responses/EndpointCommunicationError'
    post:
      tags:
      - Payment
      x-proxy-name: 'Secondary Transaction'
      summary: Perform a secondary transaction.
      description: Use this to perform a void, postAuth or return secondary transaction. Partial postAuths and returns are allowed.
      operationId: submitSecondaryTransaction
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/TransactionIdParam'
        - $ref: '#/components/parameters/StoreIdParam'
      requestBody:
        $ref: '#/components/requestBodies/SecondaryTransaction'
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthenticated'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        409:
          $ref: '#/components/responses/TransactionGatewayDeclined'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        422:
          $ref: '#/components/responses/TransactionEndpointDeclined'
        500:
          $ref: '#/components/responses/ServerError'
        502:
          $ref: '#/components/responses/EndpointCommunicationError'
  /orders/{order-id}:
    post:
      tags:
        - Order
      x-proxy-name: 'Order-Based Secondary Transactions'
      summary: Perform return or postAuth secondary transactions.
      description: Use this to perform a postAuth or return secondary transaction using order ID. Partial postAuths and returns are allowed.
      operationId: submitSecondaryTransactionFromOrder
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/OrderIdParam'
      requestBody:
        $ref: '#/components/requestBodies/SecondaryTransaction'
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthenticated'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        409:
          $ref: '#/components/responses/TransactionGatewayDeclined'
        422:
          $ref: '#/components/responses/TransactionEndpointDeclined'
        500:
          $ref: '#/components/responses/ServerError'
        502:
          $ref: '#/components/responses/EndpointCommunicationError'
    get:
      tags:
        - Order
      x-proxy-name: 'Order Inquiry'
      summary: Retrieve the state of an order.
      description: Use this query to get the current state of an existing order.
      operationId: orderInquiry
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/OrderIdParam'
        - $ref: '#/components/parameters/StoreIdParam'
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthenticated'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
        502:
          $ref: '#/components/responses/EndpointCommunicationError'
  /payment-schedules:
    post:
      tags:
        - Payment Schedules
      x-proxy-name: 'Schedule Creation'
      summary: Create gateway payment schedule.
      description: Use this to create a gateway payment schedule.
      operationId: createPaymentSchedule
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/RegionParam'
      requestBody:
        $ref: '#/components/requestBodies/PaymentSchedulesRequest'
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSchedulesResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        409:
          description: The attempted action is not valid according to gateway rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSchedulesErrorResponse'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        422:
          description: The endpoint declined the transaction.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSchedulesErrorResponse'
        500:
          $ref: '#/components/responses/ServerError'
  /payment-schedules/{order-id}:
    get:
      tags:
        - Payment Schedules
      x-proxy-name: 'Schedule Inquiry'
      summary: View a gateway payment schedule.
      description: Use this to view an existing gateway payment schedule.
      operationId: inquiryPaymentSchedule
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/OrderIdParam'
        - $ref: '#/components/parameters/StoreIdParam'
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurringPaymentDetailsResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        500:
          $ref: '#/components/responses/ServerError'
    delete:
      tags:
        - Payment Schedules
      x-proxy-name: 'Schedule Cancel'
      summary: Cancel a gateway payment schedule.
      description: Use this to cancel an existing gateway payment schedule.
      operationId: cancelPaymentSchedule
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/OrderIdParam'
        - $ref: '#/components/parameters/StoreIdParam'
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSchedulesResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        409:
          $ref: '#/components/responses/GatewayDeclined'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        422:
          $ref: '#/components/responses/EndpointDeclined'
        500:
          $ref: '#/components/responses/ServerError'
    patch:
      tags:
        - Payment Schedules
      x-proxy-name: 'Schedule Update'
      summary: Update a gateway payment schedule.
      description: Use this to update a gateway payment schedule.
      operationId: updatePaymentSchedule
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/OrderIdParam'
      requestBody:
        $ref: '#/components/requestBodies/PaymentSchedulesRequest'
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSchedulesResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        409:
          $ref: '#/components/responses/GatewayDeclined'
        422:
          $ref: '#/components/responses/EndpointDeclined'
        500:
          $ref: '#/components/responses/ServerError'
  /fraud/score-only:
    post:
      tags:
        - Fraud Detect
      x-proxy-name: 'Score Only'
      summary: Score a transaction for fraud.
      description: Use this to obtain a fraud score for a transaction.
      operationId: scoreOnly
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/RegionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreOnlyRequest'
        description: 'Accepted request type: ScoreOnlyRequest.'
        required: true
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreOnlyResponse'
        201:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreOnlyResponse'
        400:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreOnlyResponse'
  /fraud/client-registration:
    post:
      tags:
        - Fraud Detect
      x-proxy-name: 'Client Registration'
      summary: Client registration for fraud detect transaction.
      description: Use this to register client for fraud detect transaction.
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/RegionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientRegistration'
        required: true
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FraudRegistrationResponse'
        201:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreOnlyResponse'
        400:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FraudRegistrationResponse'
  /fraud/payment-registration:
    post:
      tags:
        - Fraud Detect
      x-proxy-name: 'Payment Registration'
      summary: Payment registration for fraud detect transaction.
      description: Use this to register payment for fraud detect transaction.
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/RegionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRegistration'
        required: true
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FraudRegistrationResponse'
        201:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreOnlyResponse'
        400:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FraudRegistrationResponse'
  /payment-url:
    post:
      tags:
        - Payment URL
      x-proxy-name: 'URL Creation'
      summary: Create a payment URL.
      description: Use this to generate an embedding payment link.
      operationId: createPaymentUrl
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/RegionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentUrlRequest'
        description: 'Accepted request type: PaymentUrlRequest.'
        required: true
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentUrlResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        409:
          $ref: '#/components/responses/GatewayDeclined'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        500:
          $ref: '#/components/responses/ServerError'
    delete:
      tags:
        - Payment URL
      x-proxy-name: 'Delete URL'
      summary: Delete a payment URL.
      description: Use this to delete an embedding payment link.
      operationId: deletePaymentUrl
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/StoreIdParam'
        - $ref: '#/components/parameters/TransactionIdQueryParam'
        - $ref: '#/components/parameters/OrderIdQueryParam'
        - $ref: '#/components/parameters/PaymentUrlIdQueryParam'
        - $ref: '#/components/parameters/TransactionTimeQueryParam'
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentUrlResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        409:
          $ref: '#/components/responses/GatewayDeclined'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        500:
          $ref: '#/components/responses/ServerError'
    get:
      tags:
        - Payment URL
      x-proxy-name: 'URL Detail'
      summary: Retrieve the state of payment URL.
      description: Use this query to get the current state of an existing paymentURL.
      operationId: paymentUrlDetail
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/StoreIdParam'
        - $ref: '#/components/parameters/OrderIdQueryParam'
        - $ref: '#/components/parameters/MerchantTransactionIdQueryParam'
        - $ref: '#/components/parameters/FromDateQueryParam'
        - $ref: '#/components/parameters/ToDateQueryParam'
        - $ref: '#/components/parameters/StatusQueryParam'
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentUrlDetailResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        409:
          $ref: '#/components/responses/GatewayDeclined'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        500:
          $ref: '#/components/responses/ServerError'
# NA only
  /authentication/access-tokens:
    post:
      tags:
        - Authentication
      x-proxy-name: 'Access Tokens'
      summary: Generate an access token for user authentication.
      description: This is the access token generation call for authorizing subsequent financial transactions. A valid access token is required for web client requests.
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessTokenRequest'
        description: Access token request
        required: true
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthenticated'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        500:
          $ref: '#/components/responses/ServerError'
  /payment-tokens:
    post:
      tags:
        - Payment Token
      x-proxy-name: 'Token Creation'
      operationId: createPaymentToken
      summary: Create a payment token from a payment card.
      description: Use this to create a payment token from a payment card.
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/AccessTokenParam'
        - $ref: '#/components/parameters/RegionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTokenizationRequest'
        required: true
        description: 'Accepted request types: PaymentCardPaymentTokenizationRequest, PaymentDevicePaymentTokenizationRequest, and ReferencedOrderPaymentTokenizationRequest.'
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTokenizationResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        409:
          $ref: '#/components/responses/PaymentTokenizationGatewayDeclined'
        422:
          $ref: '#/components/responses/PaymentTokenizationEndpointDeclined'
        500:
          $ref: '#/components/responses/ServerError'
    patch:
      tags:
        - Payment Token
      x-proxy-name: 'Token Update'
      operationId: updatePaymentToken
      summary: Update one or more payment tokens.
      description: Use this update one or more payment tokens.
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/AccessTokenParam'
        - $ref: '#/components/parameters/RegionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCardPaymentTokenUpdateRequest'
        required: true
        description: 'Accepted request type: PaymentCardPaymentTokenUpdateRequest.'
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTokenUpdateResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        409:
          $ref: '#/components/responses/PaymentTokenizationGatewayDeclined'
        422:
          $ref: '#/components/responses/PaymentTokenizationEndpointDeclined'
        500:
          $ref: '#/components/responses/ServerError'
  /payment-tokens/{token-id}:
    get:
      tags:
        - Payment Token
      x-proxy-name: 'Get Token Source Details'
      operationId: getPaymentTokenDetails
      summary: Get payment card details associated with token.
      description: Get payment card details associated with token.
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/AccessTokenParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/TokenIdParam'
        - name: storeId
          in: query
          required: false
          schema:
            type: string
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTokenizationResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
    delete:
      tags:
        - Payment Token
      x-proxy-name: 'Token Deletion'
      operationId: deletePaymentToken
      summary: Delete a payment token.
      description: Use this to delete a payment token.
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/AccessTokenParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/TokenIdParam'
        - name: storeId
          in: query
          required: false
          schema:
            type: string
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTokenizationResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
  /card-verification:
    post:
      tags:
      - Verification
      x-proxy-name: 'Card Verification'
      operationId: verifyCard
      summary: Verify a payment card.
      description: Use this to perform card verification for a payment card. Use the account-verification endpoint instead for this request.
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/RegionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardVerificationRequest'
        required: true
        description: 'Accepted request type: CardVerificationRequest.'
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        409:
          $ref: '#/components/responses/GatewayDeclined'
        422:
          $ref: '#/components/responses/EndpointDeclined'
        500:
          $ref: '#/components/responses/ServerError'
  /account-verification:
    post:
      tags:
      - Verification
      x-proxy-name: 'Account Verification'
      operationId: verifyAccount
      summary: Verify a payment card or payment token.
      description: Use this to perform an account verification for a payment card or payment token.
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/RegionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountVerificationRequest'
        required: true
        description: 'Accepted request type: PaymentCardVerificationRequest and PaymentTokenVerificationRequest.'
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        409:
          $ref: '#/components/responses/GatewayDeclined'
        422:
          $ref: '#/components/responses/EndpointDeclined'
        500:
          $ref: '#/components/responses/ServerError'
  /exchange-rates:
    post:
      tags:
        - Currency Conversion
      x-proxy-name: 'Currency Conversion Inquiry'
      summary: Generate dynamic currency conversion transactions.
      description: Sale, return and lookup exchange rate with dynamic currency conversion option.
      operationId: getExchangeRate
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/RegionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExchangeRateRequest'
        required: true
        description: 'Accepted request types: DCCExchangeRateRequest and DynamicPricingExchangeRateRequest.'
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeRateResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthenticated'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
        502:
          $ref: '#/components/responses/EndpointCommunicationError'
  /card-information:
    post:
      tags:
        - Information Lookup
      x-proxy-name: 'Card Info Lookup'
      summary: Card information lookup.
      description: Use this to look up card related information such as issuer country, card function and card brand.
      operationId: cardInfoLookup
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/RegionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardInfoLookupRequest'
        description: 'Accepted request type: CardInfoLookupRequest.'
        required: true
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardInfoLookupResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
  /account-information:
    post:
      tags:
        - Information Lookup
      x-proxy-name: 'Account Info Lookup'
      summary: Account information lookup.
      description: Use this to look up card related information associated with a payment card or payment token.
      operationId: lookupAccount
      parameters:
        - $ref: '#/components/parameters/ContentTypeParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/MessageSignatureParam'
        - $ref: '#/components/parameters/RegionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountInfoLookupRequest'
        description: 'Accepted request type: PaymentCardInfoLookupRequest and PaymentTokenInfoLookupRequest'
        required: true
      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardInfoLookupResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
components:
#-------------------------------------------------------------------------------
# Parameter Models
#-------------------------------------------------------------------------------
  parameters:
    ContentTypeParam:
      name: Content-Type
      schema:
        type: string
        enum: ['application/json']
        default: application/json
      in: header
      required: true
      description: Content type.
    ClientRequestIdParam:
      name: Client-Request-Id
      schema:
        type: string
      in: header
      required: true
      description: A client-generated ID for request tracking and signature creation, unique per request.  This is also used for idempotency control. We recommend 128-bit UUID format.
    ApiKeyParam:
      name: Api-Key
      schema:
        type: string
      in: header
      required: true
      description: Key given to merchant after boarding associating their requests with the appropriate app in Apigee.
    TimestampParam:
      name: Timestamp
      schema:
        type: integer
        format: int64
      in: header
      required: true
      description: Epoch timestamp in milliseconds in the request from a client system. Used for Message Signature generation and time limit (5 mins).
    MessageSignatureParam:
      name: Message-Signature
      schema:
        type: string
      in: header
      required: false
      description: Used to ensure the request has not been tampered with during transmission. The Message-Signature is the Base64 encoded HMAC hash (SHA256 algorithm with the API Secret as the key.) For more information, refer to the supporting documentation on the Developer Portal.
      x-link:
        name: "How to Create Message Signature"
        link: "https://docs.firstdata.com/org/gateway/node/394"
    AccessTokenParam:
      name: Authorization
      description: The access token previously generated with the access-tokens call. Use the format 'Bearer {access-token}'.
      schema:
        type: string
      in: header
      required: false
    RegionParam:
      name: Region
      description: Indicates the region where the client wants the transaction to be processed. This will override the default processing region identified for the client. Available options are argentina, brazil, germany, india and northamerica. Region specific store setup and APIGEE boarding is required in order to use an alternate region for processing.
      schema:
        type: string
      in: header
      required: false
    TransactionIdParam:
      name: transaction-id
      schema:
        type: string
      in: path
      required: true
      description: Gateway transaction identifier as returned in the parameter ipgTransactionId or merchantTransactionId.
    TransactionIdQueryParam:
      name: transactionId
      schema:
        type: string
      in: query
      required: false
      description: Gateway transaction identifier as returned in the parameter ipgTransactionId or merchantTransactionId.
    OrderIdParam:
      name: order-id
      schema:
        type: string
      in: path
      required: true
      description: Gateway order identifier as returned in the parameter orderId.
    OrderIdQueryParam:
      name: orderId
      schema:
        type: string
      in: query
      required: false
      description: Gateway order identifier as returned in the parameter orderId.
    PaymentUrlIdQueryParam:
      name: paymentUrlId
      schema:
        type: string
      in: query
      required: false
      description: The ID code from the payment URL.
    MerchantTransactionIdQueryParam:
      name: merchantTransactionId
      schema:
        type: string
      in: query
      required: false
      description: Gateway merchant identifier as returned in the parameter merchantTransactionId.
    FromDateQueryParam:
      name: fromDate
      schema:
        type: string
      in: query
      required: true
      description: The start date for payment URL in seconds since epoch.
    ToDateQueryParam:
      name: toDate
      schema:
        type: string
      in: query
      required: true
      description: The end date for payment URL search query in seconds since epoch.
    StatusQueryParam:
      name: status
      schema:
        type: string
      in: query
      required: false
      description: The status of payment URL.
    StoreIdParam:
      name: storeId
      schema:
        type: string
      in: query
      required: false
      description: An optional outlet ID for clients that support multiple stores in the same developer app.
    TokenIdParam:
      name: token-id
      schema:
        type: string
      in: path
      required: true
      description: Identifies a payment token.
    TransactionTimeQueryParam:
      name: transactionTime
      schema:
        type: string
      in: query
      required: false
      description: The transaction time in seconds since epoch.
#-------------------------------------------------------------------------------
# HTTP Response Models
#-------------------------------------------------------------------------------
  responses:
    BadRequest:
      description: The request cannot be validated.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Unauthenticated:
      description: The request cannot be authenticated or was submitted with the wrong credentials.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Unauthorized:
      description: The request was unauthorized.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    UnsupportedMediaType:
      description: Format that is not supported by the server for the HTTP method.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: The requested resource doesn't exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    ServerError:
      description: An unexpected internal server error occurred.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    EndpointCommunicationError:
      description: There was a problem communicating with the endpoint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    GatewayDeclined:
      description: There was a problem communicating with the endpoint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    EndpointDeclined:
      description: There was a problem communicating with the endpoint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    TransactionGatewayDeclined:
      description: The attempted action is not valid according to gateway rules. For example, the merchant is not set-up or the order already exists.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionErrorResponse'
    TransactionEndpointDeclined:
      description: The processor declined the transaction.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionErrorResponse'
    PaymentTokenizationGatewayDeclined:
      description: The attempted action is not valid according to gateway rules. For example, when the gateway is too busy then the transaction is not processed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentTokenizationErrorResponse'
    PaymentTokenizationEndpointDeclined:
      description: The processor declined the transaction.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentTokenizationErrorResponse'
#-------------------------------------------------------------------------------
# Reusable request body definitions
#-------------------------------------------------------------------------------
  requestBodies:
    SecondaryTransaction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecondaryTransaction'
      required: true
      description: 'Accepted request types: PostAuthTransaction, VoidTransaction, VoidPreAuthTransactions, ReturnTransaction, AchPostAuthTransaction, AchVoidTransaction, AchReturnTransaction and PreAuthSecondaryTransaction.'
    PaymentSchedulesRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentSchedulesRequest'
      required: true
      description: 'Accepted request types: PaymentMethodPaymentSchedulesRequest and ReferencedOrderPaymentSchedulesRequest.'
    AuthenticationVerificationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticationUpdateRequest'
      required: true
#-------------------------------------------------------------------------------
# Schemas
#-------------------------------------------------------------------------------
  schemas:
    BasicResponse:
      description: Contains apiTraceId and clientRequestId shared in all response types.
      properties:
        clientRequestId:
          description: Echoes back the value in the request header for tracking.
          type: string
          example: '30dd879c-ee2f-11db-8314-0800200c9a66'
        apiTraceId:
          description: Request identifier in API, can be used to request logs from the support team.
          type: string
          example: 'rrt-0bd552c12342d3448-b-ea-1142-12938318-7'
        responseType:
          $ref: '#/components/schemas/ResponseType'
    ErrorResponse:
      description: Response containing an error object.
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - properties:
            error:
              $ref: '#/components/schemas/Error'
    TransactionErrorResponse:
      description: Transaction response with error field included.
      allOf:
        - $ref: '#/components/schemas/TransactionResponse'
        - properties:
            error:
             $ref: '#/components/schemas/Error'
    PaymentUrlErrorResponse:
      description: Payment URL response with error field included.
      allOf:
        - $ref: '#/components/schemas/PaymentUrlResponse'
        - properties:
            error:
              $ref: '#/components/schemas/Error'
    PaymentSchedulesErrorResponse:
      description: Payment schedules response with error field included.
      allOf:
        - $ref: '#/components/schemas/PaymentSchedulesResponse'
        - properties:
            error:
              $ref: '#/components/schemas/Error'
    PaymentTokenizationErrorResponse:
      description: Payment tokenization response with error field included.
      allOf:
      - $ref: '#/components/schemas/PaymentTokenizationResponse'
      - properties:
          error:
            $ref: '#/components/schemas/Error'
    OrderErrorResponse:
      description: Order response with error field included.
      allOf:
      - $ref: '#/components/schemas/OrderResponse'
      - properties:
          error:
            $ref: '#/components/schemas/Error'
    OrderResponse:
      description: Common object for primary and secondary payment request responses.
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - properties:
            orderId:
              description: Note - Client Order ID if supplied by client. If not supplied by client, IPG will generate. The first 12 alphanumeric digits are passed down to Fiserv Enterprise reporting tool, Clientline and Data File Manager (DFM).
              type: string
              example: '123456'
            billing:
              $ref: '#/components/schemas/Billing'
            shipping:
              $ref: '#/components/schemas/Shipping'
            transactions:
              description: Required for some payment methods (for example, Klarna).
              type: array
              items:
                $ref: '#/components/schemas/TransactionResponse'
              example:
                - transactionState: 'AUTHORIZED'
                  ipgTransactionId: '838916029301'
                  transactionType: 'SALE'
                  transactionAmount:
                    total: 10.24
                    currency: 'USD'
                  storeId: '1109959991'
            additionalDetails:
              $ref: '#/components/schemas/AdditionalDetails'
          example:
            orderId: '123456'
            billing:
              name: 'John Doe'
              customerId: '1234567890'
              address:
                address1: '123 Main St.'
                city: 'Sandy Springs'
                region: 'Georgia'
                postalCode: '30303'
                country: 'USA'
            shipping:
              name: 'John Doe'
              contact:
                phone: '5555555555'
                mobilePhone: '5555555555'
                email: 'john@test.com'
              address:
                address1: '123 Main St.'
                city: 'Sandy Springs'
                region: 'Georgia'
                postalCode: '30303'
                country: 'USA'
    PaymentTokenUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - properties:
            requestStatus:
              description: The status of the request.
              type: string
              enum: ['FAILED', 'SUCCESS', 'PARTIAL_SUCCESS']
              example: 'APPROVED'
            requestTime:
              description: Time of the request.
              type: integer
              format: int64
              example: '1554308829345'
            errors:
              type: array
              items:
                $ref: '#/components/schemas/Error'
          example:
            requestStatus: 'PARTIAL_SUCCESS'
            requestTime: '1554308829345'
            errors:
              details:
                - message: 'HOSTED_DATA_ID4773410890807324. Invalid credit card number: CreditCard [cardNumber=4773410...7324, expirationMonth=12, expirationYear=2026'
                - message: 'HOSTED_DATA_ID4773410888998888. Invalid credit card number: CreditCard [cardNumber=4773410...8888, expirationMonth=12, expirationYear=2026'
    PaymentTokenizationResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - properties:
            requestStatus:
              description: The status of the request.
              type: string
              enum: ['DELETED', 'FAILED', 'SUCCESS', 'APPROVED', 'WAITING', 'VALIDATION_FAILED', 'DECLINED']
              example: 'DELETED'
            requestTime:
              description: Time of the request.
              type: integer
              format: int64
              example: '1554308829345'
            brand:
              description: Card brand.
              type: string
              example: 'VISA'
            country:
              description: Country of the card issued.
              type: string
              example: 'Germany'
            paymentToken:
              $ref: '#/components/schemas/PaymentTokenDetails'
            paymentCard:
              $ref: '#/components/schemas/PaymentCard'
            processor:
              $ref: '#/components/schemas/ProcessorData'
            orderId:
              description: Note - Client Order ID if supplied by client. If not supplied by client, IPG will generate. The first 12 alphanumeric digits are passed down to Fiserv Enterprise reporting tool, Clientline and Data File Manager (DFM).
              type: string
              example: 'R-44df6542-ae0b-4415-88e8-7f3e62cc9e5d'
            ipgTransactionId:
              description:  The response transaction ID.
              type: string
              maxLength: 14
              example: '838916029301'
            merchantTransactionId:
              description: The unique merchant transaction ID from the request header, if supplied.
              type: string
              maxLength: 40
              example: 'lsk23532djljff3'
            additionalResponseData:
              $ref: '#/components/schemas/AdditionalResponseData'
          example:
            requestStatus: 'DELETED'
            requestTime: '1554308829345'
            brand: 'VISA'
            country: 'Germany'
            paymentToken:
              value: '234ljl124l12'
              reusable: true
              declineDuplicates: false
              last4: '4997'
              brand: 'VISA'
              accountVerification: true
              type: 'PAYMENT_CARD'
            paymentCard:
              number: '5424180279791732'
              expiryDate:
                month: '03'
                year: '21'
              securityCode: '977'
            processor:
              referenceNumber: '117011573'
              authorizationCode: 'OK1852'
              responseCode: '00'
              network: 'DISC'
              associationResponseCode: '000'
              responseMessage: 'APPROVAL'
              avsResponse:
                streetMatch: 'NO_INPUT_DATA'
                postalCodeMatch: 'NO_INPUT_DATA'
                associationAvsResponse: 'Y'
              securityCodeResponse: 'MATCHED'
            orderId: 'R-44df6542-ae0b-4415-88e8-7f3e62cc9e5d'
            ipgTransactionId: '838916029301'
            merchantTransactionId: 'lsk23532djljff3'
    PaymentSchedulesResponse:
      description: Response from the gateway scheduler creation call.
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - properties:
            requestStatus:
              description: Result of requested operation. If it's anything other than 'SUCCESS', please refer to 400s HTTP error codes or decline. See Error object for details.
              type: string
              enum: [SUCCESS, VALIDATION_FAILED, PROCESSING_FAILED, FAILURE, DECLINED]
              example: 'SUCCESS'
            orderId:
              description: Note - Client Order ID if supplied by client. If not supplied by client, IPG will generate. The first 12 alphanumeric digits are passed down to Fiserv Enterprise reporting tool, Clientline and Data File Manager (DFM).
              type: string
              example: '123456'
            transactionResponse:
              description: Contains the details of the transaction if the schedule and transaction were created at the same time.
              $ref: '#/components/schemas/TransactionResponse'
      example:
        clientRequestId: '30dd879c-ee2f-11db-8314-0800200c9a66'
        apiTraceId: 'rrt-0bd552c12342d3448-b-ea-1142-12938318-7'
        requestStatus: 'SUCCESS'
        orderId: 'ABC12345'
    RecurringPaymentDetailsResponse:
      description: Order response containing recurring payment details.
      allOf:
      - $ref: '#/components/schemas/OrderResponse'
      - properties:
          recurringPaymentDetails:
            $ref: '#/components/schemas/RecurringPaymentDetails'
      example:
        clientRequestId: '30dd879c-ee2f-11db-8314-0800200c9a66'
        apiTraceId: 'rrt-0bd552c12342d3448-b-ea-1142-12938318-7'
        orderId: '123456'
        billing:
          name: 'John Doe'
          customerId: '1234567890'
          contact:
            email: 'John.Doe@example.com'
            phone: '5555555555'
        storeId: '1109959991'
        purchaseOrderNumber: '123055342'
        invoiceNumber: '96126098'
        creationDate: '2018-10-25'
        startDate: '2018-10-25'
        nextAttemptDate: '2018-10-25'
        transactionAmount:
          total: 10.50
          currency: 'USD'
        frequency:
          every: 3
          unit: 'DAY'
        numberOfPayments: '10'
        runCount: '3'
        state: 'Installed'
        comments: 'This scheduled payment series is to pay for the thing'
    ExchangeRateResponse:
      description: Exchange rate response.
      allOf:
      - $ref: '#/components/schemas/BasicResponse'
      - properties:
          ipgTransactionId:
            description: The response transaction ID.
            type: string
            example: '838916029301'
          requestTime:
            description: Time of the request. The used format is "yyyy-MM-dd'T'HH:mm:ss.SSSXXX".
            type: string
            example: 2018-12-05T14:13:00.000-05:00
          exchangeRateDetails:
            $ref: '#/components/schemas/ExchangeRateDetails'
      example:
        clientRequestId: '30dd879c-ee2f-11db-8314-0800200c9a66'
        apiTraceId: 'rrt-0bd552c12342d3448-b-ea-1142-12938318-7'
        requestTime: 2020-06-23T13:46:00.000+02:00
        exchangeRateDetails:
          inquiryRateId: 49150
          foreignCurrency: 'AUD'
          foreignAmount: 130.33
          exchangeRate: 1.2968
          dccOffered: 'true'
          exchangeRateSourceTimestamp: '2015-06-23T13:46:00.000+02:00'
          expirationTimestamp: '2015-06-23T13:46:00.000+02:00'
          marginRatePercentage: '3'
          exchangeRateSourceName: 'REUTERS WHOLESALE INTERBANK'
    PaymentUrlResponse:
      description: Response from an embedded payment link request.
      allOf:
      - $ref: '#/components/schemas/BasicResponse'
      - properties:
          requestStatus:
            type: string
            enum: [SUCCESS, VALIDATION_FAILED, PROCESSING_FAILED, FAILURE]
            description: Request status. If it is anything other than 'SUCCESS', please refer to 400s HTTP error codes or decline. See Error object for details.
            example: 'SUCCESS'
          orderId:
            type: string
            description: Note - Client Order ID if supplied by client. If not supplied by client, IPG will generate. The first 12 alphanumeric digits are passed down to Fiserv Enterprise reporting tool, Clientline and Data File Manager (DFM).
            example: '123456'
          paymentUrl:
            description: URL for embedded payment link.
            type: string
            example: 'https://api.firstdata.com/connect/gateway/processing?storename=123456789&oid=R-96cdbaa4-c22e-4598-a2f1-c2b5fed79ef1&paymentUrlId=d3eb74fe-cf63-47e1-b89f-52ba0cc7965c'
          transactionId:
            type: string
            description: ID code from the transaction.
            example: '123978432'
      example:
        clientRequestId: '30dd879c-ee2f-11db-8314-0800200c9a66'
        apiTraceId: 'rrt-0bd552c12342d3448-b-ea-1142-12938318-7'
        requestStatus: 'SUCCESS'
        orderId: '9723846'
        paymentUrl: 'https://hyperlink-to-payment.com'
        transactionId: '2381723322'
    PaymentUrlDetailResponse:
      description: Response from an embedded payment link request.
      allOf:
      - $ref: '#/components/schemas/BasicResponse'
      - properties:
          paymentUrlDetails:
            description: Array of payment URL details.
            type: array
            items:
              $ref: '#/components/schemas/PaymentUrlDetail'
      example:
        clientRequestId: '30dd879c-ee2f-11db-8314-0800200c9a66'
        apiTraceId: 'rrt-0bd552c12342d3448-b-ea-1142-12938318-7'
        paymentUrl: 'https://hyperlink-to-payment.com'
        orderId: '9723846'
        requestTime: '1518811817'
        status: 'Created'
    TransactionResponse:
      description: Common object for primary and secondary payment request responses.
      allOf:
      - $ref: '#/components/schemas/BasicResponse'
      - properties:
          ipgTransactionId:
            description:  The response transaction ID.
            type: string
            example: '838916029301'
          orderId:
            description: Note - Client Order ID if supplied by client. If not supplied by client, IPG will generate. The first 12 alphanumeric digits are passed down to Fiserv Enterprise reporting tool, Clientline and Data File Manager (DFM).
            type: string
            example: '123456'
          transactionType:
            $ref: '#/components/schemas/TransactionType'
          paymentToken:
            $ref: '#/components/schemas/PaymentTokenDetails'
          transactionOrigin:
            $ref: '#/components/schemas/TransactionOrigin'
          paymentMethodDetails:
            $ref: '#/components/schemas/PaymentMethodDetails'
          country:
            description: Country of the card issuer.
            type: string
            example: 'USA'
          terminalId:
            description: The terminal that is processing the transaction.
            type: string
            example: '123456'
          merchantId:
            description: The unique (on Acquirer level) mechant ID. Usually this value has been chosen from the merchant itself and will be used in communication with the endpoint.
            type: string
            maxLength: 30
            example: '199950008'
          merchantTransactionId:
            description: The unique merchant transaction ID from the request header, if supplied.
            type: string
            maxLength: 40
            example: 'lsk23532djljff3'
          transactionTime:
            description: The transaction time in seconds since epoch.
            type: integer
            format: int64
            example: '1518811817'
          approvedAmount:
            $ref: '#/components/schemas/Amount'
          transactionStatus:
            description: Represents the status of a transaction immediately following the original processing request. This value is not stored for the transaction and is only available in the response when the transaction is processed. TransactionStatus is not returned on either the transaction inquiry or on the order inquiry.
            type: string
            enum: [APPROVED, WAITING, PARTIAL, VALIDATION_FAILED, PROCESSING_FAILED, DECLINED]
            example: 'APPROVED'
          transactionState:
            description: Shows the state of the current transaction.
            type: string
            enum: [AUTHORIZED, CAPTURED, DECLINED, CHECKED, COMPLETED_GET, INITIALIZED, PENDING, READY, TEMPLATE, SETTLED, VOIDED, WAITING]
            example: 'AUTHORIZED'
          paymentAccountReferenceNumber:
            description: Payment Account Reference Number from response, if supplied.
            type: string
            maxLength: 30
            example: '1234001AB101112131415161718CV'
          secure3dResponse:
            $ref: '#/components/schemas/Secure3dResponse'
          standinResponseDetails:
            $ref: '#/components/schemas/StandinResponseDetails'
          redirectURL:
            description: The endpoint redirection URL.
            type: string
            example: 'http://pay.issuer-bank.com/sessionID=123&sharedKey=456'
          authenticationResponse:
            $ref: '#/components/schemas/Secure3DAuthenticationResponse'
          schemeTransactionId:
            description: The transaction ID received from schemes for the initial transaction of card on file flows.
            type: string
            maxLength: 40
            example: '019078743804756'
          processor:
            $ref: '#/components/schemas/ProcessorData'
          additionalDetails:
            $ref: '#/components/schemas/AdditionalTransactionDetails'
          accountUpdaterResponse:
            $ref: '#/components/schemas/AccountUpdaterResponse'
          achResponse:
            $ref: '#/components/schemas/AchResponse'
          currencyConversionResponse:
            $ref: '#/components/schemas/CurrencyConversionResponse'
          steps:
            description: 'Steps to be performed by the payer.'
            type: array
            items:
              $ref: '#/components/schemas/PaymentStepRequest'
      example:
        clientRequestId: '30dd879c-ee2f-11db-8314-0800200c9a66'
        apiTraceId: 'rrt-0c80a3403e2c2def0-d-ea-28805-6810951-2'
        ipgTransactionId: '838916029301'
        transactionType: 'SALE'
        transactionTime: 1518811817
        approvedAmount:
          total: 10.24
          currency: 'USD'
        transactionStatus: 'APPROVED'
        schemeTransactionId: '019078743804756'
        processor:
          responseCode: '00'
          responseMessage: 'APPROVED'
          authorizationCode: 'OK7118'
    RecurringPaymentDetails:
      description: Details about existing gateway schedule.
      properties:
        storeId:
          description: Store ID number.
          type: string
          maxLength: 20
          example: '1109959991'
        purchaseOrderNumber:
          description: Purchase order number.
          type: string
          example: '123055342'
        invoiceNumber:
          description: Invoice number.
          type: string
          example: '96126098'
        creationDate:
          description: Date recurring payment was created.
          type: string
          example: '2018-10-25'
        startDate:
          description: Date of mandate signature.
          type: string
          example: '2018-10-25'
        nextAttemptDate:
          description: Date of next transaction process attempt.
          type: string
          example: '2018-10-25'
        transactionAmount:
          $ref: '#/components/schemas/Amount'
        paymentMethodDetails:
          $ref: '#/components/schemas/PaymentMethodDetails'
        frequency:
          $ref: '#/components/schemas/Frequency'
        numberOfPayments:
          description: Number of times the recurring payment will process.
          type: integer
          format: int32
          minimum: 1
          maximum: 999
          example: 10
        runCount:
          description: Times the recurring payment has already run.
          type: integer
          format: int32
          minimum: 0
          maximum: 999
          example: 10
        state:
          description: State of the recurring payment.
          type: string
          enum: [Installed, Inactivated, Cancelled]
          example: 'Installed'
        comments:
          description: User supplied comments.
          type: string
          example: 'This scheduled payment series is to pay for the thing.'
      example:
        storeId: '1109959991'
        invoiceNumber: '96126098'
        creationDate: '2018-10-25'
        startDate: '2018-10-25'
        transactionAmount:
          total: 10.24
          currency: 'USD'
        frequency:
          every: 3
          unit: 'DAY'
        numberOfPayments: 10
        runCount: 3
        state: 'Installed'
        comments: 'This scheduled payment series is to pay for the thing.'
    PaymentMethodPaymentSchedulesRequest:
      description: Request to create a new payment schedule using a payment method.
      allOf:
        - $ref: '#/components/schemas/PaymentSchedulesRequest'
        - type: object
          required:
            - paymentMethod
          properties:
            paymentMethod:
              $ref: '#/components/schemas/PaymentCardPaymentMethod'
      example:
        requestType: 'PaymentMethodPaymentSchedulesRequest'
        transactionAmount:
          total: "25.24"
          currency: 'GBP'
        startDate: '2021-12-31'
        frequency:
          every: 1
          unit: 'MONTH'
        paymentMethod:
          paymentCard:
            number: '5424180279791732'
            expiryDate:
              month: '12'
              year: '25'
            securityCode: '977'
            brand: 'VISA'
    ReferencedOrderPaymentSchedulesRequest:
      description: Request to create a new payment schedule using a referenced order ID.
      allOf:
        - $ref: '#/components/schemas/PaymentSchedulesRequest'
        - type: object
          required:
            - referencedOrderId
          properties:
            referencedOrderId:
              description: Order ID used to create recurring payment from existing transaction.
              type: string
              pattern: '^(?!\s*$).+'
              example: 'R-f9c2c198-b7cc-491a-a711-93d22fd0e589'
      example:
        requestType: 'ReferencedOrderPaymentSchedulesRequest'
        referencedOrderId: 'R-f9c2c198-b7cc-491a-a711-93d22fd0e589'
        startDate: '2021-12-31'
        numberOfPayments: 10
        maximumFailures: 1
        invoiceNumber: '96126098'
        purchaseOrderNumber: '123055342'
        transactionOrigin: 'ECOM'
        dynamicMerchantName: 'MyWebsite'
        frequency:
          every: 1
          unit: 'MONTH'
        transactionAmount:
          total: "25.24"
          currency: 'GBP'
        clientLocale:
          language: 'EN'
          country: 'USA'
    PaymentSchedulesRequest:
      description: Request to create a gateway schedule. Abstract class, do not use this class directly, use one of its children.
      required:
        - requestType
        - transactionAmount
        - startDate
        - frequency
      discriminator:
        propertyName: requestType
      properties:
        requestType:
          description: Object name of the payment schedules request.
          type: string
          example: 'PaymentMethodPaymentSchedulesRequest'
        storeId:
          description: Store ID number.
          type: string
          maxLength: 20
          example: '1109959991'
        startDate:
          description: Date of mandate signature.
          type: string
          format: date
          example: '2018-10-25'
        numberOfPayments:
          description: Number of times the recurring payment will process.
          type: integer
          format: int32
          minimum: 1
          maximum: 999
          example: 10
        maximumFailures:
          description: Number of failures that can be encountered before re-tries cease.
          type: integer
          format: int32
          minimum: 1
          maximum: 999
          example: 1
        invoiceNumber:
          description: Invoice number.
          type: string
          example: '96126098'
        purchaseOrderNumber:
          description: Purchase order number.
          type: string
          example: '123055342'
        transactionOrigin:
          $ref: '#/components/schemas/TransactionOrigin'
        dynamicMerchantName:
          description: Dynamic merchant name for the cardholder's statement.
          type: string
          example: 'MyWebsite'
        frequency:
          $ref: '#/components/schemas/Frequency'
        transactionAmount:
          $ref: '#/components/schemas/Amount'
        clientLocale:
          $ref: '#/components/schemas/ClientLocale'
        orderId:
          description: Note - Client Order ID if supplied by client. If not supplied by client, IPG will generate. The first 12 alphanumeric digits are passed down to Fiserv Enterprise reporting tool, Clientline and Data File Manager (DFM).
          type: string
          example: '123456'
        billing:
          $ref: '#/components/schemas/Billing'
        shipping:
          $ref: '#/components/schemas/Shipping'
        comments:
          description: User supplied comments.
          type: string
          example: 'This scheduled payment series is to pay for the thing.'
      example:
        requestType: 'PaymentMethodPaymentSchedulesRequest'
        startDate: '2021-12-31'
        numberOfPayments: 10
        maximumFailures: 1
        invoiceNumber: '96126098'
        purchaseOrderNumber: '123055342'
        transactionOrigin: 'ECOM'
        dynamicMerchantName: 'MyWebsite'
        frequency:
          every: 1
          unit: 'MONTH'
        paymentMethod:
          paymentCard:
            number: "5426064000424979"
            expiryDate:
              month: "12"
              year: "25"
            securityCode: "147"
            cardFunction: "CREDIT"
        transactionAmount:
          total: "25.24"
          currency: 'GBP'
        clientLocale:
          language: 'EN'
          country: 'USA'
    Frequency:
      description: How often payments are sent.
      required:
        - every
        - unit
      properties:
        every:
          description: Rate of frequency.
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          example: 10
        unit:
          description: Unit which defines the frequency.
          type: string
          enum: [DAY, WEEK, MONTH, YEAR]
          example: 'MONTH'
      example:
        every: 3
        unit: 'DAY'
    ClientLocale:
      description: Country and language of client.
      required:
        - language
        - country
      properties:
        language:
          description: Language used by client.
          type: string
          pattern: '^(?!\s*$).+'
          example: 'en'
        country:
          description: Country of the client.
          type: string
          pattern: '^(?!\s*$).+'
          example: 'GB'
      example:
        language: 'en'
        country: 'GB'
    AccessTokenRequest:
      description: Access token generation request.
      required:
        - domain
        - token
        - publicKeyRequired
      properties:
        domain:
          description: Domain name.
          type: string
          example: 'somedomain.com'
        token:
          description: The token value.
          type: string
          example: 'gfgF92JHDJFjxcJHCQ23IbI12D'
        publicKeyRequired:
          description: Indicates whether public key is requested or not.
          type: boolean
          example: true
      example:
        domain: 'somedomain.com'
        token: 'gfgF92JHDJFjxcJHCQ23IbI12D'
        publicKeyRequired: false
    AccessTokenResponse:
      description: Access token generation response.
      properties:
        tokenId:
          description: Access token for authentication.
          type: string
          example: 'gliF92ypj9cKRWUP8lpRIbI3bhNf'
        status:
          description: The token status.
          type: string
          example: 'ACTIVE'
        issuedOn:
          description: Access token issued time in milliseconds.
          type: string
          example: '1579021570941'
        expiresInSeconds:
          description: Access token expiration time.
          type: string
          example: '899'
        publicKeyBase64:
          description: Public key to encrypt data.
          type: string
          example: 'LS0tLS1CRUdJTiBQLbnFSNXRnVmc4U08LS1FTkQgUFVCTElDIEtFWS0tLS0t'
        algorithm:
          description: Encyption algorithym. One way ECDH 256 bit key.
          type: string
          example: 'RSA/NONE/PKCS1PADDING'
        clientRequestId:
          description: Echoes back the value from the request header for tracking.
          type: string
          example: '30dd879c-ee2f-11db-8314-0800200c9a66'
      example:
        tokenId: 'gliF92ypj9cKRWUP8lpRIbI3bhNf'
        status: 'ACTIVE'
        issuedOn: '1579021570941'
        expiresInSeconds: '899'
        publicKeyBase64: 'LS0tLS1CRUdJTiBQLbnFSNXRnVmc4U08LS1FTkQgUFVCTElDIEtFWS0tLS0t'
        algorithm: 'RSA/NONE/PKCS1PADDING'
        clientRequestId: '30dd879c-ee2f-11db-8314-0800200c9a66'
    CardVerificationRequest:
      description: Request to verify card validity.
      required:
      - paymentCard
      properties:
        paymentCard:
          $ref: '#/components/schemas/PaymentCard'
        billingAddress:
          $ref: '#/components/schemas/Address'
        storeId:
          description: An optional outlet ID for clients that support multiple stores in the same app.
          type: string
          maxLength: 20
          example: '12345500000'
      example:
        paymentCard:
          number: '4035874000424977'
          expiryDate:
            month: '12'
            year: '25'
          securityCode: '977'
        billingAddress:
          address1: '5565 Glenridge Conn'
          city: 'Atlanta'
          postalCode: '30342'
          country: 'USA'
    AccountVerificationRequest:
      description: Request to verify payment card or payment token. Abstract class, do not use this class directly, use one of its children.
      type: object
      required:
        - requestType
      discriminator:
        propertyName: requestType
      properties:
        requestType:
          description: Object name of the account verification request.
          type: string
          example: 'PaymentCardVerificationRequest'
        billingAddress:
          $ref: '#/components/schemas/Address'
        storeId:
          description: An optional outlet ID for clients that support multiple stores in the same app.
          type: string
          maxLength: 20
          example: '12345500000'
        merchantTransactionId:
            description: The unique merchant transaction ID from the request, if supplied.
            type: string
            maxLength: 40
            example: 'lsk23532djljff3'
        additionalDetails:
          $ref: '#/components/schemas/AdditionalDetails'
      example:
        requestType: 'PaymentCardVerificationRequest'
        paymentCard:
          number: '4035874000424977'
          expiryDate:
            month: '12'
            year: '25'
          securityCode: '977'
        billingAddress:
          address1: '5565 Glenridge Conn'
          city: 'Atlanta'
          postalCode: '30342'
          country: 'USA'
    PaymentCardVerificationRequest:
      description: Used to request account verification using a payment card. The expiryDate in paymentCard object is required to perform a PaymentCardVerificationRequest.
      allOf:
      - $ref: '#/components/schemas/AccountVerificationRequest'
      - type: object
        required:
        - paymentCard
        properties:
          paymentCard:
            $ref: '#/components/schemas/PaymentCard'
        example:
          requestType: 'PaymentCardVerificationRequest'
          paymentCard:
            number: '4035874000424977'
            expiryDate:
              month: '12'
              year: '25'
            securityCode: '977'
          billingAddress:
            address1: '5565 Glenridge Conn'
            city: 'Atlanta'
            postalCode: '30342'
            country: 'USA'
    PaymentTokenVerificationRequest:
      description: Used to request account verification using a payment token.
      allOf:
      - $ref: '#/components/schemas/AccountVerificationRequest'
      - type: object
        required:
        - paymentToken
        properties:
          paymentToken:
            $ref: '#/components/schemas/UsePaymentToken'
        example:
          requestType: 'PaymentTokenVerificationRequest'
          paymentToken:
            value: '1235325235236'
            function: 'DEBIT'
            securityCode: '977'
          billingAddress:
            address1: '5565 Glenridge Conn'
            city: 'Atlanta'
            postalCode: '30342'
            country: 'USA'
    ReferencedOrderPaymentTokenizationRequest:
      description: Used to generate payment tokens with an existing order ID.
      allOf:
      - $ref: '#/components/schemas/PaymentTokenizationRequest'
      - type: object
        required:
        - referencedOrderId
        properties:
          referencedOrderId:
            description: Retrieves the payment instrument information from an existing order.
            type: string
            pattern: '^(?!\s*$).+'
            example: 'R-f9c2c198-b7cc-491a-a711-93d22fd0e589'
      example:
        requestType: ReferencedOrderPaymentTokenizationRequest
        createToken:
          value: '234ljl124l12'
          reusable: true
          declineDuplicates: false
        referencedOrderId: 'R-f9c2c198-b7cc-491a-a711-93d22fd0e589'
        accountVerification: true
    PaymentCardPaymentTokenizationRequest:
      description: Used to generate payment tokens during payment.
      allOf:
      - $ref: '#/components/schemas/PaymentTokenizationRequest'
      - type: object
        required:
        - paymentCard
        properties:
          paymentCard:
            $ref: '#/components/schemas/PaymentCard'
      example:
        requestType: 'PaymentCardPaymentTokenizationRequest'
        paymentCard:
          number: '4035874000424977'
          expiryDate:
            month: '12'
            year: '25'
          securityCode: '977'
        billingAddress:
          address1: '5565 Glenridge Conn'
          city: 'Atlanta'
          postalCode: '30342'
          country: 'USA'
        createToken:
          value: '234ljl124l12'
          reusable: true
          declineDuplicates: false
        accountVerification: true
    PaymentDevicePaymentTokenizationRequest:
      description: Used to generate payment tokens during payment using a payment device.
      allOf:
      - $ref: '#/components/schemas/PaymentTokenizationRequest'
      - type: object
        required:
        - paymentDevice
        properties:
          paymentDevice:
            $ref: '#/components/schemas/PaymentDevice'
      example:
        requestType: 'PaymentDevicePaymentTokenizationRequest'
        paymentDevice:
          deviceType: 'SWIPE'
          data: '02A600C0170018008292;5424********1732=1810?*B73CD8C26233D4FFEC5500ED394439D97DDA5F530942D21D0000000000000000000000000000000000000000363434543035353734326299492410027300000260DC03'
          securityCode: '977'
          cardholderName: 'First Cardholder'
          cardFunction: 'CREDIT'
          brand: 'VISA'
        billingAddress:
          address1: '5565 Glenridge Conn'
          city: 'Atlanta'
          postalCode: '30342'
          country: 'USA'
        createToken:
          value: '234ljl124l122'
          reusable: true
          declineDuplicates: false
        accountVerification: true
    PaymentCardPaymentTokenUpdateRequest:
      description: Request to update payment token for one or more cards.
      discriminator:
        propertyName: requestType
      required:
      - requestType
      - paymentTokens
      properties:
        requestType:
          description: Object name of tokenization request.
          type: string
          example: 'PaymentCardPaymentTokenUpdateRequest'
        storeId:
          description: An optional outlet ID for clients that support multiple stores in the same app.
          type: string
          maxLength: 20
          example: '12345500000'
        paymentTokens:
          description: List of payment tokens to be updated in the request.
          type: array
          minItems: 1
          maxItems: 1000
          items:
            $ref: '#/components/schemas/UpdatePaymentToken'
      example:
        requestType: 'PaymentCardPaymentTokenUpdateRequest'
        paymentTokens:
         - value: '1751905117310026'
           reusable: true
           declineDuplicates: false
           paymentCard:
             number: '5424180279791732'
             expiryDate:
               month: '03'
               year: '25'
             securityCode: '977'
         - value: '9877hkhk68688888ffgh'
           reusable: true
           declineDuplicates: false
           paymentCard:
             number: '4012000033330026'
             expiryDate:
               month: '10'
               year: '22'
             securityCode: '123'
    PaymentTokenizationRequest:
      description: Used to generate payment tokens. Abstract class, do not use this class directly, use one of its children.
      discriminator:
        propertyName: requestType
      required:
      - requestType
      - createToken
      properties:
        requestType:
          type: string
          description: Object name of tokenization request.
          example: 'PaymentCardPaymentTokenizationRequest'
        storeId:
          description: An optional outlet ID for clients that support multiple stores in the same app.
          type: string
          maxLength: 20
          example: '12345500000'
        billingAddress:
          $ref: '#/components/schemas/Address'
        createToken:
          $ref: '#/components/schemas/CreatePaymentToken'
        accountVerification:
          description: If the account should be verified prior to token creation.
          type: boolean
          default: false
          example: true
        merchantTransactionId:
            description: The unique merchant transaction ID from the request, if supplied.
            type: string
            maxLength: 40
            example: 'lsk23532djljff3'
        additionalDetails:
          $ref: '#/components/schemas/AdditionalDetails'
      example:
        requestType: 'PaymentCardPaymentTokenizationRequest'
        paymentCard:
          number: '4012000033330026'
          expiryDate:
            month: '12'
            year: '24'
        createToken:
          reusable: true
          declineDuplicates: false
        accountVerification: false
        additionalDetails:
          operatorId: 'OPERATOR_ID_123XXX'
          salesSystemId: 'W-EU-H3866-FLS2'
    UsePaymentToken:
      description: Payment token usage details.
      required:
        - value
      properties:
        value:
          description: Client-supplied payment token value.
          type: string
          pattern: '^(?!\s*$).+'
          example: '1235325235236'
        tokenOriginStoreId:
          description: The ID of a same store (or) sibling store in a hierarchy for which the token was originally created.
          type: string
          maxLength: 20
          example: '12345500001'
        function:
          $ref: '#/components/schemas/CardFunction'
        securityCode:
          description: Card verification value/number.
          type: string
          minLength: 3
          maxLength: 4
          example: '977'
        expiryDate:
          $ref: '#/components/schemas/Expiration'
      example:
        value: '1235325235236'
        tokenOriginStoreId: '12345500001'
        function: 'DEBIT'
        securityCode: '977'
        expiryDate:
          month: '12'
          year: '24'
    PaymentTokenDetails:
      description: Response details for payment token creation.
      allOf:
      - $ref: '#/components/schemas/CreatePaymentToken'
      - type: object
        properties:
          last4:
            description: The last 4 numbers of a payment card.
            type: string
            example: '4997'
          brand:
            description: Card brand, only for tokenization with payment.
            type: string
            example: 'VISA'
          accountVerification:
            description: If the account the token was created from has been verified.
            type: boolean
            example: true
          type:
            description: 'Inidcates the type of tokenization source.'
            type: string
            example: 'PAYMENT_CARD'
      example:
        value: '234ljl124l12'
        reusable: true
        declineDuplicates: false
        last4: '4997'
        brand: 'VISA'
        accountVerification: true
        type: 'PAYMENT_CARD'
    CreatePaymentToken:
      description: Use this model to create a payment token.
      properties:
        value:
          description: Client-supplied payment token value. Only applicable for DataVault tokenization scheme.
          type: string
          example: '234ljl124l12'
        reusable:
          description: If the token is reusable.
          type: boolean
          default: true
          example: true
        declineDuplicates:
          description: Decline duplicate payment info if client token is supplied.
          type: boolean
          default: false
          example: false
      example:
          value: '234ljl124l12'
          reusable: true
          declineDuplicates: false
    UpdatePaymentToken:
      description: Use this model to Update payment token.
      required:
      - value
      - paymentCard
      properties:
        value:
          description: Client-supplied payment token value.
          type: string
          example: '234ljl124l12'
        reusable:
          description: If the token is reusable.
          type: boolean
          default: true
          example: true
        declineDuplicates:
          description: Decline duplicate payment info if client token is supplied.
          type: boolean
          default: false
          example: false
        paymentCard:
          $ref: '#/components/schemas/PaymentCard'
      example:
        value: '3425345345yygg'
        reusable: true
        declineDuplicates: false
        paymentCard:
          number: '5424180279791732'
          expiryDate:
            month: '12'
            year: '24'
            securityCode: '977'
    CardFunction:
      description: Card function. This field is required when performing transactions for Brazil merchants.
      type: string
      enum: [CREDIT, DEBIT, PREPAID, VOUCHER, UNDEFINED]
      example: 'DEBIT'
    ResponseType:
      description: The type of the response.
      type: string
      enum: [BadRequest, Unauthenticated, Unauthorized, NotFound, GatewayDeclined, EndpointDeclined, ServerError, EndpointCommunicationError, UnsupportedMediaType]
      example: 'Unauthenticated'
    ProcessorData:
      description: Model for processor data.
      properties:
        referenceNumber:
          description: Reference transaction ID.
          type: string
          example: '811720726601'
        authorizationCode:
          description: Code returned to confirm transaction.
          type: string
          example: 'OK7118'
        responseCode:
          description: Response code from endpoints.
          type: string
          example: '00'
        network:
          description: Network used for transaction.
          type: string
          example: 'NYCE'
        associationResponseCode:
          description: Raw response code from issuer.
          type: string
          example: '000'
        responseMessage:
          description: Message returned from endpoints.
          type: string
          example: 'Amount specified exceeds allowable limit.'
        avsResponse:
          $ref: '#/components/schemas/AVSResponse'
        cardholderInfoResponse:
          $ref: '#/components/schemas/CardholderInfoResponse'
        securityCodeResponse:
          description: Code returned for CVV.
          type: string
          enum: [MATCHED, NOT_MATCHED, NOT_PROCESSED, NOT_PRESENT, NOT_CERTIFIED, NOT_CHECKED]
          example: 'NOT_MATCHED'
        merchantAdviceCodeIndicator:
          description: Code to map merchant advice code to ISO specification.
          type: string
          pattern: '[0-9]{2}'
          example: '01'
        responseIndicator:
          description: Indicates whether the transaction was routed through the payment card's own network or through a different network.
          type: string
          example: '0100'
        debitReceiptNumber:
          description:  Receipt number from debit network provider.
          type: string
          example: '123456'
        transactionIntegrityClass:
          description:  MasterCard provided Transaction Integrity Class for Point of Sale (POS) Purchase and Purchase with Cash Back transactions initiated on the Authorization Platform.
          type: string
          example: 'A1'
      example:
        responseCode: '00'
        responseMessage: 'APPROVED'
        authorizationCode: 'OK7118'
        network: 'NYCE'
    Error:
      description: Error information.
      properties:
        code:
          description: Uniquely identifies an error condition. Client applications need to read and handle errors based on this.
          type: string
          example: '2303'
        message:
          description: A generic description of the error condition.
          type: string
          example: 'Invalid credit card number'
        details:
          description: Detailed information about message format errors.
          type: array
          items:
            type: object
            properties:
              field:
                description: The property or attribute associated with the error.
                type: string
                example: 'PaymentCard.number'
              message:
                description: Information specific to a property or attribute.
                type: string
                example: 'may not be null'
      example:
        code: '2303'
        message: 'Invalid credit card number'
    PaymentCardForcedTicketTransaction:
      description: Request to create forced ticket primary transaction.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        required:
        - paymentMethod
        - referenceNumber
        properties:
          paymentMethod:
            $ref: '#/components/schemas/PaymentCardPaymentMethod'
          referenceNumber:
            description: Stores the six-digit reference number you have received as the result of a successful external authorization (e.g. by phone). The gateway needs this number for uniquely mapping a ForcedTicket transaction to a previously performed external authorization.
            type: string
            maxLength: 8
            pattern: '^(?!\s*$).+'
            example: '123455'
      example:
        transactionAmount:
          total: '12.04'
          currency: 'USD'
        requestType: 'PaymentCardForcedTicketTransaction'
        paymentMethod:
          paymentCard:
            number: '5424180279791732'
            securityCode: '977'
            expiryDate:
              month: '12'
              year: '24'
        referenceNumber: '123455'
    PaymentCardPayerAuthTransaction:
      description: Request to create payer auth primary transaction.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        required:
        - paymentMethod
        properties:
          paymentMethod:
            $ref: '#/components/schemas/PaymentCardPaymentMethod'
          currencyConversion:
            $ref: '#/components/schemas/CurrencyConversion'
          authenticationRequest:
            $ref: '#/components/schemas/AuthenticationRequest'
          authenticationResult:
            $ref: '#/components/schemas/AuthenticationResult'
      example:
        transactionAmount:
          total: '12.04'
          currency: 'USD'
        requestType: 'PaymentCardPayerAuthTransaction'
        paymentMethod:
          paymentCard:
            number: '5424180279791732'
            securityCode: '977'
            expiryDate:
              month: '12'
              year: '24'
    PaypalCreditTransaction:
      description: Request to create credit transaction using PayPal.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        required:
        - paymentMethod
        properties:
          paymentMethod:
            $ref: '#/components/schemas/PayPalPaymentMethod'
      example:
        transactionAmount:
          total: '12.04'
          currency: 'USD'
        requestType: 'PaypalCreditTransaction'
        paymentMethod:
          payPal:
            recipientEmail: 'John@tester.com'
    ApmSaleTransaction:
      description: Request to create sale transaction using an alternative payment method (see methods supported by this transaction type below).
      allOf:
        - $ref: '#/components/schemas/PrimaryTransaction'
        - type: object
          required:
            - paymentMethod
          properties:
            paymentMethod:
              $ref: '#/components/schemas/ApmPaymentMethod'
      example:
        transactionAmount:
          total: '40.00'
          currency: 'PLN'
        requestType: 'ApmSaleTransaction'
        paymentMethod:
          'type': 'BLIK'
          steps:
            - 'type': provide-detail
              detailKey: BLIK_CODE
              detailValue: 777123
            - 'type': provide-detail
              detailKey: user-agent
              detailValue: 'SonyEricssonT68/R201A'
    ChinaPnRSaleTransaction: # APAC only
      description: Request to create sale transaction using China PnR.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        required:
        - paymentMethod
        properties:
          paymentMethod:
            $ref: '#/components/schemas/ChinaDomesticPaymentMethod'
      example:
        transactionAmount:
          total: '40.00'
          currency: 'CNY'
        requestType: 'ChinaPnRSaleTransaction'
        paymentMethod:
          chinaDomestic:
            productCode: 'R2D2C3PO'
            productQuantity: 10
            productPrice: 3.20
            productDescription: 'Best product ever'
            redirectURL: 'www.urlredirectedto.com'
          brand: 'WECHAT_DOMESTIC'
    AliPaySaleTransaction: # APAC and NA only
      description: Request to create sale transaction using AliPay.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        required:
        - paymentMethod
        properties:
          paymentMethod:
            $ref: '#/components/schemas/AliPayPaymentMethod'
      example:
        transactionAmount:
          total: '16.00'
          currency: 'USD'
        requestType: 'AliPaySaleTransaction'
        aliPayPaymentMethod:
          paymentDataType: 'BARCODE'
          paymentData: '283047752805604753'
          orderTitle: 'My Purchase'
          orderDetails: 'These are details about my purchase.'
    SepaSaleTransaction: # EMEA only
      description: Request to create sale transaction using sepa.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        required:
        - paymentMethod
        properties:
          paymentMethod:
            $ref: '#/components/schemas/SepaSalePaymentMethod'
      example:
        transactionAmount:
          total: '23.00'
          currency: 'EUR'
        requestType: 'SepaSaleTransaction'
        sepa:
          iban: 'DE34500100600032121604'
          name: 'John Doe'
          email: 'john.doe@test.com'
          mandate:
            reference: '3RBQVEE'
            url: 'https://www.firstdata.com'
            signatureDate: '2017-07-15'
            type: 'SINGLE'
        order:
          billing:
            address:
              address1: '102,1st Floor'
              address2: '123 Main St.'
              postalCode: '30303'
              city: 'Sandy Springs'
              country: 'DEU'
    SepaCreditTransaction: # EMEA only
      description: Request to create credit transaction using sepa.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        required:
        - paymentMethod
        properties:
          paymentMethod:
            $ref: '#/components/schemas/SepaCreditPaymentMethod'
      example:
        transactionAmount:
          total: '23.00'
          currency: 'EUR'
        requestType: 'SepaCreditTransaction'
        sepa:
          iban: 'DE34500100600032121604'
          name: 'John Doe'
        order:
          billing:
            address:
              address1: '102,1st Floor'
              address2: '123 Main St.'
              postalCode: '30303'
              city: 'Sandy Springs'
              country: 'DEU'
    WalletSaleTransaction:
      description: Request to create sale primary transaction using digital wallet.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        required:
        - walletPaymentMethod
        properties:
          walletPaymentMethod:
            $ref: '#/components/schemas/WalletPaymentMethod'
          paymentFacilitator:
            $ref: '#/components/schemas/PaymentFacilitator'
      example:
        requestType: WalletSaleTransaction
        walletPaymentMethod:
          walletType: 'EncryptedApplePayWalletPaymentMethod'
          encryptedApplePay:
            data: 'NdCmVw5nMjQq746HYc/VbiZcQZ/zFzeEcM1wVMPruEG4/C/EFhobSkwB5JZJU+t6JuDVXUBiRYuOOC8FTYd+qIm6ckktid9aiGh0f2NDP0INSr59QXmr389RonyUfRYKnBmwsh5UqtI7Iz0AmMtl1PWMdxcCewtjuffs79ahTnFgXsRN+ynuhyDfbdRanlTnYKGoTeVh9eJfheJ1wquO+jiGj+npJ/Oh9bAdlw7iEHrYO2aUkgaMyXZ3foXRAJeimQVQS1y8lU1PPq62zpPrFzidbnnU5fK25pvGFjOdmLsBELZPk5thQEkSaA9p1LSKzWSesHhi0BxZaFPXSA6ANXvYIU2AT0lG+0O0w1URA5Sinyj3YDZVqjuir6rzNN9bB2U2nTQnKMbuGLMS20K8fUKZN/YLJh+AtE6J69+VVSU95mE1nOb8hyabz6E5RmnC5Ze2k6F/hQ75ig=='
            header:
              applicationDataHash: '94ee059335e587e501cc4bf90613e0814f00a7b08bc7c648fd865a2af6a22cc2'
              ephemeralPublicKey: 'MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEiaU1SbkYTJy/j5L1t51vtGDh4KlNl5MFPWzo/C8r0WcrktWriz5pdRaDVUDvU++KlDu2iuQsd2xSNKJlFscbDQ=='
              publicKeyHash: 'YmSWN7lj4+A6fVJVPicP8TgS7gI7ougD8rEWB5LXtMM='
              transactionId: '31323334353637'
            signature: 'MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIIB0zCCAXkCAQEwCQYHKoZIzj0EATB2MQswCQYDVQQGEwJVUzELMAkGA1UECAwCTkoxFDASBgNVBAcMC0plcnNleSBDaXR5MRMwEQYDVQQKDApGaXJzdCBEYXRhMRIwEAYDVQQLDAlGaXJzdCBBUEkxGzAZBgNVBAMMEmQxZHZ0bDEwMDAuMWRjLmNvbTAeFw0xNTA3MjMxNjQxMDNaFw0xOTA3MjIxNjQxMDNaMHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAErnHhPM18HFbOomJMUiLiPL7nrJuWvfPy0Gg3xsX3m8q0oWhTs1QcQDTT+TR3yh4sDRPqXnsTUwcvbrCOzdUEeTAJBgcqhkjOPQQBA0kAMEYCIQDrC1z2JTx1jZPvllpnkxPEzBGk9BhTCkEB58j/Cv+sXQIhAKGongoz++3tJroo1GxnwvzK/Qmc4P1K2lHoh9biZeNhAAAxggFUMIIBUAIBATB7MHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tAgEBMA0GCWCGSAFlAwQCAQUAoGkwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTUwODEyMTczMTAwWjAvBgkqhkiG9w0BCQQxIgQgJyjKLiGQo3I1ZbfHSmF2XCZ8dNlcZyohziuXO48EKwgwCgYIKoZIzj0EAwIESDBGAiEAznKDYEz9MsC+r1g6e4LR1DTaQOl+X2rVNkWnKDpc1EQCIQCmK48ChHoz4HWnUnW5XqaGWOUXKHQvUgeqFr/jgBUzegAAAAAAAA=='
            applicationData: 'VEVTVA=='
            merchantId: 'order-1'
            version: 'EC_v1'
        paymentFacilitator:
          externalMerchantId: '12345'
          paymentFacilitatorId: '123123123'
          saleOrganizationId: '123124214'
          name: 'First Reseller'
          subMerchantData:
            mcc: '1432'
            legalName: 'First Merchant'
            timezone: 'Europe/London'
            address:
              address1: '123 Main St.'
              city: 'Sandy Springs'
              region: 'Georgia'
              postalCode: '30303'
              country: 'USA'
            document:
              type: 'NATIONAL_IDENTITY'
              number: '12345666544'
            merchantId: '12435325235'
    WalletPreAuthTransaction:
      description: Request to create preAuth primary transaction using digital wallet.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        required:
        - walletPaymentMethod
        properties:
          walletPaymentMethod:
            $ref: '#/components/schemas/WalletPaymentMethod'
          splitShipment:
            $ref: '#/components/schemas/SplitShipment'
          paymentFacilitator:
            $ref: '#/components/schemas/PaymentFacilitator'
          decrementalFlag:
            $ref: '#/components/schemas/DecrementalPreAuthFlag'
      example:
        requestType: WalletPreAuthTransaction
        walletPaymentMethod:
          walletType: 'EncryptedGooglePayWalletPaymentMethod'
          encryptedGooglePay:
            data:
              encryptedMessage: '8nxjB9mr2tWZeDRQRcGN91UUnb7AioGp3oRo8kmQ6lyvJZiqD7PJlbRCYElNqUmr6Z8zK7b2gO9MKOjpnTCqH0qAe2vuIlwNXB60M2Lh7Qfl3bVgWzwF/FfFcenVW381hoItYi8AjWnWoydz1XMTEv2qhqUG03mEnRXdMyDyk6KKZXoW8Qc0p1F1thbxxu8weU8CZbZsWGGTjB42cilIqLVbribcOAG8Oas1AcgefFsu2hwp4gdSuOg7wmeSV7XKsGQzzVy85qtjuqET2XYzJE3K/Wh9QKkhu5P9Ms5s1+Smr2IjRyidqQa88SxQplrVoo9+PvT0bxFcMspBmO3pLkuaZSUBy++dL2fefcxNJvGCFfFhdxW9DojuuQxgpeu7RAQUsGLyFmr/4ZfBxt882xTmpX9MRx5CAudl9qUgBfKdwWwMX35qSbDTm1ju5XXzNh94VebjD3bB9Zj8qgbmUOr/+6OQLhoFJyBCXgx3EEH8hBwNVFrss/SLwQvFhZh62eO6lOtnmbOtP1yTDDVqGDBfai5SwAmM+KTcc9SGv/xDC+cWe8ck+aCBkG4HoRPapUVMZ3JIgV7yzTsVLJE\\u003d\\'
              ephemeralPublicKey: 'BGH3fRFdoAobYrAlxnZOCYzkH84Cna92IZxtgsU36CMDaqSaDYb9/LsY8qw+vMtlBnwsUg/YVMOeeKp+qDkOWb4\\u003d\\'
              tag: 'nvmOUNpnOTZULLhMxT/hWCHzH/4f7gGpfvQgwl3p8ng\\u003d\\'
            signature: 'MEUCIFWTRWUZAOM5nfJC79FtJm56olnbwG4H5uWWxAUWAquiAiEA24j/BcOroeISsdJzYsyoVi8wzu4tnmKw+jdsGfuvPko='
            version: 'ECv1'
        splitShipment:
          totalCount: 1
          finalShipment: true
    PaymentTokenCreditTransaction:
      description: Request to create credit transaction using payment token.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        required:
        - paymentMethod
        properties:
          paymentMethod:
            $ref: '#/components/schemas/PaymentTokenPaymentMethod'
          currencyConversion:
            $ref: '#/components/schemas/CurrencyConversion'
      example:
        transactionAmount:
          total: '12.04'
          currency: 'USD'
        requestType: 'PaymentTokenCreditTransaction'
        paymentMethod:
          paymentToken:
              value: '1235325235236'
              function: 'DEBIT'
              securityCode: '977'
    PaymentTokenPreAuthTransaction:
      description: Request to create pre-auth transaction using payment token.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        required:
        - paymentMethod
        properties:
          paymentMethod:
            $ref: '#/components/schemas/PaymentTokenPaymentMethod'
          storedCredentials:
            $ref: '#/components/schemas/StoredCredential'
          splitShipment:
            $ref: '#/components/schemas/SplitShipment'
          settlementSplit:
            $ref: '#/components/schemas/SettlementSplit'
          authenticationRequest:
            $ref: '#/components/schemas/AuthenticationRequest'
          authenticationResult:
            $ref: '#/components/schemas/AuthenticationResult'
          decrementalFlag:
            $ref: '#/components/schemas/DecrementalPreAuthFlag'
      example:
        transactionAmount:
          total: '12.04'
          currency: 'USD'
        requestType: 'PaymentTokenPreAuthTransaction'
        paymentMethod:
          paymentToken:
              value: '1235325235236'
              function: 'DEBIT'
              securityCode: '977'
        splitShipment:
          totalCount: 1
          finalShipment: true
    PaymentTokenSaleTransaction:
      description: Request to create sale transaction using payment token.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        required:
        - paymentMethod
        properties:
          paymentMethod:
            $ref: '#/components/schemas/PaymentTokenPaymentMethod'
          storedCredentials:
            $ref: '#/components/schemas/StoredCredential'
          settlementSplit:
            $ref: '#/components/schemas/SettlementSplit'
          currencyConversion:
            $ref: '#/components/schemas/CurrencyConversion'
          authenticationRequest:
            $ref: '#/components/schemas/AuthenticationRequest'
          authenticationResult:
            $ref: '#/components/schemas/AuthenticationResult'
      example:
        transactionAmount:
          total: '12.04'
          currency: 'USD'
        requestType: 'PaymentTokenSaleTransaction'
        paymentMethod:
          paymentToken:
              value: '1235325235236'
              function: 'DEBIT'
              securityCode: '977'
        storedCredentials:
          sequence: 'FIRST'
          scheduled: true
    PaymentCardPreAuthTransaction:
      description: Request to create pre-auth transaction using credit card.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        properties:
          paymentMethod:
            $ref: '#/components/schemas/PaymentCardPaymentMethod'
          storedCredentials:
            $ref: '#/components/schemas/StoredCredential'
          createToken:
            $ref: '#/components/schemas/CreatePaymentToken'
          splitShipment:
            $ref: '#/components/schemas/SplitShipment'
          settlementSplit:
            $ref: '#/components/schemas/SettlementSplit'
          authenticationRequest:
            $ref: '#/components/schemas/AuthenticationRequest'
          authenticationResult:
            $ref: '#/components/schemas/AuthenticationResult'
          decrementalFlag:
            $ref: '#/components/schemas/DecrementalPreAuthFlag'
      example:
        transactionAmount:
          total: '12.04'
          currency: 'USD'
        requestType: 'PaymentCardPreAuthTransaction'
        paymentMethod:
          paymentCard:
            number: '5424180279791732'
            securityCode: '977'
            expiryDate:
              month: '12'
              year: '24'
        splitShipment:
          totalCount: 1
          finalShipment: true
    PaymentCardSaleTransaction:
      description: Request to create sale transaction using payment card.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        properties:
          paymentMethod:
            $ref: '#/components/schemas/PaymentCardPaymentMethod'
          storedCredentials:
            $ref: '#/components/schemas/StoredCredential'
          settlementSplit:
            $ref: '#/components/schemas/SettlementSplit'
          createToken:
            $ref: '#/components/schemas/CreatePaymentToken'
          currencyConversion:
            $ref: '#/components/schemas/CurrencyConversion'
          authenticationRequest:
            $ref: '#/components/schemas/AuthenticationRequest'
          authenticationResult:
            $ref: '#/components/schemas/AuthenticationResult'
      example:
        transactionAmount:
          total: '12.04'
          currency: 'USD'
        requestType: 'PaymentCardSaleTransaction'
        paymentMethod:
          paymentCard:
            number: '5424180279791732'
            securityCode: '977'
            expiryDate:
              month: '12'
              year: '24'
        storedCredentials:
          sequence: 'FIRST'
          scheduled: true
    PaymentCardCreditTransaction:
      description: Request to create credit transaction using payment card.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        required:
        - paymentMethod
        properties:
          paymentMethod:
            $ref: '#/components/schemas/PaymentCardPaymentMethod'
          currencyConversion:
            $ref: '#/components/schemas/CurrencyConversion'
      example:
        transactionAmount:
          total: '12.04'
          currency: 'USD'
        requestType: 'PaymentCardCreditTransaction'
        paymentMethod:
          paymentCard:
            number: '5424180279791732'
            securityCode: '977'
            expiryDate:
              month: '12'
              year: '24'
        currencyConversion:
          conversionType: 'Dcc'
          inquiryRateId: '123456'
    PaymentCardDisbursementTransaction:
      description: Request to create disbursement transaction using a payment card.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        required:
        - disbursement
        - paymentMethod
        properties:
          disbursement:
            $ref: '#/components/schemas/Disbursement'
          paymentMethod:
            $ref: '#/components/schemas/PaymentCardPaymentMethod'
          storedCredentials:
            $ref: '#/components/schemas/StoredCredential'
          createToken:
            $ref: '#/components/schemas/CreatePaymentToken'
      example:
        requestType: 'PaymentCardDisbursementTransaction'
        transactionAmount:
          total: '50'
          currency: 'USD'
        disbursement:
          disbursementType: 'FundingTransactionType'
          senderInfo:
            name: 'Franklin Sender Roosevelt'
            streetAddress: '5565 Glenridge Connector'
            city: 'Atlanta'
            stateCode: 'GA'
            countryCode: 'US'
            postalCode: '30342'
            phoneNumber: '4044040740'
            birthDate: '19560121'
            referenceNumber: '12345678'
            accountNumber: '135246'
          receiverInfo:
            name: 'Abraham Receiver Lincoln'
            streetAddress: '5565 Glenridge Connector'
            city: 'Atlanta'
            stateCode: 'GA'
            countryCode: 'US'
            postalCode: '30342'
            phoneNumber: '4044040740'
            referenceNumber: '12345678'
            accountNumber: '135246'
        paymentMethod:
          paymentCard:
            number: '5424180279791732'
            expiryDate:
              month: '12'
              year: '25'
            securityCode: '977'
    PaymentTokenDisbursementTransaction:
      description: Request to create disbursement transaction using a payment token.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        required:
        - disbursement
        - paymentMethod
        properties:
          disbursement:
            $ref: '#/components/schemas/Disbursement'
          paymentMethod:
            $ref: '#/components/schemas/PaymentTokenPaymentMethod'
          storedCredentials:
            $ref: '#/components/schemas/StoredCredential'
      example:
        requestType: 'PaymentTokenDisbursementTransaction'
        transactionAmount:
          total: '50'
          currency: 'USD'
        disbursement:
          disbursementType: 'DisbursementTransactionType'
          senderInfo:
            name: 'Franklin Sender Roosevelt'
            streetAddress: '5565 Glenridge Connector'
            city: 'Atlanta'
            stateCode: 'GA'
            countryCode: 'US'
            postalCode: '30342'
            phoneNumber: '4044040740'
            birthDate: '19560121'
            referenceNumber: '12345678'
            accountNumber: '135246'
          receiverInfo:
            name: 'Abraham Receiver Lincoln'
            streetAddress: '5565 Glenridge Connector'
            city: 'Atlanta'
            stateCode: 'GA'
            countryCode: 'US'
            postalCode: '30342'
            phoneNumber: '4044040740'
            referenceNumber: '12345678'
            accountNumber: '135246'
        paymentMethod:
          paymentToken:
            value: '1235325235236'
            function: 'DEBIT'
            securityCode: '977'
    PaymentDevicePreAuthTransaction:
      description: Request to create pre-auth transaction using decrypted card details from payment device. The transaction origin will be fixed as PHONE when data is manually entered into the device and as RETAIL when data is entered into the device via swipe.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        required:
        - paymentMethod
        properties:
          paymentMethod:
            $ref: '#/components/schemas/PaymentDevicePaymentMethod'
          createToken:
            $ref: '#/components/schemas/CreatePaymentToken'
          settlementSplit:
            $ref: '#/components/schemas/SettlementSplit'
          storedCredentials:
            $ref: '#/components/schemas/StoredCredential'
          splitShipment:
            $ref: '#/components/schemas/SplitShipment'
          decrementalFlag:
            $ref: '#/components/schemas/DecrementalPreAuthFlag'
      example:
        requestType: 'PaymentDevicePreAuthTransaction'
        transactionAmount:
          total: '12.04'
          currency: 'USD'
        paymentMethod:
          paymentDevice:
            deviceType: 'SWIPE'
            data: '02A600C0170018008292;5424********1732=1810?*B73CD8C26233D4FFEC5500ED394439D97DDA5F530942D21D0000000000000000000000000000000000000000363434543035353734326299492410027300000260DC03'
            securityCode: '977'
            cardholderName: 'First Cardholder'
            cardFunction: 'CREDIT'
            brand: 'VISA'
    PaymentDeviceSaleTransaction:
      description: Request to create sale transaction using decrypted card details from payment device. The transaction origin will be fixed as PHONE when data is manually entered into the device and as RETAIL when data is entered into the device via swipe.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        required:
        - paymentMethod
        properties:
          paymentMethod:
            $ref: '#/components/schemas/PaymentDevicePaymentMethod'
          createToken:
            $ref: '#/components/schemas/CreatePaymentToken'
          storedCredentials:
            $ref: '#/components/schemas/StoredCredential'
      example:
        requestType: 'PaymentDeviceSaleTransaction'
        transactionAmount:
          total: '12.04'
          currency: 'USD'
        paymentMethod:
          paymentDevice:
            deviceType: 'SWIPE'
            data: '02A600C0170018008292;5424********1732=1810?*B73CD8C26233D4FFEC5500ED394439D97DDA5F530942D21D0000000000000000000000000000000000000000363434543035353734326299492410027300000260DC03'
            securityCode: '977'
            cardholderName: 'First Cardholder'
            cardFunction: 'CREDIT'
            brand: 'VISA'
    PaymentDeviceCreditTransaction:
      description: Request to create credit transaction using decrypted card details from payment device. The transaction origin will be fixed as PHONE when data is manually entered into the device and as RETAIL when data is entered into the device via swipe.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        required:
        - paymentMethod
        properties:
          paymentMethod:
            $ref: '#/components/schemas/PaymentDevicePaymentMethod'
      example:
        requestType: 'PaymentDeviceCreditTransaction'
        transactionAmount:
          total: '12.04'
          currency: 'USD'
        paymentMethod:
          paymentDevice:
            deviceType: 'SWIPE'
            data: '02A600C0170018008292;5424********1732=1810?*B73CD8C26233D4FFEC5500ED394439D97DDA5F530942D21D0000000000000000000000000000000000000000363434543035353734326299492410027300000260DC03'
            securityCode: '977'
            cardholderName: 'First Cardholder'
            cardFunction: 'CREDIT'
            brand: 'VISA'
    PaymentDeviceDisbursementTransaction:
      description: Request to create disbursement transaction using decrypted card details from payment device. The transaction origin will be fixed as PHONE when data is manually entered into the device and as RETAIL when data is entered into the device via swipe.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        required:
        - paymentMethod
        - disbursement
        properties:
          paymentMethod:
            $ref: '#/components/schemas/PaymentDevicePaymentMethod'
          disbursement:
            $ref: '#/components/schemas/Disbursement'
      example:
        requestType: 'PaymentDeviceDisbursementTransaction'
        transactionAmount:
          total: '50'
          currency: 'USD'
        paymentMethod:
          paymentDevice:
            deviceType: 'SWIPE'
            data: '02A600C0170018008292;5424********1732=1810?*B73CD8C26233D4FFEC5500ED394439D97DDA5F530942D21D0000000000000000000000000000000000000000363434543035353734326299492410027300000260DC03'
            securityCode: '977'
            cardholderName: 'First Cardholder'
            cardFunction: 'CREDIT'
            brand: 'VISA'
        disbursement:
          disbursementType: 'FundingTransactionType'
          senderInfo:
            name: 'Franklin Sender Roosevelt'
            streetAddress: '5565 Glenridge Connector'
            city: 'Atlanta'
            stateCode: 'GA'
            countryCode: 'US'
            postalCode: '30342'
            phoneNumber: '4044040740'
            birthDate: '19560121'
            referenceNumber: '12345678'
            accountNumber: '135246'
          receiverInfo:
            name: 'Abraham Receiver Lincoln'
            streetAddress: '5565 Glenridge Connector'
            city: 'Atlanta'
            stateCode: 'GA'
            countryCode: 'US'
            postalCode: '30342'
            phoneNumber: '4044040740'
            referenceNumber: '12345678'
            accountNumber: '135246'
    AchPreAuthTransaction: # NA only
      description: Request to create pre-auth primary transaction using ACH telecheck details.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        required:
        - paymentMethod
        properties:
          paymentMethod:
            $ref: '#/components/schemas/TeleCheckAchPaymentMethod'
      example:
        requestType: 'AchPreAuthTransaction'
        transactionAmount:
          total: '12.04'
          currency: 'USD'
        paymentMethod:
          achType: 'TeleCheckICAPaymentMethod'
          routingNumber: '128367331'
          accountNumber: '2398649823984789'
          accountType: 'S'
          checkNumber: '9878867880'
          checkType: 'P'
          productCode: '12836'
          manualIdInfo:
            idType: 'DL'
            idData: '12345678'
          agentId: 'RVK001'
          terminalId: '1283673312'
          registrationId: '12345'
          releaseType: 'P'
          vipCustomer: 'Y'
          organizationId: 'XXXXXXXXXXXXXX'
          sessionId: 'XXXXXXXXXXXXXX'
          terminalState: 'GA'
          terminalCity: 'Atlanta'
          customerIpAddress: '11.32.232.44'
          imeiCode: '990000862471854'
    AchSaleTransaction: # NA only
      description: Request to create Sale primary transaction using ACH telecheck details.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        required:
        - paymentMethod
        properties:
          paymentMethod:
            $ref: '#/components/schemas/TeleCheckAchPaymentMethod'
      example:
        requestType: 'AchSaleTransaction'
        transactionAmount:
          total: '12.04'
          currency: 'USD'
        paymentMethod:
          achType: 'TeleCheckICAPaymentMethod'
          routingNumber: '128367331'
          accountNumber: '2398649823984789'
          accountType: 'S'
          checkNumber: '9878867880'
          checkType: 'P'
          productCode: '12836'
          manualIdInfo:
            idType: 'DL'
            idData: '12345678'
          agentId: 'RVK001'
          terminalId: '1283673312'
          registrationId: '12345'
          releaseType: 'P'
          vipCustomer: 'Y'
          organizationId: 'XXXXXXXXXXXXXX'
          sessionId: 'XXXXXXXXXXXXXX'
          terminalState: 'GA'
          terminalCity: 'Atlanta'
          customerIpAddress: '11.32.232.44'
          imeiCode: '990000862471854'
    AchCreditTransaction: # NA only
      description: Request to create Credit primary transaction using ACH telecheck details.
      allOf:
      - $ref: '#/components/schemas/PrimaryTransaction'
      - type: object
        required:
        - paymentMethod
        properties:
          paymentMethod:
            $ref: '#/components/schemas/TeleCheckAchPaymentMethod'
      example:
        requestType: 'AchCreditTransaction'
        transactionAmount:
          total: '12.04'
          currency: 'USD'
        paymentMethod:
          achType: 'TeleCheckICAPaymentMethod'
          routingNumber: '128367331'
          accountNumber: '2398649823984789'
          accountType: 'S'
          checkNumber: '9878867880'
          checkType: 'P'
          productCode: '12836'
          manualIdInfo:
            idType: 'DL'
            idData: '12345678'
          agentId: 'RVK001'
          terminalId: '1283673312'
          registrationId: '12345'
          releaseType: 'P'
          vipCustomer: 'Y'
          organizationId: 'XXXXXXXXXXXXXX'
          sessionId: 'XXXXXXXXXXXXXX'
          terminalState: 'GA'
          terminalCity: 'Atlanta'
          customerIpAddress: '11.32.232.44'
          imeiCode: '990000862471854'
    Disbursement:
      description: 'Disbursement information. Abstract class, do not use this class directly, use one of its children: FundingTransactionType, DisbursementTransactionType.'
      type: object
      discriminator:
        propertyName: disbursementType
      required:
      - disbursementType
      - senderInfo
      - receiverInfo
      properties:
        disbursementType:
          description: The type of disbursement.
          type: string
          example: 'FundingTransactionType'
        senderInfo:
          $ref: '#/components/schemas/SenderInfo'
        receiverInfo:
          $ref: '#/components/schemas/ReceiverInfo'
      example:
        disbursementType: 'DisbursementTransactionType'
        senderInfo:
          name: 'Franklin Sender Roosevelt'
          streetAddress: '5565 Glenridge Connector'
          city: 'Atlanta'
          stateCode: 'GA'
          countryCode: 'US'
          postalCode: '30342'
          phoneNumber: '4044040740'
          birthDate: '19560121'
          referenceNumber: '12345678'
          accountNumber: '135246'
        receiverInfo:
          name: 'Abraham Receiver Lincoln'
          streetAddress: '5565 Glenridge Connector'
          city: 'Atlanta'
          stateCode: 'GA'
          countryCode: 'US'
          postalCode: '30342'
          phoneNumber: '4044040740'
          referenceNumber: '12345678'
          accountNumber: '135246'
    DisbursementTransactionType:
      description: Push disbursement information.
      allOf:
      - $ref: '#/components/schemas/Disbursement'
      - type: object
        example:
          disbursementType: 'DisbursementTransactionType'
          senderInfo:
            name: 'Franklin Sender Roosevelt'
            streetAddress: '5565 Glenridge Connector'
            city: 'Atlanta'
            stateCode: 'GA'
            countryCode: 'US'
            postalCode: '30342'
            phoneNumber: '4044040740'
            birthDate: '19560121'
            referenceNumber: '12345678'
            accountNumber: '135246'
          receiverInfo:
            name: 'Abraham Receiver Lincoln'
            streetAddress: '5565 Glenridge Connector'
            city: 'Atlanta'
            stateCode: 'GA'
            countryCode: 'US'
            postalCode: '30342'
            phoneNumber: '4044040740'
            referenceNumber: '12345678'
            accountNumber: '135246'
    FundingTransactionType:
      description: Pull disbursement information.
      allOf:
      - $ref: '#/components/schemas/Disbursement'
      - type: object
        example:
          disbursementType: 'FundingTransactionType'
          senderInfo:
            name: 'Franklin Sender Roosevelt'
            streetAddress: '5565 Glenridge Connector'
            city: 'Atlanta'
            stateCode: 'GA'
            countryCode: 'US'
            postalCode: '30342'
            phoneNumber: '4044040740'
            birthDate: '19560121'
            referenceNumber: '12345678'
            accountNumber: '135246'
          receiverInfo:
            name: 'Abraham Receiver Lincoln'
            streetAddress: '5565 Glenridge Connector'
            city: 'Atlanta'
            stateCode: 'GA'
            countryCode: 'US'
            postalCode: '30342'
            phoneNumber: '4044040740'
            referenceNumber: '12345678'
            accountNumber: '135246'
    SenderInfo:
      description: Sender information for a disbursement transaction.
      required:
      - name
      - streetAddress
      - city
      - stateCode
      - countryCode
      - postalCode
      - phoneNumber
      - referenceNumber
      - accountNumber
      properties:
        name:
          description: Sender name.
          type: string
          maxLength: 30
          pattern: '^(?!\s*$).+'
          example: 'Franklin D. Roosevelt'
        streetAddress:
          description: Sender street address.
          type: string
          maxLength: 50
          pattern: '^(?!\s*$).+'
          example: '5565 Glenridge Connector'
        city:
          description: Sender city.
          type: string
          maxLength: 25
          pattern: '^(?!\s*$).+'
          example: 'Atlanta'
        stateCode:
          description: Sender state.
          type: string
          pattern: '[A-Z]{2}'
          example: 'GA'
        countryCode:
          description: Sender country code.
          type: string
          pattern: '[A-Z]{2}'
          example: 'US'
        postalCode:
          description: Sender postal code.
          type: string
          maxLength: 5
          pattern: '^(?!\s*$).+'
          example: '30342'
        phoneNumber:
          description: Sender phone number.
          type: string
          pattern: '[0-9]{10}'
          example: '4044040740'
        birthDate:
          description: Sender date of birth (YYYYMMDD).
          type: string
          pattern: '^([0-9]{4})(1[0-2]|0[1-9])(3[01]|0[1-9]|[12][0-9])$'
          example: '19560121'
        referenceNumber:
          description: Sender reference number.
          type: string
          maxLength: 19
          pattern: '^(?!\s*$).+'
          example: '123456'
        accountNumber:
          description: Sender account number.
          type: string
          maxLength: 19
          pattern: '^(?!\s*$).+'
          example: '135246'
      example:
        name: 'Franklin Sender Roosevelt'
        streetAddress: '5565 Glenridge Connector'
        city: 'Atlanta'
        stateCode: 'GA'
        countryCode: 'US'
        postalCode: '30342'
        phoneNumber: '4044040740'
        birthDate: '19560121'
        referenceNumber: '12345678'
        accountNumber: '135246'
    ReceiverInfo:
      description: Receiver information for a funding transaction.
      required:
      - name
      - streetAddress
      - city
      - stateCode
      - countryCode
      - postalCode
      - phoneNumber
      - referenceNumber
      properties:
        name:
          description: Receiver name.
          type: string
          maxLength: 70
          pattern: '^(?!\s*$).+'
          example: 'George Washington'
        streetAddress:
          description: Receiver street address.
          type: string
          maxLength: 50
          pattern: '^(?!\s*$).+'
          example: '5565 Glenridge Connector'
        city:
          description: Receiver city.
          type: string
          maxLength: 25
          pattern: '^(?!\s*$).+'
          example: 'Atlanta'
        stateCode:
          description: Receiver state.
          type: string
          pattern: '[A-Z]{2}'
          example: 'GA'
        countryCode:
          description: Receiver country code.
          type: string
          pattern: '[A-Z]{2}'
          example: 'US'
        postalCode:
          description: Receiver postal code.
          type: string
          maxLength: 5
          pattern: '^(?!\s*$).+'
          example: '30342'
        phoneNumber:
          description: Receiver phone number.
          type: string
          pattern: '[0-9]{10}'
          example: '4044040740'
        referenceNumber:
          description: Receiver reference number.
          type: string
          maxLength: 19
          pattern: '^(?!\s*$).+'
          example: '123456'
        accountNumber:
          description: Receiver account number.
          type: string
          maxLength: 19
          pattern: '^(?!\s*$).+'
          example: '135246'
      example:
        name: 'Abraham Receiver Lincoln'
        streetAddress: '5565 Glenridge Connector'
        city: 'Atlanta'
        stateCode: 'GA'
        countryCode: 'US'
        postalCode: '30342'
        phoneNumber: '4044040740'
        referenceNumber: '12345678'
        accountNumber: '135246'
    PrimaryTransaction:
      description: Provides shared fields for all PrimaryTransaction request types. Abstract class, do not use this class directly, use one of its children.
      required:
        - requestType
        - transactionAmount
      discriminator:
        propertyName: requestType
      properties:
        requestType:
          description: Object name of the primary transaction request.
          type: string
          example: 'PaymentCardCreditTransaction'
        transactionAmount:
          $ref: '#/components/schemas/Amount'
        storeId:
          description: An optional outlet ID for clients that support multiple stores in the same app.
          type: string
          maxLength: 20
          example: '12345500000'
        merchantTransactionId:
          description: The unique merchant transaction ID from the request header, if supplied.
          type: string
          maxLength: 40
          example: '30dd879c-ee2f-11db-8314-0800200c9a66'
        transactionOrigin:
          $ref: '#/components/schemas/TransactionOrigin'
        order:
          $ref: '#/components/schemas/Order'
        ipgTransactionId:
          description: The IPG transactionId to reference a payerauth for example.
          type: integer
          format: int64
          nullable: true
          example: '8154886515'
        allowPartialApproval:
          description: Indicates if the particular transaction is a partial approval transaction, if supplied.
          type: boolean
          example: true
      example:
        requestType: 'PaymentCardSaleTransaction'
        transactionAmount:
          total: '12.04'
          currency: 'USD'
        paymentMethod:
          paymentCard:
            number: '5424180279791732'
            securityCode: '977'
            expiryDate:
              month: '12'
              year: '24'
    AdditionalDetails:
      description: Merchant supplied tracking numbers.
      properties:
        comments:
          description: Comments for the payment.
          type: string
          maxLength: 1024
          example: 'This is a comment'
        invoiceNumber:
          description: Invoice number.
          type: string
          maxLength: 48
          example: '551294633441'
        purchaseOrderNumber:
          description: Purchase order number.
          type: string
          maxLength: 128
          example: '1223456'
        operatorId:
          description: The operator ID.
          type: string
          maxLength: 35
          pattern: '^\S$|^\S.*\S$'
        salesSystemId:
          description: The sales system ID.
          type: string
          maxLength: 50
          pattern: '^\S$|^\S.*\S$'
        ipgDeferredAuth:
          description: Indicates if the particular transaction is a deferred authorization.
          type: boolean
          example: true
        highRiskPurchaseIndicator:
          description: this is highRiskPurchaseIndicator.
          type: boolean
          example: true
        receipts:
          description: Provides request information that is necessary to generate receipts.
          type: array
          minItems: 1
          maxItems: 2
          items:
            $ref: '#/components/schemas/ReceiptRequestInfo'
          example:
            - type: 'cardholder'
              locale: 'de-DE'
            - type: 'merchant'
              locale: 'en'
              linewidth: 48
        scaExemptionType:
          description: Strong customer authentication exemption type indicator.
          type: string
          enum: [Low Value Exemption, TRA Exemption, Trusted Merchant Exemption, SCP Exemption, Delegated Authentication]
          example: 'TRA Exemption'
        scaVisaMerchantID:
          description: Eight-character Visa merchant identifier (VMID) assigned by Visa, required for trusted merchant and delegated authentication.
          type: string
          maxLength: 8
          example: '12312311'
        businessApplicationIdentifier:
          description: Indicates the indended use of the Account Funding Transaction. For Visa Only.
          type: string
          enum: [BANK_INITIATED_TRANSFER, WALLET_TRANSFER, ACCOUNT_TO_ACCOUNT, TOP_OFF, FUND_TRANSFER, ZERO_DOLLAR_AUTHORIZATION]
          example: ACCOUNT_TO_ACCOUNT
      example:
        comments: 'This is a comment'
        invoiceNumber: '551294633441'
        purchaseOrderNumber: '1223456'
        operatorId: 'OPERATOR_ID_123XXX'
        salesSystemId: 'W-EU-H3866-FLS2'
        ipgDeferredAuth: true
        allowPartialApproval: true
        highRiskPurchaseIndicator: true
        receipts:
          type: 'cardholder'
          locale: 'fr'
        scaExemptionType: 'Low Value Exemption'
        scaVisaMerchantID: '12312311'
        businessApplicationIdentifier: 'ACCOUNT_TO_ACCOUNT'
    PostAuthTransaction:
      description: Request to perform post auth transaction.
      allOf:
      - $ref: '#/components/schemas/SecondaryTransaction'
      - type: object
        required:
        - transactionAmount
        properties:
          transactionAmount:
            $ref: '#/components/schemas/Amount'
          transactionOrigin:
            $ref: '#/components/schemas/TransactionOrigin'
          splitShipment:
            $ref: '#/components/schemas/SplitShipment'
          softDescriptor:
            $ref: '#/components/schemas/SoftDescriptor'
      example:
        requestType: 'PostAuthTransaction'
        transactionAmount:
          total: '12.04'
          currency: 'USD'
        splitShipment:
          totalCount: 1
          finalShipment: true
    AchPostAuthTransaction: # NA only
      description: Request to perform ACH telecheck post auth transaction.
      allOf:
      - $ref: '#/components/schemas/SecondaryTransaction'
      - type: object
        required:
        - transactionAmount
        properties:
          transactionAmount:
            $ref: '#/components/schemas/Amount'
      example:
        requestType: 'AchPostAuthTransaction'
        transactionAmount:
          total: '12.04'
          currency: 'USD'
    ReturnTransaction:
      description: Request to perform return transaction.
      allOf:
      - $ref: '#/components/schemas/SecondaryTransaction'
      - type: object
        required:
        - transactionAmount
        properties:
          transactionAmount:
            $ref: '#/components/schemas/Amount'
          softDescriptor:
            $ref: '#/components/schemas/SoftDescriptor'
          storedCredentials:
            $ref: '#/components/schemas/StoredCredential'
          currencyConversion:
            $ref: '#/components/schemas/CurrencyConversion'
      example:
        requestType: 'ReturnTransaction'
        transactionAmount:
          total: '12.04'
          currency: 'USD'
        currencyConversion:
          conversionType: 'Dcc'
          inquiryRateId: '123456'
    AchReturnTransaction: # NA only
      description: Request to perform ACH TeleCheck return transaction. Note - If the ACH transaction to be refunded has not yet been sent to Telecheck, the original transaction will be automatically voided instead.
      allOf:
      - $ref: '#/components/schemas/SecondaryTransaction'
      - type: object
        required:
        - transactionAmount
        properties:
          transactionAmount:
            $ref: '#/components/schemas/Amount'
      example:
        requestType: 'AchReturnTransaction'
        transactionAmount:
          total: '12.04'
          currency: 'USD'
    VoidTransaction:
      description: Request to perform void transaction.
      allOf:
      - $ref: '#/components/schemas/SecondaryTransaction'
      - type: object
        properties:
          transactionAmount:
            $ref: '#/components/schemas/Amount'
      example:
        requestType: 'VoidTransaction'
        comments: 'This is a comment'
    VoidPreAuthTransactions:
      description: Request to perform a void of all authorizations associated with the current order. This request type is applicable for voiding preauth and incremental preauth transactions.
      allOf:
      - $ref: '#/components/schemas/SecondaryTransaction'
      - type: object
      example:
        requestType: 'VoidPreAuthTransactions'
        comments: 'This is a comment'
    AchVoidTransaction: # NA only
      description: Request to perform ACH void transaction.
      allOf:
      - $ref: '#/components/schemas/SecondaryTransaction'
      - type: object
        required:
        - transactionAmount
        properties:
          transactionAmount:
            $ref: '#/components/schemas/Amount'
      example:
        requestType: 'AchVoidTransaction'
        transactionAmount:
          total: '12.04'
          currency: 'USD'
    PreAuthSecondaryTransaction:
      description: Request to perform pre-auth incremental secondary transaction without providing credit card information.
      allOf:
      - $ref: '#/components/schemas/SecondaryTransaction'
      - type: object
        required:
        - transactionAmount
        properties:
          transactionAmount:
            $ref: '#/components/schemas/Amount'
          decrementalFlag:
            $ref: '#/components/schemas/DecrementalPreAuthFlag'
      example:
        requestType: 'PreAuthSecondaryTransaction'
        transactionAmount:
          total: '5.00'
          currency: 'USD'
        decrementalFlag: false
    SecondaryTransaction:
      description: Model for secondary financial transactions. Abstract class, do not use this class directly, use one of its children.
      required:
        - requestType
      discriminator:
        propertyName: requestType
      properties:
        requestType:
          description: Object name of the secondary transaction request.
          type: string
          example: 'PostAuthTransaction'
        storeId:
          description: An optional outlet ID for clients that support multiple stores in the same developer app.
          type: string
          maxLength: 20
          example: '12345500000'
        merchantTransactionId:
          description: The unique merchant transaction ID from the request, if supplied.
          type: string
          maxLength: 40
          example: 'lsk23532djljff3'
        comments:
          description: Comment for the secondary transaction.
          type: string
          example: 'This is a comment'
        order:
          $ref: '#/components/schemas/Order'
      example:
        requestType: 'ReturnTransaction'
        transactionAmount:
          total: 3.00
          currency: 'USD'
    SplitShipment:
      description: Split-shipment related information, in order to reuse the same authorization.
      properties:
        totalCount:
          description: Total count of the shipment, can be set at preauth or the first postauth.
          type: integer
          format: int32
          example: 5
        finalShipment:
          description: Indicates whether the transaction is the final shipment.
          type: boolean
          default: false
      example:
        totalCount: 1
        finalShipment: true
    SubMerchantSplit: # LATAM only
      description: Sub-merchant split object for SettlementSplit.
      required:
        - merchantID
        - amount
      properties:
        merchantID:
          description: ID of merchant for tracking.
          type: string
          maxLength: 15
          pattern: '[0-9]{1,15}'
          example: '100000001'
        amount:
          description: The amount each sub-merchant receives.
          type: number
          example: 25.06
      example:
        merchantID: '100000001'
        amount: 25.06
    SettlementSplit: # LATAM only
      description: Settle with multiple sub-merchants, sale and preAuth only.
      type: array
      minItems: 1
      maxItems: 5
      items:
        $ref: '#/components/schemas/SubMerchantSplit'
      example:
        - merchantID: '100000001'
          amount: 25.06
        - merchantID: '100000002'
          amount: 15.07
    AdditionalTransactionDetails:
      description: Additional transaction details for transaction response.
      properties:
        comments:
          description: Comment for the payment.
          type: string
          maxLength: 1024
          example: 'This is a comment'
        invoiceNumber:
          description: Invoice number.
          type: string
          maxLength: 48
          example: '551294633441'
        purchaseOrderNumber:
          description: Purchase order number.
          type: string
          maxLength: 128
          example: '1223456'
        disbursementTransType: # NA only
          description: The type of debit disbursement transaction.
          type: string
          enum: [FUNDING, DISBURSEMENT]
          example: 'FUNDING'
        walletProvider:
          description: The wallet provider type.
          type: string
          enum: [GOOGLE_PAY, APPLE_PAY, SAMSUNG_PAY, MASTERPASS]
          example: 'APPLE_PAY'
        receipts:
          description: Provides receipt response data, if it has been requested.
          type: array
          minItems: 1
          maxItems: 2
          items:
            $ref: '#/components/schemas/Receipt'
          example:
            - type: 'cardholder'
              data:
                - endOfLine: true
                  text: '--------------------------------'
                - endOfLine: true
                  text: '              SALE              '
            - type: 'merchant'
              data:
                - endOfLine: true
                  text: '        Example Merchant        '
                - endOfLine: true
                  text: '--------------------------------'
        additionalResponseData:
          $ref: '#/components/schemas/AdditionalResponseData'
      example:
        comments: 'This is a comment'
        invoiceNumber: '551294633441'
        purchaseOrderNumber: '1223456'
    AdditionalResponseData:
      description: Additional Response Data.
      properties:
        issuingBankName:
          description: Issuing Bank Name.
          type: string
          maxLength: 18
          example: 'USA Bank'
        countryOfIssuance:
          description: Country of Issuance.
          type: string
          maxLength: 3
          example: 'USA'
        cardProductID:
          description: Card Product ID.
          type: string
          maxLength: 1
          example: 'H'
        detailedProductID:
          description: Detailed Product ID.
          type: string
          maxLength: 3
          example: 'C'
        associationResponseCodeAdtl:
          description: Association Response Code.
          type: string
          maxLength: 3
          example: '00'
        cardBrand:
          description: Card Brand.
          type: string
          maxLength: 1
          example: 'M'
    AccountUpdaterResponse:
      description: Details related to updated account information.
      properties:
        updatedCard:
          description: Account updater replacement PAN or TransArmor token.
          type: string
          example: '4012000066660018'
        updatedToken:
          description: Updated value of token.
          type: string
          example: '1235325235236'
        updatedExpirationDate:
          description: New account number expiration date in MMYY format.
          type: string
          example: '1220'
        updatedAccountStatus:
          description: Status of the updated account. An account may have closed (C), the expiry date may have changed (E), the account may have changed (A), or the cardholder should be contacted (Q).
          type: string
          example: 'A'
        updatedAccountErrorCode:
          description: Code for the error encountered when updating account.
          type: string
          example: 'VAU002'
      example:
        updatedCard: '4012000066660018'
        updatedExpirationDate: '1220'
        updatedAccountStatus: 'A'
        updatedAccountErrorCode: 'VAU002'
    TransactionType:
      description: Type of transaction to perform. Primary transaction types in requests include 'SALE', 'PREAUTH', 'CREDIT' and 'FORCED_TICKET'.
      type: string
      enum: [SALE, PREAUTH, CREDIT, FORCED_TICKET, VOID, RETURN, POSTAUTH, PAYER_AUTH, DISBURSEMENT]
      example: 'SALE'
    TransactionOrigin:
      description: The source of the transaction. The possible values are ECOM (if the order was received via email or Internet), MOTO (mail order, telephone order), MAIL, PHONE and RETAIL (face to face).
      type: string
      enum: [ECOM, MOTO, MAIL, PHONE, RETAIL]
      example: ECOM
    DecrementalPreAuthFlag:
      description: This flag can only be used in a preAuth transaction that updates the amount of a previous preAuth transaction to either increase the preAuth amount (DecrementalPreAuthFlag = false) or decrease the preAuth amount (DecrementalPreAuthFlag = true).
      type: boolean
      default: false
      example: false
    Amount:
      description: Amount of the transaction.
      required:
        - total
        - currency
      properties:
        total:
          description: Sub component values must add up to total amount.
          type: number
          minimum: 0
          example: 10.24
        currency:
          description: ISO 4217 currency code.
          type: string
          pattern: '([A-Z]{3})|([0-9]{3})'
          example: 'USD'
        components:
          $ref: '#/components/schemas/AmountComponents'
      example:
        total: 10.24
        currency: 'USD'
        components:
          subtotal: 8.00
          localTax: 1.00
          shipping: 1.24
    AmountComponents:
      description: Transaction amounts with multiple components.
      properties:
        subtotal:
          description: Subtotal amount.
          type: number
          example: 8.00
        vatAmount:
          description: Value-added tax amount.
          type: number
          example: 0
        localTax:
          description: Local tax amount.
          type: number
          example: 1.00
        shipping:
          description: Shipping amount.
          type: number
          example: 1.24
        cashback:
          description: Cashback amount.
          type: number
          example: 2.00
        tip:
          description: Tip amount.
          type: number
          example: 6.00
        surcharge:
          description: Surcharge amount.
          type: number
          example: 2.50
      example:
        subtotal: 8.00
        vatAmount: 0
        localTax: 1.00
        shipping: 1.24
        cashback: 2.00
        tip: 6.00
        surcharge: 2.50
    ResponseAmountComponents:
      description: Amount component details, used in responses.
      allOf:
      - $ref: '#/components/schemas/AmountComponents'
      - type: object
        properties:
          convenienceFee: # APAC only
            description: Amount added for proccessing or handling fees.
            type: number
            example: 2.00
      example:
        subtotal: 8.00
        vatAmount: 0
        localTax: 1.30
        convenienceFee: 2.00
    ChinaDomesticPaymentMethod: # APAC only
      description: Payment method containing China Domestic information.
      allOf:
      - $ref: '#/components/schemas/PaymentMethod'
      - type: object
        required:
        - chinaDomestic
        - brand
        properties:
          chinaDomestic:
            $ref: '#/components/schemas/ChinaDomestic'
          brand:
            type: string
            enum: [ALIPAY_DOMESTIC, CUP_DOMESTIC, WECHAT_DOMESTIC]
      example:
        chinaDomestic:
          productCode: 'R2D2C3PO'
          productQuantity: 10
          productPrice: 3.20
          productDescription: 'Best product ever'
          redirectURL: 'www.urlredirectedto.com'
          limitCardFunctionToDebit: true
          customerId: 'ID3Bs'
          bankId: '123456'
        brand: 'CUP_DOMESTIC'
    ApmPaymentMethod:
      description: Payment method containing APM specific information, which is intentionally weakly-typed to allow for reduced coupling of APM plugins.
      allOf:
        - $ref: '#/components/schemas/PaymentMethod'
        - type: object
          required:
            - 'type'
          properties:
            'type':
              description: 'Type of paymentMethod. Supported types: BLIK'
              $ref: '#/components/schemas/PaymentMethodType'
            steps:
              type: array
              items:
                $ref: '#/components/schemas/PaymentStepResponse'
              description: 'All steps (already) performed on the payment'
      example:
        'type': BLIK
        steps:
          - 'type': provide-detail
            detailKey: BLIK_CODE
            detailValue: 777123
    PaymentStepRequest:
      description: Request a step from the payer or merchant, e.g. providing information.
      type: object
      allOf:
        - $ref: '#/components/schemas/StepRequest'
    IntegrationStepRequest:
      description: Request further integration details, e.g. providing the payer's IP address.
      type: object
      allOf:
        - $ref: '#/components/schemas/StepRequest'
    ProvideDetailPaymentStepRequest:
      description: Request to inquire information from the payer or merchant.
      type: object
      allOf:
        - $ref: '#/components/schemas/PaymentStepRequest'
        - type: object
          properties:
            hint:
              type: string
            javaScriptValidationExpression:
              type: string
            key:
              type: string
            label:
              type: string
    ProvideDetailIntegrationStepRequest:
      description: Request to inquire information from the payer or merchant.
      type: object
      allOf:
        - $ref: '#/components/schemas/PaymentStepRequest'
        - type: object
          properties:
            key:
              type: string
    StepRequest:
      description: Request to perform a step, e.g. redirection to APM hosted payment page. When all steps are complete, the transaction can be processed.
      required:
        - 'type'
      type: object
      properties:
        'type':
          type: string
          example: provide-detail
      discriminator:
        propertyName: 'type'
        mapping:
          provide-detail: '#/components/schemas/ProvideDetailPaymentStepRequest'
    PaymentStepResponse:
      description: Response to a payment step request
      type: object
      allOf:
        - $ref: '#/components/schemas/StepResponse'
    IntegrationStepResponse:
      description: Response to a integration step request
      type: object
      allOf:
        - $ref: '#/components/schemas/StepResponse'
    ProvideDetailIntegrationStepResponse:
      description: Technical detail provided by merchant during integration.
      type: object
      allOf:
        - $ref: '#/components/schemas/IntegrationStepResponse'
        - type: object
          properties:
            detailKey:
              description: MerchantIdentifier of the provided detail.
              type: string
              example: PAYER_IP
            detailValue:
              description: "Integration value provided by merchant during integration"
              type: string
              example: "1.1.1.1"
    ProvideDetailPaymentStepResponse:
      description: Non-technical detail provided by the payer or merchant.
      type: object
      allOf:
        - $ref: '#/components/schemas/PaymentStepResponse'
        - type: object
          properties:
            detailKey:
              description: MerchantIdentifier of the provided detail.
              type: string
              example: BLIK_CODE
            detailValue:
              description: "Value provided by the payer or merchant, validated by JavaScript regular\
                  \ expression"
              type: string
              example: "777712"
    StepResponse:
      required:
        - 'type'
      type: object
      properties:
        'type':
          type: string
          example: provide-detail
      discriminator:
        propertyName: 'type'
        mapping:
          provide-detail: '#/components/schemas/ProvideDetailPaymentStepResponse'
    EncryptedApplePayWalletPaymentMethod:
      description: Wallet payment method containing encrypted Apple Pay information.
      allOf:
      - $ref: '#/components/schemas/WalletPaymentMethod'
      - type: object
        required:
        - encryptedApplePay
        properties:
          encryptedApplePay:
            $ref: '#/components/schemas/EncryptedApplePay'
      example:
        walletType: 'EncryptedApplePayWalletPaymentMethod'
        encryptedApplePay:
          data: 'NdCmVw5nMjQq746HYc/VbiZcQZ/zFzeEcM1wVMPruEG4/C/EFhobSkwB5JZJU+t6JuDVXUBiRYuOOC8FTYd+qIm6ckktid9aiGh0f2NDP0INSr59QXmr389RonyUfRYKnBmwsh5UqtI7Iz0AmMtl1PWMdxcCewtjuffs79ahTnFgXsRN+ynuhyDfbdRanlTnYKGoTeVh9eJfheJ1wquO+jiGj+npJ/Oh9bAdlw7iEHrYO2aUkgaMyXZ3foXRAJeimQVQS1y8lU1PPq62zpPrFzidbnnU5fK25pvGFjOdmLsBELZPk5thQEkSaA9p1LSKzWSesHhi0BxZaFPXSA6ANXvYIU2AT0lG+0O0w1URA5Sinyj3YDZVqjuir6rzNN9bB2U2nTQnKMbuGLMS20K8fUKZN/YLJh+AtE6J69+VVSU95mE1nOb8hyabz6E5RmnC5Ze2k6F/hQ75ig=='
          header:
            applicationDataHash: '94ee059335e587e501cc4bf90613e0814f00a7b08bc7c648fd865a2af6a22cc2'
            ephemeralPublicKey: 'MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEiaU1SbkYTJy/j5L1t51vtGDh4KlNl5MFPWzo/C8r0WcrktWriz5pdRaDVUDvU++KlDu2iuQsd2xSNKJlFscbDQ=='
            publicKeyHash: 'YmSWN7lj4+A6fVJVPicP8TgS7gI7ougD8rEWB5LXtMM='
            transactionId: '31323334353637'
          signature: 'MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIIB0zCCAXkCAQEwCQYHKoZIzj0EATB2MQswCQYDVQQGEwJVUzELMAkGA1UECAwCTkoxFDASBgNVBAcMC0plcnNleSBDaXR5MRMwEQYDVQQKDApGaXJzdCBEYXRhMRIwEAYDVQQLDAlGaXJzdCBBUEkxGzAZBgNVBAMMEmQxZHZ0bDEwMDAuMWRjLmNvbTAeFw0xNTA3MjMxNjQxMDNaFw0xOTA3MjIxNjQxMDNaMHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAErnHhPM18HFbOomJMUiLiPL7nrJuWvfPy0Gg3xsX3m8q0oWhTs1QcQDTT+TR3yh4sDRPqXnsTUwcvbrCOzdUEeTAJBgcqhkjOPQQBA0kAMEYCIQDrC1z2JTx1jZPvllpnkxPEzBGk9BhTCkEB58j/Cv+sXQIhAKGongoz++3tJroo1GxnwvzK/Qmc4P1K2lHoh9biZeNhAAAxggFUMIIBUAIBATB7MHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tAgEBMA0GCWCGSAFlAwQCAQUAoGkwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTUwODEyMTczMTAwWjAvBgkqhkiG9w0BCQQxIgQgJyjKLiGQo3I1ZbfHSmF2XCZ8dNlcZyohziuXO48EKwgwCgYIKoZIzj0EAwIESDBGAiEAznKDYEz9MsC+r1g6e4LR1DTaQOl+X2rVNkWnKDpc1EQCIQCmK48ChHoz4HWnUnW5XqaGWOUXKHQvUgeqFr/jgBUzegAAAAAAAA=='
          applicationData: 'VEVTVA=='
          merchantId: 'order-1'
          version: 'EC_v1'
    EncryptedGooglePayWalletPaymentMethod:
      description: Wallet payment method containing encrypted Google Pay information.
      allOf:
      - $ref: '#/components/schemas/WalletPaymentMethod'
      - type: object
        required:
        - encryptedGooglePay
        properties:
          encryptedGooglePay:
            $ref: '#/components/schemas/EncryptedGooglePay'
        example:
          walletType: 'EncryptedGooglePayWalletPaymentMethod'
          encryptedGooglePay:
            data:
              encryptedMessage: '8nxjB9mr2tWZeDRQRcGN91UUnb7AioGp3oRo8kmQ6lyvJZiqD7PJlbRCYElNqUmr6Z8zK7b2gO9MKOjpnTCqH0qAe2vuIlwNXB60M2Lh7Qfl3bVgWzwF/FfFcenVW381hoItYi8AjWnWoydz1XMTEv2qhqUG03mEnRXdMyDyk6KKZXoW8Qc0p1F1thbxxu8weU8CZbZsWGGTjB42cilIqLVbribcOAG8Oas1AcgefFsu2hwp4gdSuOg7wmeSV7XKsGQzzVy85qtjuqET2XYzJE3K/Wh9QKkhu5P9Ms5s1+Smr2IjRyidqQa88SxQplrVoo9+PvT0bxFcMspBmO3pLkuaZSUBy++dL2fefcxNJvGCFfFhdxW9DojuuQxgpeu7RAQUsGLyFmr/4ZfBxt882xTmpX9MRx5CAudl9qUgBfKdwWwMX35qSbDTm1ju5XXzNh94VebjD3bB9Zj8qgbmUOr/+6OQLhoFJyBCXgx3EEH8hBwNVFrss/SLwQvFhZh62eO6lOtnmbOtP1yTDDVqGDBfai5SwAmM+KTcc9SGv/xDC+cWe8ck+aCBkG4HoRPapUVMZ3JIgV7yzTsVLJE\\u003d\\'
              ephemeralPublicKey: 'BGH3fRFdoAobYrAlxnZOCYzkH84Cna92IZxtgsU36CMDaqSaDYb9/LsY8qw+vMtlBnwsUg/YVMOeeKp+qDkOWb4\\u003d\\'
              tag: 'nvmOUNpnOTZULLhMxT/hWCHzH/4f7gGpfvQgwl3p8ng\\u003d\\'
            signature: 'MEUCIFWTRWUZAOM5nfJC79FtJm56olnbwG4H5uWWxAUWAquiAiEA24j/BcOroeISsdJzYsyoVi8wzu4tnmKw+jdsGfuvPko='
            version: 'ECv1'
    EncryptedSamsungPayWalletPaymentMethod:
      description: Wallet payment method containing encrypted Samsung Pay information.
      allOf:
      - $ref: '#/components/schemas/WalletPaymentMethod'
      - type: object
        required:
        - encryptedSamsungPay
        properties:
          encryptedSamsungPay:
            $ref: '#/components/schemas/EncryptedSamsungPay'
        example:
          walletType: 'EncryptedSamsungPayWalletPaymentMethod'
          encryptedSamsungPay:
            data: 'eyJhbGciOiJSU0ExXzUiLCJraWQiOiJadDRZQ0dpRVMvU2F0RGtuampsdnhxNmdNUTRDK1lvcFJUanJtTDBlRldZPSIsInR5cCI6IkpPU0UiLCJjaGFubmVsU2VjdXJpdHlDb250ZXh0IjoiUlNBX1BLSSIsImVuYyI6IkExMjhHQ00ifQ'
            version: '100'
    DecryptedApplePayWalletPaymentMethod:
      description: Wallet payment method containing decrypted Apple Pay information.
      allOf:
        - $ref: '#/components/schemas/WalletPaymentMethod'
        - type: object
          required:
          - decryptedApplePay
          properties:
            decryptedApplePay:
              $ref: '#/components/schemas/DecryptedApplePay'
          example:
            walletType: 'DecryptedApplePayWalletPaymentMethod'
            decryptedApplePay:
              accountNumber: '4111111111111111'
              expiration: '012040'
              cardholderName: 'John Doe'
              brand: 'VISA'
              cryptogram: 'BB81SRsADvooHCUcDogjMAACAAA='
              eciIndicator: '05'
    DecryptedGooglePayWalletPaymentMethod:
      description: Wallet payment method containing decrypted Google Pay information.
      allOf:
        - $ref: '#/components/schemas/WalletPaymentMethod'
        - type: object
          required:
          - decryptedGooglePay
          properties:
            decryptedGooglePay:
              $ref: '#/components/schemas/DecryptedGooglePay'
          example:
            walletType: 'DecryptedGooglePayWalletPaymentMethod'
            decryptedGooglePay:
              accountNumber: '4111111111111111'
              expiration: '012040'
              cardholderName: 'John Doe'
              brand: 'VISA'
              cryptogram: 'BB81SRsADvooHCUcDogjMAACAAA='
              eciIndicator: '05'
    DecryptedSamsungPayWalletPaymentMethod:
      description: Wallet payment method containing decrypted Samsung Pay information.
      allOf:
        - $ref: '#/components/schemas/WalletPaymentMethod'
        - type: object
          required:
          - decryptedSamsungPay
          properties:
            decryptedSamsungPay:
              $ref: '#/components/schemas/DecryptedSamsungPay'
          example:
            walletType: 'DecryptedSamsungPayWalletPaymentMethod'
            decryptedSamsungPay:
              accountNumber: '4111111111111111'
              expiration: '012040'
              cardholderName: 'John Doe'
              brand: 'VISA'
              cryptogram: 'BB81SRsADvooHCUcDogjMAACAAA='
              eciIndicator: '05'
    MasterpassWalletPaymentMethod:
      description: Masterpass Wallet payment method information.
      allOf:
        - $ref: '#/components/schemas/WalletPaymentMethod'
        - type: object
          required:
          - walletId
          - paymentCard
          properties:
            walletId:
              description: Masterpass Wallet ID.
              type: string
              maxLength: 3
              pattern: '^\S$|^\S.*\S$'
              example: '101'
            paymentCard:
              $ref: '#/components/schemas/PaymentCard'
          example:
            walletType: 'MasterpassWalletPaymentMethod'
            walletId: '101'
            paymentCard:
              number: '5424180279791732'
              expiryDate:
                month: '03'
                year: '21'
              securityCode: '977'
    WalletPaymentMethod:
      description: 'Various wallet payment methods the gateway supports. Abstract class, do not use this class directly, use one of its children: EncryptedApplePayWalletPaymentMethod, EncryptedGooglePayWalletPaymentMethod, EncryptedSamsungPayWalletPaymentMethod, DecryptedApplePayWalletPaymentMethod, DecryptedGooglePayWalletPaymentMethod, DecryptedSamsungPayWalletPaymentMethod, MasterpassWalletPaymentMethod'
      type: object
      discriminator:
        propertyName: walletType
      required:
        - walletType
      properties:
        walletType:
          description: Type of wallet.
          type: string
          example: 'EncryptedApplePayWalletPaymentMethod'
      example:
        walletType: 'EncryptedApplePayWalletPaymentMethod'
        encryptedApplePay:
          data: 'NdCmVw5nMjQq746HYc/VbiZcQZ/zFzeEcM1wVMPruEG4/C/EFhobSkwB5JZJU+t6JuDVXUBiRYuOOC8FTYd+qIm6ckktid9aiGh0f2NDP0INSr59QXmr389RonyUfRYKnBmwsh5UqtI7Iz0AmMtl1PWMdxcCewtjuffs79ahTnFgXsRN+ynuhyDfbdRanlTnYKGoTeVh9eJfheJ1wquO+jiGj+npJ/Oh9bAdlw7iEHrYO2aUkgaMyXZ3foXRAJeimQVQS1y8lU1PPq62zpPrFzidbnnU5fK25pvGFjOdmLsBELZPk5thQEkSaA9p1LSKzWSesHhi0BxZaFPXSA6ANXvYIU2AT0lG+0O0w1URA5Sinyj3YDZVqjuir6rzNN9bB2U2nTQnKMbuGLMS20K8fUKZN/YLJh+AtE6J69+VVSU95mE1nOb8hyabz6E5RmnC5Ze2k6F/hQ75ig=='
          header:
            applicationDataHash: '94ee059335e587e501cc4bf90613e0814f00a7b08bc7c648fd865a2af6a22cc2'
            ephemeralPublicKey: 'MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEiaU1SbkYTJy/j5L1t51vtGDh4KlNl5MFPWzo/C8r0WcrktWriz5pdRaDVUDvU++KlDu2iuQsd2xSNKJlFscbDQ=='
            publicKeyHash: 'YmSWN7lj4+A6fVJVPicP8TgS7gI7ougD8rEWB5LXtMM='
            transactionId: '31323334353637'
          signature: 'MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIIB0zCCAXkCAQEwCQYHKoZIzj0EATB2MQswCQYDVQQGEwJVUzELMAkGA1UECAwCTkoxFDASBgNVBAcMC0plcnNleSBDaXR5MRMwEQYDVQQKDApGaXJzdCBEYXRhMRIwEAYDVQQLDAlGaXJzdCBBUEkxGzAZBgNVBAMMEmQxZHZ0bDEwMDAuMWRjLmNvbTAeFw0xNTA3MjMxNjQxMDNaFw0xOTA3MjIxNjQxMDNaMHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAErnHhPM18HFbOomJMUiLiPL7nrJuWvfPy0Gg3xsX3m8q0oWhTs1QcQDTT+TR3yh4sDRPqXnsTUwcvbrCOzdUEeTAJBgcqhkjOPQQBA0kAMEYCIQDrC1z2JTx1jZPvllpnkxPEzBGk9BhTCkEB58j/Cv+sXQIhAKGongoz++3tJroo1GxnwvzK/Qmc4P1K2lHoh9biZeNhAAAxggFUMIIBUAIBATB7MHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tAgEBMA0GCWCGSAFlAwQCAQUAoGkwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTUwODEyMTczMTAwWjAvBgkqhkiG9w0BCQQxIgQgJyjKLiGQo3I1ZbfHSmF2XCZ8dNlcZyohziuXO48EKwgwCgYIKoZIzj0EAwIESDBGAiEAznKDYEz9MsC+r1g6e4LR1DTaQOl+X2rVNkWnKDpc1EQCIQCmK48ChHoz4HWnUnW5XqaGWOUXKHQvUgeqFr/jgBUzegAAAAAAAA=='
          applicationData: 'VEVTVA=='
          merchantId: 'order-1'
          version: 'EC_v1'
    AliPayPaymentMethod: # APAC and NA only
      description: Payment method containing AliPay information.
      allOf:
      - $ref: '#/components/schemas/PaymentMethod'
      - type: object
        required:
        - aliPay
        properties:
          aliPay:
            $ref: '#/components/schemas/AliPay'
      example:
        aliPay:
          paymentDataType: 'BARCODE'
          paymentData: '283047752805604753'
          orderTitle: 'My Purchase'
          orderDetails: 'These are details about my purchase.'
    PayPalPaymentMethod:
      description: Payment method containing PayPal information.
      allOf:
      - $ref: '#/components/schemas/PaymentMethod'
      - type: object
        required:
        - payPal
        properties:
          payPal:
            $ref: '#/components/schemas/PayPal'
      example:
        payPal:
          recipientEmail: 'John@tester.com'
    SepaSalePaymentMethod: # EMEA only
      description: Payment method containing sepa information.
      allOf:
      - $ref: '#/components/schemas/PaymentMethod'
      - type: object
        required:
        - sepa
        properties:
          sepa:
            $ref: '#/components/schemas/SepaSale'
      example:
        sepa:
          iban: 'DE34500100600032121604'
          name: 'John Doe'
          email: 'john.doe@test.com'
          mandate:
            reference: '3RBQVEE'
            url: 'https://www.firstdata.com'
            signatureDate: '2017-07-15'
            type: 'SINGLE'
    SepaCreditPaymentMethod: # EMEA only
      description: Payment method containing sepa credit information.
      allOf:
      - $ref: '#/components/schemas/PaymentMethod'
      - type: object
        required:
        - sepa
        properties:
          sepa:
            $ref: '#/components/schemas/SepaCredit'
      example:
        sepa:
          iban: 'DE34500100600032121604'
          name: 'John Doe'
    PaymentTokenPaymentMethod:
      description: Payment method containing payment tokenization information.
      allOf:
      - $ref: '#/components/schemas/PaymentMethod'
      - type: object
        required:
        - paymentToken
        properties:
          paymentToken:
            $ref: '#/components/schemas/UsePaymentToken'
          paymentFacilitator:
            $ref: '#/components/schemas/PaymentFacilitator'
      example:
        paymentToken:
          value: '1235325235236'
          function: 'DEBIT'
          securityCode: '977'
    PaymentCardPaymentMethod:
      description: Payment method containing payment card information.
      allOf:
      - $ref: '#/components/schemas/PaymentMethod'
      - type: object
        required:
        - paymentCard
        properties:
          paymentCard:
            $ref: '#/components/schemas/PaymentCard'
          paymentFacilitator:
            $ref: '#/components/schemas/PaymentFacilitator'
      example:
        paymentCard:
          number: '5424180279791732'
          expiryDate:
            month: '12'
            year: '25'
          securityCode: '977'
        paymentFacilitator:
          externalMerchantId: '12345'
          paymentFacilitatorId: '123123123'
          saleOrganizationId: '123124214'
          name: 'First Reseller'
          subMerchantData:
            mcc: '1432'
            legalName: 'First Merchant'
            timezone: 'Europe/London'
            address:
              address1: '123 Main St.'
              city: 'Sandy Springs'
              region: 'Georgia'
              postalCode: '30303'
              country: 'USA'
            document:
              type: 'NATIONAL_IDENTITY'
              number: '12345666544'
            merchantId: '12435325235'
    PaymentDevicePaymentMethod:
      description: Payment method containing payment device information.
      allOf:
      - $ref: '#/components/schemas/PaymentMethod'
      - type: object
        required:
        - paymentDevice
        properties:
          paymentDevice:
            $ref: '#/components/schemas/PaymentDevice'
          paymentFacilitator:
            $ref: '#/components/schemas/PaymentFacilitator'
      example:
        paymentDevice:
          deviceType: 'SWIPE'
          data: '02A600C0170018008292;5424********1732=1810?*B73CD8C26233D4FFEC5500ED394439D97DDA5F530942D21D0000000000000000000000000000000000000000363434543035353734326299492410027300000260DC03'
          securityCode: '977'
          cardholderName: 'First Cardholder'
          cardFunction: 'CREDIT'
          brand: 'VISA'
        paymentFacilitator:
          externalMerchantId: '12345'
          paymentFacilitatorId: '123123123'
          saleOrganizationId: '123124214'
          name: 'First Reseller'
          subMerchantData:
            mcc: '1432'
            legalName: 'First Merchant'
            timezone: 'Europe/London'
            address:
              address1: '123 Main St.'
              city: 'Sandy Springs'
              region: 'Georgia'
              postalCode: '30303'
              country: 'USA'
            document:
              type: 'NATIONAL_IDENTITY'
              number: '12345666544'
            merchantId: '12435325235'
    PaymentMethod:
      description: Various payment methods the Gateway supports. Abstract class, do not use this class directly, use one of its children.
      type: object
    PaymentMethodDetails:
      description: Provides details of the payment method used.
      properties:
        paymentCard:
          $ref: '#/components/schemas/PaymentCard'
        paymentMethodType:
          $ref: '#/components/schemas/PaymentMethodType'
      example:
        paymentCard:
          number: '5424180279791732'
          expiryDate:
            month: '12'
            year: '25'
          securityCode: '977'
        paymentMethodType: 'PAYMENT_CARD'
    PaymentMethodType:
      description: Type of payment method.
      type: string
      enum: [ALIPAY, ALIPAY_PAYSECURE_US, ALIPAY_DOMESTIC, APM, BLIK, CONEKTA, CUP_DOMESTIC, DEBITDE, EMI, GIROPAY, IDEAL, INDIAWALLET, KLARNA, KPS, NETBANKING, PAYMENT_CARD, PAYMENT_TOKEN, PAYPAL, SEPA, SOFORT, TELECHECK, WALLET, WECHAT, WECHAT_DOMESTIC]
      example: 'DEBITDE'
    PaymentCard:
      description: Payment card model.
      required:
        - number
      properties:
        number:
          description: Payment card number.
          type: string
          pattern: '[0-9]{13,19}'
          example: '5424180279791732'
        expiryDate:
          $ref: '#/components/schemas/Expiration'
        securityCode:
          description: Card verification value/number.
          type: string
          minLength: 3
          maxLength: 4
          example: '977'
        cardFunction:
          $ref: '#/components/schemas/CardFunction'
        cardholderName:
          description: Name of the cardholder. Note - Only supported with request payload.
          type: string
          maxLength: 96
          example: 'John Doe'
        bin:
          description: The payment card BIN.
          type: string
          example: '403587'
        last4:
          description: The last 4 numbers of a payment card.
          type: string
          example: '4977'
        brand:
          type: string
          example: 'VISA'
          description: Required only if using dual branded card.
      example:
        number: '5424180279791732'
        expiryDate:
          month: '12'
          year: '25'
        securityCode: '977'
    AuthenticationResult:
      description: Submit the result of 3DS authentication managed outside of the gateway. An AuthenticationResult should not be submitted within the same request as an AuthenticationRequest. Abstract class, do not use this class directly, use one of its children.
      required:
      - authenticationType
      discriminator:
        propertyName: authenticationType
      properties:
        authenticationType:
          description: Specifies the version of 3DS to be used where authentication was managed outside of the gateway.
          type: string
          example: 'Secure3DAuthenticationResult'
      example:
        authenticationType: 'Secure3DAuthenticationResult'
    Secure3D10AuthenticationResult:
      description: Submit the result of the authentication managed outside of the gateway for a 3-D Secure 1.0 scheme. For more convenient usage without implementing 3-D Secure yourself see "authenticationRequest" section. DEPRECATED - use Secure3DAuthenticationResult instead
      allOf:
      - $ref: '#/components/schemas/AuthenticationResult'
      - type: object
        properties:
          verificationResponse:
            description: Card enrollment result from the Verification Response (VeRes).
            type: string
            enum: [Y, N, U]
            example: 'N'
          authenticationAttemptResult:
            description: Result of authentication attempt from Payer Authentication Response (PaRes).
            type: string
            enum: [Y, N, U, A]
            example: 'Y'
          cavv:
            description: The Cardholder Authentication Verification Value (CAVV) is a cryptographic value derived by the issuer during payment authentication that can provide evidence of the results of payment authentication during an online purchase.
            type: string
            minLength: 20
            maxLength: 32
            example: 'AAABCZIhcQAAAABZlyFxAAAAAAA'
          xid:
            description: The transaction identifier (XID) is a unique tracking number set by the merchant.
            type: string
            minLength: 20
            maxLength: 32
            example: 'MfhxI43NrkuWQYLCoRWitYRDMYo'
      example:
        requestType: 'Secure3D10AuthenticationResult'
        verificationResponse: 'Y'
        authenticationAttemptResult: 'Y'
        cavv: 'AAABCZIhcQAAAABZlyFxAAAAAAA'
        xid: 'MfhxI43NrkuWQYLCoRWitYRDMYo'
      deprecated: true # use Secure3DAuthenticationResult instead
    Secure3D21AuthenticationResult:
      description: Submit the result of the authentication managed outside of the gateway for a 3-D Secure 2.x scheme. For more convenient usage without implementing 3-D Secure yourself see "authenticationRequest" section. DEPRECATED - use Secure3DAuthenticationResult instead
      allOf:
      - $ref: '#/components/schemas/AuthenticationResult'
      - type: object
        properties:
          cavv:
            description: The Cardholder Authentication Verification Value (CAVV) is a cryptographic value derived by the issuer during payment authentication that can provide evidence of the results of payment authentication during an online purchase.
            type: string
            minLength: 20
            maxLength: 32
            example: 'AAABCZIhcQAAAABZlyFxAAAAAAA'
          xid:
            description: The transaction identifier (XID) is a unique tracking number set by the merchant.
            type: string
            minLength: 20
            maxLength: 32
            example: 'MfhxI43NrkuWQYLCoRWitYRDMYo'
          transactionId:
            description: The response transaction UUID. Only applicable to MasterCard.
            type: string
            example: 'f38e6948-5388-41a6-bca4-b49723c19437'
          authenticationResponse:
            description: The result of authentication attempt returned by the 3D Secure authentication process (PaRes).
            type: string
            enum: ['A','N','U','Y','C','R']
            default: 'Y'
            example: 'A'
          transactionStatus:
            description: The transaction status as returned by the 3D Secure authentication process.
            type: string
            enum: ['A','N','U','Y','C','R']
            example: 'A'
      example:
        requestType: 'Secure3D21AuthenticationResult'
        cavv: 'AAABCZIhcQAAAABZlyFxAAAAAAA'
        xid: 'MfhxI43NrkuWQYLCoRWitYRDMYo'
        transactionId: 'f38e6948-5388-41a6-bca4-b49723c19437'
        authenticationResponse: Y
        transactionStatus: Y
      deprecated: true # use Secure3DAuthenticationResult instead
    Secure3DAuthenticationResult:
      description: Submit the result of the authentication managed outside of the gateway for a 3-D Secure 2.x scheme. For more convenient usage without implementing 3-D Secure yourself see "authenticationRequest" section.
      allOf:
      - $ref: '#/components/schemas/AuthenticationResult'
      - type: object
        properties:
          cavv:
            description: The Cardholder Authentication Verification Value (CAVV) is a cryptographic value derived by the issuer during payment authentication that can provide evidence of the results of payment authentication during an online purchase.
            type: string
            minLength: 20
            maxLength: 32
            example: 'AAABCZIhcQAAAABZlyFxAAAAAAA'
          xid:
            description: The transaction identifier (XID) is a unique tracking number set by the merchant.
            type: string
            minLength: 20
            maxLength: 32
            example: 'MfhxI43NrkuWQYLCoRWitYRDMYo'
          dsTransactionId:
            description: The response transaction UUID from the DS (directory server)
            type: string
            example: 'f38e6948-5388-41a6-bca4-b49723c19437'
          authenticationResponse:
            description: The result of authentication attempt returned by the 3D Secure authentication process (ARes).
            type: string
            enum: ['A','N','U','Y','C','R']
            example: 'A'
          transactionStatus:
            description: The transaction status as returned by the 3D Secure authentication process. (CRes)
            type: string
            enum: ['A','N','U','Y','C','R']
            example: 'A'
          messageCategory:
            description: >
              Indicates the message category of 3d secure authentication version 2.X.
              01 = Payment Authentication
              02 = Non-Payment Authentication
              80 = Mastercard Data Only
            type: string
            enum: ["01", "02", "80"]
            example: "01"
      example:
        requestType: 'Secure3DAuthenticationResult'
        cavv: 'AAABCZIhcQAAAABZlyFxAAAAAAA'
        xid: 'MfhxI43NrkuWQYLCoRWitYRDMYo'
        dsTransactionId: 'f38e6948-5388-41a6-bca4-b49723c19437'
        transactionStatus: Y
        messageCategory: '01'
    Secure3D10AuthenticationRequest:
      description: Request authentication of the payment card using the 3DS 1.0 URL redirect scheme. DEPRECATED - use Secure3DAuthenticationRequest instead
      allOf:
      - $ref: '#/components/schemas/AuthenticationRequest'
      - type: object
        properties:
          termURL: # should be mandatory, but since it is already in use, it needs to optional to stay backwards compatible
            description: The result of the authentication will be sent to this URL. If not provided, a term URL will be dynamically generated. Note this must be a valid URL (special characters should be URL-encoded).
            type: string
            example: 'https://www.mywebshop.com/process3dSecure'
      example:
        authenticationType: 'Secure3D10AuthenticationRequest'
      deprecated: true # use Secure3DAuthenticationRequest instead
    Secure3D21AuthenticationRequest:
      description: Request authentication of the payment card using the 3DS 2.x URL redirect scheme. DEPRECATED - use Secure3DAuthenticationRequest instead
      allOf:
      - $ref: '#/components/schemas/AuthenticationRequest'
      - type: object
        properties:
          termURL:
            description: The result of the authentication will be sent to this URL. If not provided, a term URL will be dynamically generated. Note this must be a valid URL (special characters should be URL-encoded).
            type: string
            example: 'https://www.mywebshop.com/process3dSecure'
          methodNotificationURL:
            description: The 3DS method iframe and transaction ID will be sent here. Note this must be a valid URL (special characters should be URL-encoded).
            type: string
            example: 'https://www.mywebshop.com/process3dSecureMethodNotification?transactionReferenceNumber=ffffffff-ba0b-539f-8000-016b2343ad7e'
          challengeIndicator:
            description: >
              Indicates whether or not a challenge should be performed.
              01 = No preference (You have no preference whether a challenge should be performed. This is the default value)
              02 = No challenge requested (You prefer that no challenge should be performed)
              03 = Challenge requested: 3DS Requestor Preference (You prefer that a challenge should be performed)
              04 = Challenge requested: Mandate (There are local or regional mandates that mean that a challenge must be performed)
              The following are applicable only for 3DS 2.2 protocol.
              05 = No challenge requested (transactional risk analysis is already performed)
              06 = No challenge requested (Data share only)
              07 = No challenge requested (strong consumer authentication is already performed)
              08 = No challenge requested (utilise whitelist exemption if no challenge required)
              09 = Challenge requested (whitelist prompt requested if challenge required)
            type: string
            enum: ["01", "02", "03", "04", "05", "06", "07", "08", "09"]
            default: "01"
            example: "01"
          challengeWindowSize:
            description: >
              Defines the size of the challenge window displayed to customers during authentication.
              01 = 250 x 400
              02 = 390 x 400
              03 = 500 x 600
              04 = 600 x 400
              05 = Full screen
            type: string
            enum: [ "01", "02", "03", "04", "05" ]
            example: "01"
          browserJavaScriptEnabled:
            description: Indicates if the browser issuing the request is capable of performing JavaScript.
            type: boolean
            nullable: true
            example: true
          requestorAuthenticationIndicator:
            description: >
              Indicates whether or not a challenge should be performed.
              01 = Payment transaction
              02 = Recurring transaction
              03 = Installment transaction
              04 = Add card
              05 = Maintain card
              06 = Card holder verification as part of EMV token ID and Value
            type: string
            enum: ["01", "02", "03", "04", "05", "06"]
            default: "01"
            example: "01"
          secure3DDeviceChannel:
            description: >
              02 = BRW
              03 = 3RI
            type: string
            enum: [ "02", "03" ]
            nullable: true
            example: "02"
          secure3DThreeRIIndicator:
            description: >
              01 = Recurring transaction
              02 = Instalment transaction
              03 = Add card
              04 = Maintain card information
              05 = Account verification
              06 = Split/delayed shipment
              07 = Top-up
              08 = Mail Order
              09 = Telephone Order
              10 = Whitelist status check
              11 = Other payment
            type: string
            enum: [ "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11" ]
            nullable: true
            example: "01"
      example:
        authenticationType: 'Secure3D21AuthenticationRequest'
        termURL: 'https://www.mywebshop.com/process3dSecure'
        methodNotificationURL: 'https://www.mywebshop.com/process3dSecureMethodNotification?transactionReferenceNumber=ffffffff-ba0b-539f-8000-016b2343ad7e'
        challengeIndicator: '01'
        challengeWindowSize: '01'
        browserJavaScriptEnabled: 'true'
        secure3DDeviceChannel: '02'
        secure3DThreeRIIndicator: '01'
        requestorAuthenticationIndicator: '01'
      deprecated: true # use Secure3DAuthenticationRequest instead
    Secure3DAuthenticationRequest:
      description: Request authentication of the payment card using the 3DS 2.x URL redirect scheme.
      allOf:
      - $ref: '#/components/schemas/AuthenticationRequest'
      - type: object
        required:
        - termURL
        - methodNotificationURL
        properties:
          termURL:
            description: The result of the authentication will be sent to this URL. If not provided, a term URL will be dynamically generated. Note this must be a valid URL (special characters should be URL-encoded).
            type: string
            example: 'https://www.mywebshop.com/process3dSecure'
          methodNotificationURL:
            description: The 3DS method iframe and transaction ID will be sent here. Note this must be a valid URL (special characters should be URL-encoded).
            type: string
            example: 'https://www.mywebshop.com/process3dSecureMethodNotification?transactionReferenceNumber=ffffffff-ba0b-539f-8000-016b2343ad7e'
          challengeIndicator:
            description: >
              Indicates whether or not a challenge should be performed.
              01 = No preference (You have no preference whether a challenge should be performed. This is the default value)
              02 = No challenge requested (You prefer that no challenge should be performed)
              03 = Challenge requested: 3DS Requestor Preference (You prefer that a challenge should be performed)
              04 = Challenge requested: Mandate (There are local or regional mandates that mean that a challenge must be performed)
              The following are applicable only for 3DS 2.2 protocol.
              05 = No challenge requested (transactional risk analysis is already performed)
              06 = No challenge requested (Data share only)
              07 = No challenge requested (strong consumer authentication is already performed)
              08 = No challenge requested (utilise whitelist exemption if no challenge required)
              09 = Challenge requested (whitelist prompt requested if challenge required)
            type: string
            enum: ["01", "02", "03", "04", "05", "06", "07", "08", "09"]
            default: "01"
            example: "01"
          messageCategory:
            description: >
              Indicates the message category of 3d secure authentication version 2.X.
              01 = Payment Authentication
              02 = Non-Payment Authentication
              80 = Mastercard Data Only
            type: string
            enum: ["01", "02", "80"]
            example: "01"
          challengeWindowSize:
            description: >
              Defines the size of the challenge window displayed to customers during authentication.
              01 = 250 x 400
              02 = 390 x 400
              03 = 500 x 600
              04 = 600 x 400
              05 = Full screen
            type: string
            enum: [ "01", "02", "03", "04", "05" ]
            example: "01"
          browserJavaScriptEnabled:
            description: Indicates if the browser issuing the request is capable of performing JavaScript.
            type: boolean
            nullable: true
            example: true
          secure3DDeviceChannel:
            description: >
              02 = BRW
              03 = 3RI
            type: string
            enum: [ "02", "03" ]
            nullable: true
            example: "02"
          secure3DThreeRIIndicator:
            description: >
              01 = Recurring transaction
              02 = Instalment transaction
              03 = Add card
              04 = Maintain card information
              05 = Account verification
              06 = Split/delayed shipment
              07 = Top-up
              08 = Mail Order
              09 = Telephone Order
              10 = Whitelist status check
              11 = Other payment
            type: string
            enum: [ "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11" ]
            nullable: true
            example: "01"
          requestorAuthenticationIndicator:
            description: >
              Indicates whether or not a challenge should be performed.
              01 = Payment transaction
              02 = Recurring transaction
              03 = Installment transaction
              04 = Add card
              05 = Maintain card
              06 = Card holder verification as part of EMV token ID and Value
            type: string
            enum: ["01", "02", "03", "04", "05", "06"]
            default: "01"
            example: "01"
      example:
        authenticationType: 'Secure3DAuthenticationRequest'
        termURL: 'https://www.mywebshop.com/process3dSecure'
        methodNotificationURL: 'https://www.mywebshop.com/process3dSecureMethodNotification?transactionReferenceNumber=ffffffff-ba0b-539f-8000-016b2343ad7e'
        challengeIndicator: '01'
        challengeWindowSize: '01'
        browserJavaScriptEnabled: 'true'
        secure3DDeviceChannel: '02'
        secure3DThreeRIIndicator: '01'
        requestorAuthenticationIndicator: '01'
    UnionPayAuthenticationRequest: # APAC only
      description: Request authentication of the payment card using the UnionPay SMS scheme.
      allOf:
      - $ref: '#/components/schemas/AuthenticationRequest'
      - type: object
        required:
        - smsPhoneNumber
        properties:
          smsPhoneNumber:
            description: Mobile number for SMS verification.
            type: string
            minLength: 7
            pattern: '^(?!\s*$).+'
            example: '86-13012345678'
      example:
        authenticationType: 'UnionPayAuthenticationRequest'
        smsPhoneNumber: '86-13012345678'
    AuthenticationRequest:
      description: Request authentication of the payment card to verify the cardholder and be eligible for liability shift. An AuthenticationRequest should not be submitted with in the same request as an AuthenticationResult. Abstract class, do not use this class directly, use one of its children.
      required:
        - authenticationType
      discriminator:
        propertyName: authenticationType
      properties:
        authenticationType:
          description: Indicates what kind of authentication scheme the merchant wants to use on the card.
          type: string
          example: 'UnionPayAuthenticationRequest'
      example:
        authenticationType: 'UnionPayAuthenticationRequest'
    Secure3DAuthenticationResponse:
      description: Encapsulates 3DS authentication details in transaction responses.
      properties:
        type:
          description: The type of authentication.
          type: string
          enum: ["3D_SECURE"]
          example: 3D_SECURE
        version:
          description: The version of 3DS used to authenticate.
          type: string
          enum: ["1.0", "2.1", "2.2"]
          example: "2.1"
        params:
          description: Additional parameters for authentication redirect.
          type: object
          properties:
            payerAuthenticationRequest:
              description: Message sent from merchant server to authenticate the cardholder.
              type: string
              example: 'c7fb83b8ag...73t4a827t4af8738a'
            termURL:
              description: Terminal URL for processing request.
              type: string
              example: 'https://api.example.com/redirectToAcs'
            merchantData:
              description: Formatted string encoding transaction time, order ID, and return URL data.
              type: string
              example: 'MD123...sdfk'
            acsURL:
              description: The URL for the authentication redirect for the merchant.
              type: string
              example: 'https://3ds-acs.test.modirum.com/mdpayacs/pareq'
            cReq:
              description: The CReq message initiates cardholder interaction in a 3DS 2.x challenge flow and carries authentication data from the cardholder.
              type: string
              example: "ewogICAiYWNzVHJhbnNJRCIgOiAiMDAwMDAwMDAtMDAwNS01YTVhLTgwMDAtMDE2ZmE1NTYzODMyIiwKICAgImNoYWxsZW5nZVdpbmRvd1NpemUiIDogIjAzIiwKICAgIm1lc3NhZ2VUeXBlIiA6ICJDUmVxIiwKICAgIm1lc3NhZ2VWZXJzaW9uIiA6ICIyLjEuMCIsCiAgICJ0aHJlZURTU2VydmVyVHJhbnNJRCIgOiAiZGVmOWZiZDgtZjkzNS01YzcyLTgwMDAtMDAwMDAwMDgyOWVkIgp9"
            sessionData:
              description: Customer web browser session data.
              type: string
              example: "50F2156E03083CA665BCB4.."
        secure3dMethod:
          description: Encapsulates the 3DS method form and unique transaction identifier.
          type: object
          properties:
            methodForm:
              description: An iframe to be hidden in the browser used to collect browser data for the issuers. This information adds to the overall consumer profile and helps in identifying potentially fraudulent transactions.
              type: string
              example: |-
                &lt;!DOCTYPE iframe SYSTEM "about:legacy-compat"&gt; &lt;iframe id="tdsMmethodTgtFrame" name="tdsMmethodTgtFrame"
                         style="width: 1px; height: 1px; display: none;" src="javascript:false;" xmlns="http://www.w3.org/1999/xhtml"&gt;
                &lt;!--.--&gt; &lt;/iframe&gt;&lt;form id="tdsMmethodForm" name="tdsMmethodForm"
                         action="https://localhost.modirum.com:8543/dstests/ACSEmu2" method="post"
                         target="tdsMmethodTgtFrame" xmlns="http://www.w3.org/1999/xhtml"&gt; &lt;input type="hidden" name="3DSMethodData"
                         value="eyAidGhyZWVEU1NlcnZlclRyYW5zSUQiIDogIjAwMDAwMDAwLTU2NzYtNTY2My04MDAwLTAwMDAw
                &amp;#10;MDAwNDFhOSIsICJ0aHJlZURTTWV0aG9kTm90aWZpY2F0aW9uVVJMIiA6ICJodHRwczovL2xvY
                         2Fs&amp;#10;aG9zdC5tb2RpcnVtLmNvbTo4NTQzL21kcGF5bXBpL01lcmNoYW50U2VydmVyP21uPVkmdHhpZD0x
                &amp;#10;NjgwOSZkaWdlc3Q9aSUyQnhhUEF5NWFOcVJRbllqNmozbWFDZlFJbTdFdjJYTmkwNn
                         h6YmZNJTJG&amp;#10;R3MlM0QiIH0"/&gt; &lt;input type="hidden" name="threeDSMethodData"
                         value="eyAidGhyZWVEU1NlcnZlclRyYW5zSUQiIDogIjAwMDAwMDAwLTU2NzYtNTY2My04MDAwLTAwMDA
                         w&amp;#10;MDAwNDFhOSIsICJ0aHJlZURTTWV0aG9kTm90aWZpY2F0aW9uVVJMIiA6ICJodHRwczovL2xvY
                         2Fs&amp;#10;aG9zdC5tb2RpcnVtLmNvbTo4NTQzL21kcGF5bXBpL01lcmNoYW50U2VydmVyP21uPVkmd
                         HhpZD0x&amp;#10;NjgwOSZkaWdlc3Q9aSUyQnhhUEF5NWFOcVJRbllqNmozbWFDZlFJbTdFdjJYTmkwNn
                         h6YmZNJTJG&amp;#10;R3MlM0QiIH0"/&gt;
                &lt;/form&gt;&lt;script type="text/javascript" xmlns="http://www.w3.org/1999/xhtml"&gt;
                         document.getElementById("tdsMmethodForm").submit(); &lt;/script&gt;
            secure3dTransId:
              description: A unique transaction identifier supplied by the ACS.
              type: string
              example: '3ac7caa7-aa42-2663-791b-2ac05a542c4a'
      example:
        type: "3D_SECURE"
        version: "2.1"
        redirectURL: "http://pay.issuer-bank.com/sessionID=123&sharedKey=456"
        secure3dMethod: |-
          &lt;!DOCTYPE iframe SYSTEM "about:legacy-compat"&gt; &lt;iframe id="tdsMmethodTgtFrame" name="tdsMmethodTgtFrame"
                                   style="width: 1px; height: 1px; display: none;" src="javascript:false;" xmlns="http://www.w3.org/1999/xhtml"&gt;
                          &lt;!--.--&gt; &lt;/iframe&gt;&lt;form id="tdsMmethodForm" name="tdsMmethodForm"
                                   action="https://localhost.modirum.com:8543/dstests/ACSEmu2" method="post"
                                   target="tdsMmethodTgtFrame" xmlns="http://www.w3.org/1999/xhtml"&gt; &lt;input type="hidden" name="3DSMethodData"
                                   value="eyAidGhyZWVEU1NlcnZlclRyYW5zSUQiIDogIjAwMDAwMDAwLTU2NzYtNTY2My04MDAwLTAwMDAw
                          &amp;#10;MDAwNDFhOSIsICJ0aHJlZURTTWV0aG9kTm90aWZpY2F0aW9uVVJMIiA6ICJodHRwczovL2xvY
                                   2Fs&amp;#10;aG9zdC5tb2RpcnVtLmNvbTo4NTQzL21kcGF5bXBpL01lcmNoYW50U2VydmVyP21uPVkmdHhpZD0x
                          &amp;#10;NjgwOSZkaWdlc3Q9aSUyQnhhUEF5NWFOcVJRbllqNmozbWFDZlFJbTdFdjJYTmkwNn
                                   h6YmZNJTJG&amp;#10;R3MlM0QiIH0"/&gt; &lt;input type="hidden" name="threeDSMethodData"
                                   value="eyAidGhyZWVEU1NlcnZlclRyYW5zSUQiIDogIjAwMDAwMDAwLTU2NzYtNTY2My04MDAwLTAwMDA
                                   w&amp;#10;MDAwNDFhOSIsICJ0aHJlZURTTWV0aG9kTm90aWZpY2F0aW9uVVJMIiA6ICJodHRwczovL2xvY
                                   2Fs&amp;#10;aG9zdC5tb2RpcnVtLmNvbTo4NTQzL21kcGF5bXBpL01lcmNoYW50U2VydmVyP21uPVkmd
                                   HhpZD0x&amp;#10;NjgwOSZkaWdlc3Q9aSUyQnhhUEF5NWFOcVJRbllqNmozbWFDZlFJbTdFdjJYTmkwNn
                                   h6YmZNJTJG&amp;#10;R3MlM0QiIH0"/&gt;
                          &lt;/form&gt;&lt;script type="text/javascript" xmlns="http://www.w3.org/1999/xhtml"&gt;
                                   document.getElementById("tdsMmethodForm").submit(); &lt;/script&gt;
        secure3dTransId: "3ac7caa7-aa42-2663-791b-2ac05a542c4a"
    Expiration:
      description: Required for normal transactions except for payment with 'RECURRING' flags.
      required:
        - month
        - year
      properties:
        month:
          description: Month of the card expiration date in MM format.
          type: string
          pattern: '^(0[1-9]|1[012])$'
          example: '03'
        year:
          description: Year of the card expiration date in YY format.
          type: string
          pattern: '^([0-9]{2})$'
          example: '21'
      example:
        month: '03'
        year: '22'
    SepaSale: # EMEA only
      description: The payment object for SEPA Local Payment.
      required:
        - iban
        - name
        - mandate
      properties:
        iban:
          description: Bank account in IBAN format.
          type: string
          maxLength: 34
          pattern: '^(?!\s*$).+'
          example: 'DE34500100600032121604'
        name:
          description: The name of the payer.
          type: string
          maxLength: 96
          pattern: '^(?!\s*$).+'
          example: 'John Doe'
        email:
          description: The email address of the payer.
          type: string
          maxLength: 254
          example: 'john.doe@test.com'
        mandate:
          $ref: '#/components/schemas/SepaMandate'
      example:
        iban: 'DE34500100600032121604'
        name: 'John Doe'
        email: 'john.doe@test.com'
        mandate:
          reference: '3RBQVEE'
          url: 'https://www.firstdata.com'
          signatureDate: '2017-07-15'
          type: 'SINGLE'
    SepaCredit: # EMEA only
      description: The payment object for SEPA Credit Local Payment.
      required:
        - iban
        - name
      properties:
        iban:
          description: Bank account in IBAN format.
          type: string
          maxLength: 34
          pattern: '^(?!\s*$).+'
          example: 'DE34500100600032121604'
        name:
          description: The name of the Account Holder.
          type: string
          maxLength: 70
          pattern: '^(?!\s*$).+'
          example: 'John Doe'
      example:
        iban: 'DE34500100600032121604'
        name: 'John Doe'
    SepaMandate: # EMEA only
      description: Model for the SEPA Mandate information.
      required:
        - reference
        - signatureDate
        - type
      properties:
        reference:
          description: Existing mandate reference, managed by merchant. Must match [A-Za-z0-9:?/+(),. -]{1,35} and not start with two slashes ("//"). Also known as the mandate ID.
          type: string
          maxLength: 35
          pattern: '[A-Za-z0-9:?/+(),. -]{1,35}'
          example: '3RBQVEE'
        url:
          description: Valid URL pointing to the SEPA mandate (PDF / HTML format recommended). When your store is enabled for SEPA Direct Debit as part of the Local Payments offering, this field allows you to transmit a valid URL of SEPA Direct Debit mandate to enable the Risk and Compliance department to access the details. Please note that it is mandatory to submit a mandateReference and a mandateDate together with a mandateUrl in case you manage SEPA Direct Debit mandates on your side in the combination with the Local Payments offering.
          type: string
          maxLength: 100
          pattern: '^(?!\s*$).+'
          example: 'https://www.firstdata.com'
        signatureDate:
          description: Date of mandate signature.
          type: string
          format: date
          example: '2017-07-15'
        type:
          description: Sequence type of the direct debit. This defaults to 'SINGLE' if not provided.
          type: string
          enum: [SINGLE, FIRST_COLLECTION, RECURRING_COLLECTION, FINAL_COLLECTION]
          default: SINGLE
          example: 'FINAL_COLLECTION'
      example:
        reference: '3RBQVEE'
        url: 'https://www.firstdata.com'
        signatureDate: '2017-07-15'
        type: 'SINGLE'
    PayPal:
      description: The payment object for PayPal transactions.
      required:
        - recipientEmail
      properties:
        recipientEmail:
          description: Email address of the recipient.
          type: string
          maxLength: 254
          pattern: '^(?!\s*$).+'
          example: 'john@tester.com'
      example:
        recipientEmail: 'john@tester.com'
    AVSResponse:
      description: The processor address validation response for compliance.
      properties:
        streetMatch:
          description: 'Response if street matches that on file.'
          type: string
          enum: [Y, N, NO_INPUT_DATA, NOT_CHECKED]
          example: 'Y'
        postalCodeMatch:
          description: 'Response if postal code matches that on file.'
          type: string
          enum: [Y, N, NO_INPUT_DATA, NOT_CHECKED]
          example: 'N'
        associationAvsResponse:
          description: 'The raw address verification response code returned by issuer. Please refer to response codes section in developer portal for more info.'
          type: string
          example: 'Y'
      example:
        streetMatch: 'Y'
        postalCodeMatch: 'N'
        associationAvsResponse: 'Y'
    CardholderInfoResponse:
      description: The processor Cardholder Info Response.
      properties:
        postalCodeOrZipMatch:
          description: 'Response if card holder postal code matches that on file.'
          type: string
          example: 'Y'
        addressMatch:
          description: 'Response if card holder address matches that on file.'
          type: string
          example: 'RETRY'
        nameMatch:
          description: 'Response if card holder name matches that on file.'
          type: string
          example: 'SERVICE_NOT_ALLOWED'
        telephoneMatch:
          description: 'Response if card holder telephone matches that on file.'
          type: string
          example: 'NOT_CHECKED'
        emailMatch:
          description: 'Response if card holder email matches that on file.'
          type: string
          example: 'N'
        associationCardholderInfoResponse:
          description: 'Raw cardholder info response from AMEX with no mapping.'
          type: string
          example: 'YNUSR'
    AliPay: # APAC and NA only
      description: The payment object for AliPay transactions. Use this to populate AliPay payment method details.
      required:
        - paymentDataType
        - paymentData
        - orderTitle
        - orderDetails
      properties:
        paymentDataType:
          description: Use this to indicate the type of machine-readable payment data for scanning.
          type: string
          enum: [BARCODE, QRCODE]
          example: 'QRCODE'
        paymentData:
          description: Use this to send payment-related information, such as customer identity ID.
          type: string
          maxLength: 100
          pattern: '^(?!\s*$).+'
          example: '283047752805604753'
        orderTitle:
          description: Use this to send an order title that shows up in the statement.
          type: string
          maxLength: 100
          pattern: '^(?!\s*$).+'
          example: 'My Purchase'
        orderDetails:
          description: Use this to send order details that show up in the statement.
          type: string
          maxLength: 1024
          pattern: '^(?!\s*$).+'
          example: 'These are the details about my purchase.'
      example:
        paymentDataType: 'BARCODE'
        paymentData: '283047752805604753'
        orderTitle: 'My Purchase'
        orderDetails: 'These are details about my purchase.'
    ChinaDomestic: # APAC only
      description: The payment object for China-domestic transactions. Use this to populate all china domestic payment method details.
      type: object
      required:
        - productCode
        - productQuantity
        - productPrice
        - productDescription
        - redirectURL
      properties:
        productCode:
          description: Use this to indicate the product code according to the product category list.
          type: string
          maxLength: 32
          pattern: '^(?!\s*$).+'
          example: 'R2D2C3PO'
        productQuantity:
          description: The quantity.
          type: integer
          minimum: 1
          example: 10
        productPrice:
          description: Rate amount in 3 decimal 12 bytes total digit.
          type: number
          example: 3.20
        productDescription:
          description: The product description.
          type: string
          maxLength: 100
          pattern: '^(?!\s*$).+'
          example: 'Best product ever'
        redirectURL:
          description: Use this to indicate the product code according to the product category list.
          type: string
          maxLength: 1024
          pattern: '^(?!\s*$).+'
          example: 'www.urlredirectedto.com'
        limitCardFunctionToDebit:
          description: Use this to limit card functions to debit cards.
          type: boolean
          example: true
        customerId:
          description: Use this to indicate the CUP customer ID if known.
          type: string
          maxLength: 32
          example: 'ID3Bs'
        bankId:
          description: Use this to indicate the CUP bank ID if known.
          type: string
          maxLength: 8
          example: '123456'
        openId:
          description: Use this as unique identifier of WeChat user which is corresponded to the appid of merchant. The field is only applicable for ChinaDomesticPaymentMethod - brand = WECHAT_DOMESTIC
          type: string
          maxLength: 128
          example: op5EP1G8XtyYH1VvmAbleB3AYgc8
      example:
        productCode: 'R2D2C3PO'
        productQuantity: 10
        productPrice: 3.20
        productDescription: 'Best product ever'
        redirectURL: 'www.urlredirectedto.com'
        limitCardFunctionToDebit: true
        customerId: 'ID3Bs'
        bankId: '123456'
    EncryptedApplePay:
      description: Encrypted Apple Pay payload.
      required:
        - data
        - header
        - signature
        - merchantId
      properties:
        data:
          description: The encrypted wallet payload.
          type: string
          pattern: '^(?!\s*$).+'
          example: 'NdCmVw5nMjQq746HYc/VbiZcQZ/zFzeEcM1wVMPruEG4/C/EFhobSkwB5JZJU+t6JuDVXUBiRYuOOC8FTYd+qIm6ckktid9aiGh0f2NDP0INSr59QXmr389RonyUfRYKnBmwsh5UqtI7Iz0AmMtl1PWMdxcCewtjuffs79ahTnFgXsRN+ynuhyDfbdRanlTnYKGoTeVh9eJfheJ1wquO+jiGj+npJ/Oh9bAdlw7iEHrYO2aUkgaMyXZ3foXRAJeimQVQS1y8lU1PPq62zpPrFzidbnnU5fK25pvGFjOdmLsBELZPk5thQEkSaA9p1LSKzWSesHhi0BxZaFPXSA6ANXvYIU2AT0lG+0O0w1URA5Sinyj3YDZVqjuir6rzNN9bB2U2nTQnKMbuGLMS20K8fUKZN/YLJh+AtE6J69+VVSU95mE1nOb8hyabz6E5RmnC5Ze2k6F/hQ75ig=='
        header:
          description: Additional version-dependent information used to decrypt and verify the payment.
          type: object
          required:
            - ephemeralPublicKey
            - publicKeyHash
            - transactionId
          example:
            ephemeralPublicKey: 'MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEiaU1SbkYTJy/j5L1t51vtGDh4KlNl5MFPWzo/C8r0WcrktWriz5pdRaDVUDvU++KlDu2iuQsd2xSNKJlFscbDQ=='
            publicKeyHash: 'YmSWN7lj4+A6fVJVPicP8TgS7gI7ougD8rEWB5LXtMM='
            transactionId: '31323334353637'
          properties:
            applicationDataHash:
              description: Merchant supplied information about the payment request. Contains Base64-encoded SHA256 hash of the applicationData property of the original PKPaymentRequest. Note - applicationData from PaymentData of PKPaymentToken Refer to Apple Pay documentation.
              type: string
              example: '94ee059335e587e501cc4bf90613e0814f00a7b08bc7c648fd865a2af6a22cc2'
            ephemeralPublicKey:
              description: Temporary key for generating shared secret from a device.
              type: string
              pattern: '^(?!\s*$).+'
              example: 'MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEiaU1SbkYTJy/j5L1t51vtGDh4KlNl5MFPWzo/C8r0WcrktWriz5pdRaDVUDvU++KlDu2iuQsd2xSNKJlFscbDQ=='
            publicKeyHash:
              description: Hash of the X.509 encoded public key bytes of the merchant’s certificate.
              type: string
              pattern: '^(?!\s*$).+'
              example: 'YmSWN7lj4+A6fVJVPicP8TgS7gI7ougD8rEWB5LXtMM='
            transactionId:
              description: Transaction identifier, generated on the device.
              type: string
              pattern: '^(?!\s*$).+'
              example: '31323334353637'
        signature:
          description: Signature of the payment and header data.
          type: string
          pattern: '^(?!\s*$).+'
          example: 'MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIIB0zCCAXkCAQEwCQYHKoZIzj0EATB2MQswCQYDVQQGEwJVUzELMAkGA1UECAwCTkoxFDASBgNVBAcMC0plcnNleSBDaXR5MRMwEQYDVQQKDApGaXJzdCBEYXRhMRIwEAYDVQQLDAlGaXJzdCBBUEkxGzAZBgNVBAMMEmQxZHZ0bDEwMDAuMWRjLmNvbTAeFw0xNTA3MjMxNjQxMDNaFw0xOTA3MjIxNjQxMDNaMHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAErnHhPM18HFbOomJMUiLiPL7nrJuWvfPy0Gg3xsX3m8q0oWhTs1QcQDTT+TR3yh4sDRPqXnsTUwcvbrCOzdUEeTAJBgcqhkjOPQQBA0kAMEYCIQDrC1z2JTx1jZPvllpnkxPEzBGk9BhTCkEB58j/Cv+sXQIhAKGongoz++3tJroo1GxnwvzK/Qmc4P1K2lHoh9biZeNhAAAxggFUMIIBUAIBATB7MHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tAgEBMA0GCWCGSAFlAwQCAQUAoGkwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTUwODEyMTczMTAwWjAvBgkqhkiG9w0BCQQxIgQgJyjKLiGQo3I1ZbfHSmF2XCZ8dNlcZyohziuXO48EKwgwCgYIKoZIzj0EAwIESDBGAiEAznKDYEz9MsC+r1g6e4LR1DTaQOl+X2rVNkWnKDpc1EQCIQCmK48ChHoz4HWnUnW5XqaGWOUXKHQvUgeqFr/jgBUzegAAAAAAAA=='
        version:
          description: Version information about the payment token.
          type: string
          enum: ['EC_v1']
          example: 'EC_v1'
        applicationData:
          description: Base64-encoded value of PKPaymentRequest. Required only if applicationDataHash is present.
          type: string
          example: 'VEVTVA=='
        merchantId:
          description: The merchant ID assigned by the wallet provider.
          type: string
          pattern: '^(?!\s*$).+'
          example: 'order-1'
      example:
        data: 'NdCmVw5nMjQq746HYc/VbiZcQZ/zFzeEcM1wVMPruEG4/C/EFhobSkwB5JZJU+t6JuDVXUBiRYuOOC8FTYd+qIm6ckktid9aiGh0f2NDP0INSr59QXmr389RonyUfRYKnBmwsh5UqtI7Iz0AmMtl1PWMdxcCewtjuffs79ahTnFgXsRN+ynuhyDfbdRanlTnYKGoTeVh9eJfheJ1wquO+jiGj+npJ/Oh9bAdlw7iEHrYO2aUkgaMyXZ3foXRAJeimQVQS1y8lU1PPq62zpPrFzidbnnU5fK25pvGFjOdmLsBELZPk5thQEkSaA9p1LSKzWSesHhi0BxZaFPXSA6ANXvYIU2AT0lG+0O0w1URA5Sinyj3YDZVqjuir6rzNN9bB2U2nTQnKMbuGLMS20K8fUKZN/YLJh+AtE6J69+VVSU95mE1nOb8hyabz6E5RmnC5Ze2k6F/hQ75ig=='
        header:
          applicationDataHash: '94ee059335e587e501cc4bf90613e0814f00a7b08bc7c648fd865a2af6a22cc2'
          ephemeralPublicKey: 'MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEiaU1SbkYTJy/j5L1t51vtGDh4KlNl5MFPWzo/C8r0WcrktWriz5pdRaDVUDvU++KlDu2iuQsd2xSNKJlFscbDQ=='
          publicKeyHash: 'YmSWN7lj4+A6fVJVPicP8TgS7gI7ougD8rEWB5LXtMM='
          transactionId: '31323334353637'
        signature: 'MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIIB0zCCAXkCAQEwCQYHKoZIzj0EATB2MQswCQYDVQQGEwJVUzELMAkGA1UECAwCTkoxFDASBgNVBAcMC0plcnNleSBDaXR5MRMwEQYDVQQKDApGaXJzdCBEYXRhMRIwEAYDVQQLDAlGaXJzdCBBUEkxGzAZBgNVBAMMEmQxZHZ0bDEwMDAuMWRjLmNvbTAeFw0xNTA3MjMxNjQxMDNaFw0xOTA3MjIxNjQxMDNaMHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAErnHhPM18HFbOomJMUiLiPL7nrJuWvfPy0Gg3xsX3m8q0oWhTs1QcQDTT+TR3yh4sDRPqXnsTUwcvbrCOzdUEeTAJBgcqhkjOPQQBA0kAMEYCIQDrC1z2JTx1jZPvllpnkxPEzBGk9BhTCkEB58j/Cv+sXQIhAKGongoz++3tJroo1GxnwvzK/Qmc4P1K2lHoh9biZeNhAAAxggFUMIIBUAIBATB7MHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tAgEBMA0GCWCGSAFlAwQCAQUAoGkwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTUwODEyMTczMTAwWjAvBgkqhkiG9w0BCQQxIgQgJyjKLiGQo3I1ZbfHSmF2XCZ8dNlcZyohziuXO48EKwgwCgYIKoZIzj0EAwIESDBGAiEAznKDYEz9MsC+r1g6e4LR1DTaQOl+X2rVNkWnKDpc1EQCIQCmK48ChHoz4HWnUnW5XqaGWOUXKHQvUgeqFr/jgBUzegAAAAAAAA=='
        applicationData: 'VEVTVA=='
        merchantId: 'order-1'
        version: 'EC_v1'
    EncryptedGooglePay:
      description: Encrypted Google Pay payload.
      required:
        - data
        - signature
        - version
      properties:
        data:
          description: The encrypted wallet payload.
          type: object
          required:
            - encryptedMessage
            - ephemeralPublicKey
            - tag
          example:
            encryptedMessage: '8nxjB9mr2tWZeDRQRcGN91UUnb7AioGp3oRo8kmQ6lyvJZiqD7PJlbRCYElNqUmr6Z8zK7b2gO9MKOjpnTCqH0qAe2vuIlwNXB60M2Lh7Qfl3bVgWzwF/FfFcenVW381hoItYi8AjWnWoydz1XMTEv2qhqUG03mEnRXdMyDyk6KKZXoW8Qc0p1F1thbxxu8weU8CZbZsWGGTjB42cilIqLVbribcOAG8Oas1AcgefFsu2hwp4gdSuOg7wmeSV7XKsGQzzVy85qtjuqET2XYzJE3K/Wh9QKkhu5P9Ms5s1+Smr2IjRyidqQa88SxQplrVoo9+PvT0bxFcMspBmO3pLkuaZSUBy++dL2fefcxNJvGCFfFhdxW9DojuuQxgpeu7RAQUsGLyFmr/4ZfBxt882xTmpX9MRx5CAudl9qUgBfKdwWwMX35qSbDTm1ju5XXzNh94VebjD3bB9Zj8qgbmUOr/+6OQLhoFJyBCXgx3EEH8hBwNVFrss/SLwQvFhZh62eO6lOtnmbOtP1yTDDVqGDBfai5SwAmM+KTcc9SGv/xDC+cWe8ck+aCBkG4HoRPapUVMZ3JIgV7yzTsVLJE\\u003d\\'
            ephemeralPublicKey: 'BGH3fRFdoAobYrAlxnZOCYzkH84Cna92IZxtgsU36CMDaqSaDYb9/LsY8qw+vMtlBnwsUg/YVMOeeKp+qDkOWb4\\u003d\\'
            tag: 'nvmOUNpnOTZULLhMxT/hWCHzH/4f7gGpfvQgwl3p8ng\\u003d\\'
          properties:
            encryptedMessage:
              description: The encrypted message containing the actual payment information as well as additional security fields.
              type: string
              pattern: '^(?!\s*$).+'
              example: '8nxjB9mr2tWZeDRQRcGN91UUnb7AioGp3oRo8kmQ6lyvJZiqD7PJlbRCYElNqUmr6Z8zK7b2gO9MKOjpnTCqH0qAe2vuIlwNXB60M2Lh7Qfl3bVgWzwF/FfFcenVW381hoItYi8AjWnWoydz1XMTEv2qhqUG03mEnRXdMyDyk6KKZXoW8Qc0p1F1thbxxu8weU8CZbZsWGGTjB42cilIqLVbribcOAG8Oas1AcgefFsu2hwp4gdSuOg7wmeSV7XKsGQzzVy85qtjuqET2XYzJE3K/Wh9QKkhu5P9Ms5s1+Smr2IjRyidqQa88SxQplrVoo9+PvT0bxFcMspBmO3pLkuaZSUBy++dL2fefcxNJvGCFfFhdxW9DojuuQxgpeu7RAQUsGLyFmr/4ZfBxt882xTmpX9MRx5CAudl9qUgBfKdwWwMX35qSbDTm1ju5XXzNh94VebjD3bB9Zj8qgbmUOr/+6OQLhoFJyBCXgx3EEH8hBwNVFrss/SLwQvFhZh62eO6lOtnmbOtP1yTDDVqGDBfai5SwAmM+KTcc9SGv/xDC+cWe8ck+aCBkG4HoRPapUVMZ3JIgV7yzTsVLJE\\u003d\\'
            ephemeralPublicKey:
              description: The ephemeral public key associated with the private key to encrypt the message in uncompressed point format.
              type: string
              pattern: '^(?!\s*$).+'
              example: 'BGH3fRFdoAobYrAlxnZOCYzkH84Cna92IZxtgsU36CMDaqSaDYb9/LsY8qw+vMtlBnwsUg/YVMOeeKp+qDkOWb4\\u003d\\'
            tag:
              description: MAC of the encryptedMessage.
              type: string
              pattern: '^(?!\s*$).+'
              example: 'nvmOUNpnOTZULLhMxT/hWCHzH/4f7gGpfvQgwl3p8ng\\u003d\\'
        signature:
          description: Signature for verifying that the message comes from Google. The signature is created using ECDSA.
          type: string
          pattern: '^(?!\s*$).+'
          example: 'MEUCIFWTRWUZAOM5nfJC79FtJm56olnbwG4H5uWWxAUWAquiAiEA24j/BcOroeISsdJzYsyoVi8wzu4tnmKw+jdsGfuvPko='
        version:
          description: Identifies under which encryption/signing scheme this message has been created. In this way, the protocol can evolve over time if needed. For Google Payments transactions, this should be set to ECv1.
          type: string
          pattern: '^(?!\s*$).+'
          example: 'ECv1'
      example:
        data:
          encryptedMessage: '8nxjB9mr2tWZeDRQRcGN91UUnb7AioGp3oRo8kmQ6lyvJZiqD7PJlbRCYElNqUmr6Z8zK7b2gO9MKOjpnTCqH0qAe2vuIlwNXB60M2Lh7Qfl3bVgWzwF/FfFcenVW381hoItYi8AjWnWoydz1XMTEv2qhqUG03mEnRXdMyDyk6KKZXoW8Qc0p1F1thbxxu8weU8CZbZsWGGTjB42cilIqLVbribcOAG8Oas1AcgefFsu2hwp4gdSuOg7wmeSV7XKsGQzzVy85qtjuqET2XYzJE3K/Wh9QKkhu5P9Ms5s1+Smr2IjRyidqQa88SxQplrVoo9+PvT0bxFcMspBmO3pLkuaZSUBy++dL2fefcxNJvGCFfFhdxW9DojuuQxgpeu7RAQUsGLyFmr/4ZfBxt882xTmpX9MRx5CAudl9qUgBfKdwWwMX35qSbDTm1ju5XXzNh94VebjD3bB9Zj8qgbmUOr/+6OQLhoFJyBCXgx3EEH8hBwNVFrss/SLwQvFhZh62eO6lOtnmbOtP1yTDDVqGDBfai5SwAmM+KTcc9SGv/xDC+cWe8ck+aCBkG4HoRPapUVMZ3JIgV7yzTsVLJE\\u003d\\'
          ephemeralPublicKey: 'BGH3fRFdoAobYrAlxnZOCYzkH84Cna92IZxtgsU36CMDaqSaDYb9/LsY8qw+vMtlBnwsUg/YVMOeeKp+qDkOWb4\\u003d\\'
          tag: 'nvmOUNpnOTZULLhMxT/hWCHzH/4f7gGpfvQgwl3p8ng\\u003d\\'
        signature: 'MEUCIFWTRWUZAOM5nfJC79FtJm56olnbwG4H5uWWxAUWAquiAiEA24j/BcOroeISsdJzYsyoVi8wzu4tnmKw+jdsGfuvPko='
        version: 'ECv1'
    EncryptedSamsungPay:
      description: Encrypted Samsung Pay payload.
      required:
        - data
      properties:
        data:
          description: The encrypted wallet payload.
          type: string
          pattern: '^(?!\s*$).+'
          example: '8nxjB9mr2tWZeDRQRcGN91UUnb7AioGp3oRo8kmQ6lyvJZiqD7PJlbRCYElNqUmr6Z8zK7b2gO9MKOjpnTCqH0qAe2vuIlwNXB60M2Lh7Qfl3bVgWzwF/FfFcenVW381hoItYi8AjWnWoydz1XMTEv2qhqUG03mEnRXdMyDyk6KKZXoW8Qc0p1F1thbxxu8weU8CZbZsWGGTjB42cilIqLVbribcOAG8Oas1AcgefFsu2hwp4gdSuOg7wmeSV7XKsGQzzVy85qtjuqET2XYzJE3K/Wh9QKkhu5P9Ms5s1+Smr2IjRyidqQa88SxQplrVoo9+PvT0bxFcMspBmO3pLkuaZSUBy++dL2fefcxNJvGCFfFhdxW9DojuuQxgpeu7RAQUsGLyFmr/4ZfBxt882xTmpX9MRx5CAudl9qUgBfKdwWwMX35qSbDTm1ju5XXzNh94VebjD3bB9Zj8qgbmUOr/+6OQLhoFJyBCXgx3EEH8hBwNVFrss/SLwQvFhZh62eO6lOtnmbOtP1yTDDVqGDBfai5SwAmM+KTcc9SGv/xDC+cWe8ck+aCBkG4HoRPapUVMZ3JIgV7yzTsVLJE\\u003d\\'
        version:
          description: Identifies under which encryption/signing scheme this message has been created. In this way, the protocol can evolve over time if needed. For Google Payments transactions, this should be set to ECv1.
          type: string
          pattern: '^(?!\s*$).+'
          example: '100'
      example:
        data: 'eyJhbGciOiJSU0ExXzUiLCJraWQiOiJadDRZQ0dpRVMvU2F0RGtuampsdnhxNmdNUTRDK1lvcFJUanJtTDBlRldZPSIsInR5cCI6IkpPU0UiLCJjaGFubmVsU2VjdXJpdHlDb250ZXh0IjoiUlNBX1BLSSIsImVuYyI6IkExMjhHQ00ifQ'
        version: '100'
    DecryptedApplePay:
      description: Decrypted Apple Pay payload.
      required:
        - accountNumber
        - expiration
        - cryptogram
      properties:
        accountNumber:
          description: Payment card number.
          type: string
          pattern: '[0-9]{13,19}'
          example: '4111111111111111'
        expiration:
          description: Card expiration date in MMYYYY format.
          type: string
          pattern: '[0-9]{6}'
          example: '012040'
        cardholderName:
          description: Name of the cardholder.
          type: string
          maxLength: 96
          pattern: '^(?!\s*$).+'
          example: 'John Doe'
        brand:
          description: Card brand.
          type: string
          pattern: '^(?!\s*$).+'
          example: 'VISA'
        cryptogram:
          description: The wallet cryptogram from the decrypted data.
          type: string
          pattern: '^(?!\s*$).+'
          example: 'BB81SRsADvooHCUcDogjMAACAAA='
        eciIndicator:
          description: The ECI indicator from the decrypted data.
          type: string
          pattern: '[0-9]{2}'
          example: '05'
      example:
        accountNumber: '4111111111111111'
        expiration: '221201'
        cardholderName: 'John Doe'
        brand: 'VISA'
        cryptogram: 'BB81SRsADvooHCUcDogjMAACAAA='
        eciIndicator: '05'
    DecryptedGooglePay:
      description: Decrypted Google Pay payload.
      required:
        - accountNumber
        - expiration
      properties:
        accountNumber:
          description: Payment card number.
          type: string
          pattern: '[0-9]{13,19}'
          example: '4111111111111111'
        expiration:
          description: Card expiration date in MMYYYY format.
          type: string
          pattern: '[0-9]{6}'
          example: '012040'
        cardholderName:
          description: Name of the cardholder.
          type: string
          maxLength: 96
          pattern: '^(?!\s*$).+'
          example: 'John Doe'
        brand:
          description: Card brand.
          type: string
          pattern: '^(?!\s*$).+'
          example: 'VISA'
        cryptogram:
          description: The wallet cryptogram from the decrypted data.
          type: string
          pattern: '^(?!\s*$).+'
          example: 'BB81SRsADvooHCUcDogjMAACAAA='
        eciIndicator:
          description: The ECI indicator from the decrypted data.
          type: string
          pattern: '[0-9]{2}'
          example: '05'
        storedCredentials:
            $ref: '#/components/schemas/StoredCredential'
      example:
        accountNumber: '4111111111111111'
        expiration: '221201'
        cardholderName: 'John Doe'
        brand: 'VISA'
        cryptogram: 'BB81SRsADvooHCUcDogjMAACAAA='
        eciIndicator: '05'
        storedCredentials:
          sequence: 'FIRST'
          scheduled: false
          referencedSchemeTransactionId: '019087868716215'
          initiator: 'CARDHOLDER'
    DecryptedSamsungPay:
      description: Decrypted Samsung Pay payload.
      required:
        - accountNumber
        - expiration
        - cryptogram
      properties:
        accountNumber:
          description: Payment card number.
          type: string
          pattern: '[0-9]{13,19}'
          example: '4111111111111111'
        expiration:
          description: Card expiration date in MMYYYY format.
          type: string
          pattern: '[0-9]{6}'
          example: '012040'
        cardholderName:
          description: Name of the cardholder.
          type: string
          maxLength: 96
          pattern: '^(?!\s*$).+'
          example: 'John Doe'
        brand:
          description: Card brand.
          type: string
          pattern: '^(?!\s*$).+'
          example: 'VISA'
        cryptogram:
          description: The wallet cryptogram from the decrypted data.
          type: string
          pattern: '^(?!\s*$).+'
          example: 'BB81SRsADvooHCUcDogjMAACAAA='
        eciIndicator:
          description: The ECI indicator from the decrypted data.
          type: string
          pattern: '[0-9]{2}'
          example: '05'
      example:
        accountNumber: '4111111111111111'
        expiration: '221201'
        cardholderName: 'John Doe'
        brand: 'VISA'
        cryptogram: 'BB81SRsADvooHCUcDogjMAACAAA='
        eciIndicator: '05'
    Order:
      description: Use this model to provide order related details.
      properties:
        orderId:
          description: Note - Client Order ID if supplied by client. If not supplied by client, IPG will generate. The first 12 alphanumeric digits are passed down to Fiserv Enterprise reporting tool, Clientline and Data File Manager (DFM).
          type: string
          maxLength: 100
          example: 'ABC12345'
        billing:
          $ref: '#/components/schemas/Billing'
        shipping:
          $ref: '#/components/schemas/Shipping'
        industrySpecificExtensions:
          $ref: '#/components/schemas/IndustrySpecificExtensions'
        purchaseCard:
          $ref: '#/components/schemas/PurchaseCards'
        installmentOptions:
          $ref: '#/components/schemas/InstallmentOptions'
        revolvingOptions:
          $ref: '#/components/schemas/RevolvingOptions'
        standInDetails:
          $ref: '#/components/schemas/StandInDetails'
        softDescriptor:
          $ref: '#/components/schemas/SoftDescriptor'
        additionalDetails:
          $ref: '#/components/schemas/AdditionalDetails'
        bancontactQR:
          $ref: '#/components/schemas/BancontactQR'
        clientLocale:
          $ref: '#/components/schemas/ClientLocale'
      example:
        orderId: 'ABC12345'
        billing:
          name: 'John Doe'
          customerId: '1234567890'
        shipping:
          name: 'John Doe'
          address:
            address1: '123 Main St.'
            city: 'Sandy Springs'
            region: 'Georgia'
            postalCode: '30303'
            country: 'USA'
    Billing:
      description: Customer billing information.
      properties:
        name:
          description: Billing name.
          type: string
          maxLength: 96
          example: 'John Doe'
        firstName:
          description: Billing first name. Note - Only supported for AMEX.
          type: string
          maxLength: 48
          example: 'John'
        lastName:
          description: Billing last name. Note - Only supported for AMEX.
          type: string
          maxLength: 48
          example: 'Doe'
        customerId:
          description: Customer ID for billing purpose.
          type: string
          maxLength: 32
          example: '1234567890'
        birthDate:
          description: Customer birth date.
          type: string
          format: date
          example: '1980-01-31'
        contact:
          $ref: '#/components/schemas/Contact'
        address:
          $ref: '#/components/schemas/Address'
      example:
        name: 'John Doe'
        firstName: 'John'
        lastName: 'Doe'
        customerId: '1234567890'
        address:
          address1: '123 Main St.'
          city: 'Sandy Springs'
          region: 'Georgia'
          postalCode: '30303'
          country: 'USA'
    Contact:
      description: Customer contact information.
      properties:
        phone:
          description: Primary phone number.
          type: string
          maxLength: 32
          example: '5555555555'
        mobilePhone:
          description: Mobile phone number.
          type: string
          maxLength: 32
          example: '5555555555'
        fax:
          description: Fax number.
          type: string
          maxLength: 32
          example: '5555555555'
        email:
          description: Email address.
          type: string
          maxLength: 254
          example: 'john@test.com'
      example:
        phone: '5555555555'
        mobilePhone: '5555555555'
        fax: '5555555555'
        email: 'john@test.com'
    Shipping:
      description: Shipping information.
      properties:
        name:
          description: Name of customer for shipping.
          type: string
          example: 'John Doe'
          maxLength: 96
        contact:
          $ref: '#/components/schemas/Contact'
        address:
          $ref: '#/components/schemas/Address'
      example:
        name: 'John Doe'
        contact:
          phone: '5555555555'
          mobilePhone: '5555555555'
          email: 'john@test.com'
        address:
          address1: '123 Main St.'
          city: 'Sandy Springs'
          region: 'Georgia'
          postalCode: '30303'
          country: 'USA'
    Address:
      description: Model for address information.
      properties:
        company:
          description: Company name associated with the address.
          type: string
          maxLength: 96
          example: 'Test Company'
        address1:
          description: First line of the street address.
          type: string
          maxLength: 96
          example: '123 Main St.'
        address2:
          description: Second line of the street address.
          type: string
          maxLength: 96
          example: 'Suite 123'
        city:
          description: City or locality.
          type: string
          maxLength: 96
          example: 'Sandy Springs'
        region:
          description: State or province.
          type: string
          maxLength: 96
          example: 'Georgia'
        postalCode:
          description: ZIP code or postal code.
          type: string
          maxLength: 24
          example: '30303'
        country:
          description: "ISO-3166-1  ALPHA-2, ALPHA-3, numeric or full country name. In the case of PaySecure endpoints, pass the country code in an ISO format.\nNOTE: Country required for following listed SEPA transactions:\n - SEPA DD transaction done with Local Payments (aka PPRO).\n - SEPA DD transaction done via POSEIDON and the IBAN belongs to the 'SE' country group."
          type: string
          maxLength: 32
          example: 'USA'
      example:
        address1: '123 Main St.'
        city: 'Sandy Springs'
        region: 'Georgia'
        postalCode: '30303'
        country: 'USA'
    ReceiptRequestInfo:
      description: Defines receipt related parameters that are necessary to generate a receipt.
      type: object
      required:
        - type
      properties:
        type:
          description: Defines the consumer of the receipt (e.g. cardholder, merchant).
          type: string
          enum: [cardholder, merchant]
          example: 'merchant'
        locale:
          description: The locale of the receipt. The format has to be a well-formed BCP 47 language tag.
          type: string
          example: 'en-GB'
        linewidth:
          description: The line width of the receipt. Default will be 32 characters.
          type: integer
          default: 32
          example: 48
      example:
        type: 'merchant'
        locale: 'de'
    Receipt:
      description: Provides POS receipt data.
      type: object
      required:
        - type
        - data
      properties:
        type:
          description: Defines the consumer of the receipt (e.g. cardholder, merchant).
          type: string
          enum: [cardholder, merchant]
          example: 'merchant'
        data:
          description: Array of formatted lines that represents the actual receipt data, that can be printed out.
          type: array
          items:
            $ref: '#/components/schemas/ReceiptLine'
          example:
            - endOfLine: true
              text: '          MerchantName          '
            - endOfLine: true
              text: '--------------------------------'
      example:
        type: 'cardholder'
        data:
          - endOfLine: true
            text: '        Example Merchant        '
          - endOfLine: true
            text: '--------------------------------'
          - endOfLine: true
            text: '       Amount: 45.00 EURO       '
    ReceiptLine:
      description: Represents a line in the receipt response.
      type: object
      required:
        - text
      properties:
        endOfLine:
          description: Flag to indicate if the text ends at the end of this receipt line.
          type: boolean
          default: true
          example: true
        text:
          description: Text that represents a line of the actual receipt data, that can be printed out.
          type: string
          example: '          MerchantName          '
      example:
        endOfLine: true
        text: '--------------------------------'
    BancontactQR: # EMEA only
      required:
        - transactionRoutingMeans
      description: Bancontact QR information.
      properties:
        transactionRoutingMeans:
          description: Transaction Routing Means.
          type: string
          enum: [QR Code, URL Intent]
          example: 'QR Code'
        issuerCustomerReference:
          description: Issuer Customer Reference.
          type: string
          maxLength: 254
          example: '303123403'
      example:
        transactionRoutingMeans: 'QR Code'
        issuerCustomerReference: '303123403'
    IndustrySpecificExtensions:
      description: Industry-specific information.
      properties:
        airline:
          $ref: '#/components/schemas/Airline'
        lodging:
          $ref: '#/components/schemas/Lodging'
        carRental:
          $ref: '#/components/schemas/CarRental'
        mcc6012:
          $ref: '#/components/schemas/Mcc6012'
      example:
        airline:
          passengerName: 'John Doe'
          ticketNumber: 'PCLAN123'
          carrierName: 'Quatar Airline'
          reservationSystem: 'START'
          travelRoute:
            - departureDate: '2018-10-15'
              origin: 'ATL'
              destination: 'DOH'
        lodging:
          arrivalDate: '2010-05-15'
          departureDate: '2018-01-28'
          folioNumber: '12200054891'
          extraCharges:
            - chargeItem: 'MINI_BAR'
            - chargeItem: 'OTHER'
          noShowIndicator: false
        carRental:
          agreementNumber: 'AGR 123'
          renterName: 'John Doe'
          returnCity: 'ATL'
          returnDare: '2018-10-25'
          pickupDate: '2018-10-15'
        mcc6012:
          dateOfBirth: '20200505'
          accountFirst6: '411111'
          accountLast4: '2343'
          accountNum: '546789900034567'
          postCode: '30101'
          surname: 'Walker'
    StoredCredential:
      description: Object for sending stored credentials.
      required:
        - sequence
        - scheduled
      properties:
        sequence:
          description: Indicates if the transaction is first or subsequent. Valid values are 'FIRST' and 'SUBSEQUENT'.
          type: string
          enum: [FIRST, SUBSEQUENT]
          example: 'FIRST'
        scheduled:
          description: Indicates if the transaction is scheduled or part of an installment.
          type: boolean
          example: true
        referencedSchemeTransactionId:
          description: The transaction ID received from schemes for the initial transaction. May be required if sequence is 'SUBSEQUENT'.
          type: string
          maxLength: 50
          example: '019087868716215'
        initiator:
          description: Indicates whether it is a merchant-initiated or explicitly consented to by card holder. Valid values are 'MERCHANT' and 'CARDHOLDER'.
          type: string
          enum: [MERCHANT, CARDHOLDER]
          example: 'MERCHANT'
      example:
        sequence: 'SUBSEQUENT'
        scheduled: false
        referencedSchemeTransactionId: '019087868716215'
        initiator: 'CARDHOLDER'
    Airline:
      description: Additional data specific to the airline industry.
      properties:
        passengerName:
          description: The passenger name associated with the transaction.
          type: string
          maxLength: 30
          example: 'Jeff Yabuki'
        ticketNumber:
          description: The airline ticket number associated with the transaction.
          type: string
          maxLength: 20
          example: '52300448'
        issuingCarrier:
          description: The carrier that issued the ticket.
          type: string
          maxLength: 20
          example: 'Frontier Airlines'
        carrierName:
          description: The carrier associated with the transaction.
          type: string
          maxLength: 20
          example: 'Delta Air Lines'
        travelAgencyIataCode:
          description: The IATA code associated with the travel agency.
          type: string
          maxLength: 20
          example: '10584410'
        travelAgencyName:
          description: The business name of the travel agency.
          type: string
          maxLength: 30
          example: 'A Travis Gent LLC'
        airlinePlanNumber:
          description: The airline plan number associated with the transaction.
          type: string
          maxLength: 2
          example: '11'
        airlineInvoiceNumber:
          description: The invoice number used by the airline.
          type: string
          maxLength: 6
          example: '664422'
        reservationSystem:
          description: The reservation system used to create the ticket.
          type: string
          enum: [START, TWA, DELTA, SABRE, COVIA_APOLLO, DR_BLANK, DER, TUI]
          example: 'DELTA'
        restricted:
          description: If the transaction is associated with a restricted class fare.
          type: boolean
          example: true
        travelRoute:
          description: Array containing up to 4 items that describe the route associated with the transaction.
          type: array
          maxItems: 4
          items:
            description: Additional information about the route.
            type: object
            properties:
              departureDate:
                type: string
                format: date
                description: Date of departure.
                example: '2018-01-28'
              origin:
                description: The IATA code for the departure airport.
                type: string
                maxLength: 3
                example: 'MIA'
              destination:
                description: The IATA code for the destination. airport.
                type: string
                maxLength: 3
                example: 'ATL'
              carrierCode:
                description: The IATA code for the carrier.
                type: string
                maxLength: 2
                example: 'DL'
              serviceClass:
                description: The airline code for the service class of the ticket.
                type: string
                maxLength: 1
                example: 'J'
              stopoverType:
                description: Indicates whether the route is direct.
                type: string
                enum: [DIRECT, STOPOVER]
                example: 'DIRECT'
              fareBasisCode:
                description: The airline fare basis code.
                type: string
                maxLength: 2
                example: 'F'
              departureTax:
                description: Fee charged by a country when a person leaves the country.
                type: number
                maximum: 999999999999
                example: 75
              flightNumber:
                description: The airline flight number associated with the ticket.
                type: string
                maxLength: 10
                example: '765599'
          example:
            - departureDate: '2018-01-28'
              origin: 'MIA'
              destination: 'ATL'
              carrierCode: 'DL'
              serviceClass: 'J'
              stopoverType: 'DIRECT'
              fareBasisCode: 'F'
              departureTax: 75
              flightNumber: '765599'
        relatedTicketNumber:
          description: The number of any other tickets associated with the transaction ticket.
          type: string
          maxLength: 20
          example: '11223344556'
        ancillaryServiceCategory:
          description: Identify the purchase of ancillary goods or services with a false value. If this element is not provided, the transaction is assumed to be a purchase of an airline ticket.
          type: array
          items:
            type: object
            required:
              - serviceCategory
            properties:
              serviceCategory:
                description: Identifies the service purchased in the transaction if not a base ticket
                type: string
                enum: [BUNDLED_SERVICE, BAGGAGE_FEE, CHANGE_FEE, CARGO, CARBON_OFFSET, FREQUENT_FLYER, GIFT_CARD, GROUND_TRANSPORT, IN_FLIGHT_ENTERTAINMENT, LOUNGE, MEDICAL, MEAL_BEVERAGE, OTHER, PASSENGER_ASSIST_FEE, PETS, SEAT_FEES, STANDBY, SERVICE_FEE, STORE, TRAVEL_SERVICE, UNACCOMPANIED_TRAVEL, UPGRADES, WI_FI]
                example: 'BAGGAGE_FEE'
          example:
            - serviceCategory: 'BAGGAGE_FEE'
            - serviceCategory: 'CARBON_OFFSET'
        ticketPurchase:
          description: Identifies if the transaction is a ticket purchase.
          type: boolean
          example: true
      example:
        passengerName: 'Jeff Yabuki'
        ticketNumber: '52300448'
        issuingCarrier: 'Frontier Airlines'
        carrierName: 'Delta Air Lines'
        travelAgencyIataCode: '10584410'
        travelAgencyName: 'A Travis Gent LLC'
        airlinePlanNumber: '11'
        airlineInvoiceNumber: '664422'
        reservationSystem: 'DELTA'
        restricted: true
        travelRoute:
          - departureDate: '2018-01-28'
            origin: 'MIA'
            destination: 'ATL'
            carrierCode: 'DL'
            serviceClass: 'J'
            stopoverType: 'DIRECT'
            fareBasisCode: 'F'
            departureTax: 75
            flightNumber: '765599'
        relatedTicketNumber: '11223344556'
        ancillaryServiceCategory:
          - serviceCategory: 'BAGGAGE_FEE'
          - serviceCategory: 'CARBON_OFFSET'
        ticketPurchase: true
    Lodging:
      description: Additional data specific to the lodging/hotel industry.
      properties:
        arrivalDate:
          description: Date of arrival.
          type: string
          format: date
          example: '2010-05-15'
        departureDate:
          description: Date of departure.
          type: string
          format: date
          example: '2018-01-28'
        folioNumber:
          description: Portfolio number.
          type: string
          maxLength: 20
          example: '12200054891'
        extraCharges:
          description: Information about charges other than base lodging.
          type: array
          items:
            type: object
            properties:
              chargeItem:
                type: string
                enum: [GIFT_SHOP, LAUNDRY, MINI_BAR, RESTAURANT, TELEPHONE, OTHER]
                example: 'LAUNDRY'
          example:
            - chargeItem: 'MINI_BAR'
            - chargeItem: 'OTHER'
        noShowIndicator:
          description: Indicates if the transaction is associated with a delayed or no-show penalty.
          type: boolean
          example: false
      example:
        arrivalDate: '2010-05-15'
        departureDate: '2018-01-28'
        folioNumber: '12200054891'
        extraCharges:
          - chargeItem: 'MINI_BAR'
          - chargeItem: 'OTHER'
        noShowIndicator: false
    CarRental:
      description: Additional data specific to the car rental industry.
      properties:
        agreementNumber:
          description: The car rental agreement number.
          type: string
          maxLength: 20
          example: '100001145699'
        renterName:
          description: The name of the person renting the car.
          type: string
          maxLength: 20
          example: 'Frank Bisignano'
        returnCity:
          description: The city where the rental ends and the car is returned.
          type: string
          maxLength: 20
          example: 'Atlanta'
        returnDate:
          description: The date the car rental ends and the car is returned.
          type: string
          format: date
          example: '2020-10-25'
        pickupDate:
          description: The date the car rental begins.
          type: string
          format: date
          example: '2020-10-15'
        rentalClassId:
          description: The classification of the rental car.
          type: string
          maxLength: 6
          example: 'ABCDEF'
        extraCharges:
          description: Array containing information about charges other than the rental rate.
          type: array
          items:
            type: object
            properties:
              chargeItem:
                description: Additional charge item.
                type: string
                enum: [EXTRA_MILEAGE, GAS, LATE_RETURN, ONE_WAY_SERVICE_FEE, PARKING_VIOLATION]
                example: 'GAS'
          example:
            - chargeItem: 'GAS'
            - chargeItem: 'EXTRA_MILEAGE'
        noShowIndicator:
          description: Indicates if the transaction is related to a no-show charge.
          type: boolean
          example: false
      example:
        agreementNumber: '100001145699'
        renterName: 'Frank Bisignano'
        returnCity: 'Atlanta'
        returnDate: '2020-10-25'
        pickupDate: '2020-10-15'
        rentalClassId: 'ABCDEF'
        extraCharges:
          - chargeItem: 'GAS'
          - chargeItem: 'EXTRA_MILEAGE'
        noShowIndicator: false
    Mcc6012:
      description: The group MCC (Merchant Category Code) 6012
      properties:
        dateOfBirth:
          description: The date of birth of the cardholder (YYYYMMDD).
          type: string
          maxLength: 8
          example: '20200505'
        accountFirst6:
          description: The first six digits of the primary account number.
          type: string
          maxLength: 6
          example: '411111'
        accountLast4:
          description: The last four digits of the primary account number.
          maxLength: 4
          type: string
          example: '2343'
        accountNum:
          description: The account number where the primary account number is not a card.
          type: string
          maxLength: 50
          example: '146789900034567'
        postCode:
          description: The postal code of the cardholder.
          type: string
          maxLength: 50
          example: '30101'
        surname:
          description: Surname or last name of the card holder.
          type: string
          maxLength: 100
          example: 'Walker'
      example:
        dateOfBirth: '20200505'
        accountFirst6: '411111'
        accountLast4: '2343'
        accountNum: '546789900034567'
        postCode: '30101'
        surname: 'Walker'
    InstallmentOptions:
      description: Indicates that the total sum payable is divided for payment at successive fixed times.
      properties:
        numberOfInstallments:
          description: Number of installments for a sale transaction if the customer pays the total amount in multiple transactions.
          type: integer
          format: int32
          minimum: 1
          maximum: 99
          example: 5
        installmentsInterest:
          description: Indicates whether the installment interest amount has been applied.
          type: boolean
          example: true
        installmentDelayMonths:
          description: The number of months the first installment payment will be delayed.
          type: integer
          format: int32
          minimum: 1
          maximum: 99
          example: 5
        recurringType:
          description: The type of recurring payment.
          type: string
          enum: [FIRST, REPEAT, STANDING_INSTRUCTION]
          example: 'FIRST'
        merchantAdviceCodeSupported:
          description: Indicates if the merchant supports merchant advice code (MAC) in order to receive table 55 code for a declined recurring transaction.
          type: boolean
          example: true
      example:
        numberOfInstallments: 5
        installmentsInterest: true
        installmentDelayMonths: 5
        recurringType: 'FIRST'
        merchantAdviceCodeSupported: true
    RevolvingOptions:
      description: Indicates the options for revolving payment.
      properties:
        revolvingPayment:
          description: Indicates whether the payment has been chosen as revolving type.
          type: boolean
          example: true
    StandInDetails:
      description: Indicates standin transaction.
      required:
        - standInType
        - numberOfDebits
        - siValidated
        - maximumTransactionAmount
        - siHubId
        - frequency
      properties:
        standInType:
          description: Indicates standin instruction type.
          type: string
          enum: [FIXED_AMOUNT, MAXIMUM_AMOUNT]
          example: 'FIXED_AMOUNT'
        numberOfDebits:
          description: Indicates number of standin instruction debits.Possible values can be two digit number or UN (Until it is cancelled) or ND (Not defined).
          type: string
          pattern: (UN)|(ND)|([0-9]{2})
          example: '12'
        siValidated:
          description: Indicates standin instruction validation flag, it can be true or false. "false" - Not validated, "true" - Validated.
          type: boolean
          example: true
        maximumTransactionAmount:
          description: Maximum debit amount per standin instruction transaction.
          type: number
          example: 1800
        siHubId:
          description: Unique identifier for standin instruction.
          type: string
          maxLength: 10
          example: 'Y3PCO6QGHT'
        frequency:
          description: Indicates frequency of the standin instruction debit.
          type: string
          enum: [WEEKLY, FORTNIGHTLY,MONTHLY,QUARTERLY,HALFYEARLY,YEARLY,UNSCHEDULED]
          example: 'MONTHLY'
      example:
        standInType: 'FIXED_AMOUNT'
        numberOfDebits: 12
        siValidated: true
        maximumTransactionAmount: 1800
        siHubId: 'Y3PCO6QGHT'
        frequency: 'MONTHLY'
    PurchaseCards:
      description: Purchase card details.
      properties:
        Level2:
          description: Level 2 data for monitoring and controlling corporate expenditures.
          type: object
          properties:
            customerReferenceID:
              type: string
              description: Customer code/customer reference ID. The max length supported for Visa is 12 and MasterCard is 17.
              maxLength: 17
              example: 'abcdef123xyz'
            supplierInvoiceNumber:
              type: string
              description: Purchase identifier/merchant-related data.
              maxLength: 30
              example: '0000000065348'
            supplierVATRegistrationNumber:
              description: Merchant VAT registration/single business reference number/merchant tax ID or corporation VAT number.
              type: string
              maxLength: 30
              example: '10001174242'
            totalDiscountAmountAndRate:
              $ref: '#/components/schemas/AdditionalAmountRate'
            vatShippingAmountAndRate:
              $ref: '#/components/schemas/AdditionalAmountRate'
            dutyAmountAndRate:
              $ref: '#/components/schemas/AdditionalAmountRate'
          example:
            customerReferenceID: 'abcdef123xyz'
            supplierInvoiceNumber: '0000000065348'
            supplierVATRegistrationNumber: '10001174242'
            totalDiscountAmountAndRate:
              amount: 5.145
              rate: 1.175
            vatShippingAmountAndRate:
              amount: 6.030
              rate: 1.175
            dutyAmountAndRate:
              amount: 7.030
              rate: 1.175
        Level3:
          description: Level 3 data for monitoring and controlling corporate expenditures.
          type: object
          required:
            - lineItems
          properties:
            lineItems:
              description: Line items of monitoring and controlling corporate expenditures data.
              maxItems: 100
              type: array
              items:
                type: object
                properties:
                  commodityCode:
                    description: The commodity code used to classify the item purchased.
                    type: string
                    maxLength: 4
                    example: 'ab12'
                  productCode:
                    description: Merchant product identifier/the Universal Product Code (UPC) of the item purchased.
                    type: string
                    maxLength: 20
                    example: '0001212120888'
                  description:
                    description: The description.
                    type: string
                    maxLength: 30
                    example: 'Dinner and movie'
                  quantity:
                    description: The quantity.
                    type: integer
                    minimum: 1
                    example: 5
                  unitMeasure:
                    description: The unit of measure.
                    type: string
                    maxLength: 3
                    example: '25'
                  unitPrice:
                    description: Rate amount in 3 decimal 12 bytes total digit.
                    type: number
                    example: 30.075
                  vatAmountAndRate:
                    $ref: '#/components/schemas/AdditionalAmountRate'
                  discountAmountAndRate:
                    $ref: '#/components/schemas/AdditionalAmountRate'
                  lineItemTotal:
                    description: Rate amount in 3 decimal 12 bytes total digit.
                    type: number
                    example: 39.075
                example:
                  - commodityCode: 'ab12'
                    productCode: '0001212120888'
                    description: 'Dinner and movie'
                    quantity: 5
                    unitMeasure: '25'
                    unitPrice: 30.075
                    vatAmountAndRate:
                      amount: 5.145
                      rate: 1.175
                    discountAmountAndRate:
                      amount: 6.030
                      rate: 1.175
                    lineItemTotal: 39.075
          example:
            lineItems:
              - commodityCode: 'ab12'
                productCode: '0001212120888'
                description: 'Dinner and movie'
                quantity: 5
                unitMeasure: '25'
                unitPrice: 30.075
                vatAmountAndRate:
                  amount: 5.145
                  rate: 1.175
                discountAmountAndRate:
                  amount: 6.030
                  rate: 1.175
                lineItemTotal: 39.075
      example:
        Level2:
          customerReferenceID: 'abcdef123xyz'
          supplierInvoiceNumber: '0000000065348'
          supplierVATRegistrationNumber: '10001174242'
          totalDiscountAmountAndRate:
            amount: 5.145
            rate: 1.175
          vatShippingAmountAndRate:
            amount: 6.030
            rate: 1.175
          dutyAmountAndRate:
            amount: 7.030
            rate: 1.175
        Level3:
          lineItems:
            - commodityCode: 'ab12'
              productCode: '0001212120888'
              description: 'Dinner and movie'
              quantity: 5
              unitMeasure: '25'
              unitPrice: 30.075
              vatAmountAndRate:
                amount: 5.145
                rate: 1.175
              discountAmountAndRate:
                amount: 6.030
                rate: 1.175
              lineItemTotal: 39.075
    AdditionalAmountRate:
      description: Rate and corresponding amount being applied to purchase cards, for instance in the form of taxes, discounts, or duty.
      required:
        - amount
        - rate
      properties:
        amount:
          description: Amount in 3 decimal 12 bytes total digit.
          type: number
          example: 5.145
        rate:
          description: Rate in 3 decimal 12 bytes total digit.
          type: number
          example: 1.175
      example:
        amount: 5.145
        rate: 1.175
    PaymentUrlRequest:
      description: Request to generate an embedded payment link.
      required:
        - transactionAmount
        - transactionType
      properties:
        storeId:
          description: An optional Outlet ID for clients that support multiple stores in the same developer app.
          type: string
          maxLength: 20
          example: '12345500000'
        clientLocale:
          $ref: '#/components/schemas/ClientLocale'
        transactionAmount:
          $ref: '#/components/schemas/Amount'
        transactionType:
          $ref: '#/components/schemas/TransactionType'
        orderId:
          type: string
          description: Note - Client Order ID if supplied by client. If not supplied by client, IPG will generate. The first 12 alphanumeric digits are passed down to Fiserv Enterprise reporting tool, Clientline and Data File Manager (DFM).
          example: '123456'
        billing:
          $ref: '#/components/schemas/Billing'
        shipping:
          $ref: '#/components/schemas/Shipping'
        transactionNotificationURL:
          type: string
          description: URL for notifying merchant of payment result.
          example: 'https://showmethepaymentresult.com'
        expiration:
          description: Time until payment URL expires.
          type: integer
          format: int64
          example: '4102358400'
        authenticateTransaction:
          description: If 3D secure should be applied.
          type: boolean
          example: true
        dynamicMerchantName:
          description: Dynamic merchant name for the cardholder's statement.
          type: string
          example: 'MyWebsite'
        invoiceNumber:
          description: Invoice number.
          type: string
          example: '96126098'
        purchaseOrderNumber:
          description: Purchase order number.
          type: string
          example: '123055342'
        hostedPaymentPageText:
          description: The text to be displayed to the payer on the hosted payment page.
          type: string
          maxLength: 255
          example: 'This is a payment for x'
        ip:
          description: IPv4 or IPv6 network address.
          type: string
          example: '264.31.73.24'
        revolvingOptions:
          $ref: '#/components/schemas/RevolvingOptions'
        installmentOptions:
          $ref: '#/components/schemas/InstallmentOptions'
      example:
        transactionAmount:
          total: '42.42'
          currency: 'USD'
        transactionType: 'SALE'
        transactionNotificationURL: 'https://showmethepaymentresult.com'
        expiration: '4102358400'
        authenticateTransaction: true
        dynamicMerchantName: 'MyWebsite'
        invoiceNumber: '96126098'
        purchaseOrderNumber: '123055342'
        ip: '264.31.73.24'
        revolvingOptions:
          revolvingPayment: true
        installmentOptions:
          numberOfInstallments: 6
          installmentsInterest: false
    PaymentUrlDetail:
      description: Detailed information about a payment URL.
      properties:
        paymentUrl:
          description: URL for embedded payment link.
          type: string
          example: 'https://api.firstdata.com/connect/gateway/processing?storename=123456789&oid=R-96cdbaa4-c22e-4598-a2f1-c2b5fed79ef1&paymentUrlId=d3eb74fe-cf63-47e1-b89f-52ba0cc7965c'
        merchantTransactionId:
            description: The unique merchant transaction ID from the request, if supplied.
            type: string
            maxLength: 40
            example: 'lsk23532djljff3'
        orderId:
            type: string
            description: Note - Client Order ID if supplied by client. If not supplied by client, IPG will generate. The first 12 alphanumeric digits are passed down to Fiserv Enterprise reporting tool, Clientline and Data File Manager (DFM).
            example: '123456'
        requestTime:
            description: The transaction time in seconds since epoch.
            type: integer
            format: int64
            example: '1518811817'
        status:
          $ref: '#/components/schemas/PaymentUrlStatus'
    PaymentUrlStatus:
      description: The status of payment URL.
      type: string
      enum: [Created, Used, Expired, Cancelled]
      example: 'Created'
    PaymentFacilitator:
      description: Payment facilitator details provided by the merchant.
      required:
        - externalMerchantId
        - paymentFacilitatorId
        - name
      properties:
        externalMerchantId:
          type: string
          description: External merchant ID of the payment facilitator.
          pattern: '^(?!\s*$).+'
          example: '151623999'
        paymentFacilitatorId:
          type: string
          description: Payment facilitator ID supplied during boarding.
          pattern: '\d{1,11}'
          example: '12345678901'
        saleOrganizationId:
          type: string
          description: Independent sales organization (ISO) ID provided by Mastercard.
          pattern: '\d{1,11}'
          example: '13579246801'
        name:
          type: string
          description: Payment facilitator name.
          maxLength: 50
          pattern: '^(?!\s*$).+'
          example: 'First Reseller'
        subMerchantData:
          $ref: '#/components/schemas/SubMerchantData'
      example:
        externalMerchantId: '12345'
        paymentFacilitatorId: '123123123'
        saleOrganizationId: '123124214'
        name: 'First Reseller'
        subMerchantData:
          mcc: '1432'
          legalName: 'First Merchant'
          timezone: 'Europe/London'
          address:
            address1: '123 Main St.'
            city: 'Sandy Springs'
            region: 'Georgia'
            postalCode: '30303'
            country: 'USA'
          document:
            type: 'NATIONAL_IDENTITY'
            number: '12345666544'
          merchantId: '12435325235'
    SubMerchantData:
      description: Once sub-merchant element is given, the transaction is considered to be a sub-merchant transaction.
      required:
        - mcc
      properties:
        mcc:
          type: string
          description: Merchant category code.
          pattern: '[0-9]{4}'
          example: '7311'
        legalName:
          type: string
          description: Store legal name.
          maxLength: 100
          example: 'Walmart Inc.'
        email:
          type: string
          description: Sub-merchant email.
          maxLength: 254
          example: 'abcd.1234@fiserv.com'
        timezone:
          type: string
          description: Timezone.
          maxLength: 500
          example: 'Europe/London'
        address:
          $ref: '#/components/schemas/Address'
        document:
          $ref: '#/components/schemas/Document'
        merchantId:
          type: string
          description: Sub-merchant ID.
          maxLength: 50
          example: '987654321'
      example:
        mcc: '7311'
        legalName: 'Walmart Inc.'
        email: 'abcd.1234@fiserv.com'
        timezone: 'Europe/London'
        address:
          address1: '123 Main St.'
          city: 'Sandy Springs'
          region: 'Georgia'
          postalCode: '30303'
          country: 'USA'
        document:
          type: 'NATIONAL_IDENTITY'
          number: '12345666544'
        merchantId: '987654321'
    Document:
      description: Document information.
      required:
        - type
        - number
      properties:
        type:
          type: string
          description: Document type.
          enum: ['NATIONAL_IDENTITY', 'SINGLE_TAX_IDENTIFICATION', 'SINGLE_CODE_OF_LABOR_IDENTIFICATION', 'BOOK_ENLISTMENT', 'CIVIC_NOTEBOOK', 'PASSPORT']
          example: 'NATIONAL_IDENTITY'
        number:
          type: string
          description: Document number.
          maxLength: 30
          pattern: '^(?!\s*$).+'
          example: '12345666544'
      example:
        type: 'NATIONAL_IDENTITY'
        number: '12345666544'
    SoftDescriptor:
      description: Identifying information about a merchant which appears on buyer's credit/debit card statements.
      required:
        - dynamicMerchantName
      properties:
        dynamicMerchantName:
          type: string
          description: Store "doing-business-as" name.
          pattern: '^(?!\s*$).+'
          example: 'Merchant XYZ'
        customerServiceNumber:
          type: string
          description: 'Customer service phone number information that is passed to the issuer (it may appear on the cardholder’s statement) or if merchant wants to pass information that differs from the information stored on our master File.'
          maxLength: 10
          pattern: '^[0-9]+$'
          example: '9973322990'
        mcc:
          description: 'The 4-digit merchant category code (MCC). The merchant might be associated with multiple MCCs. In that case the MCC provided here will be the one that better describes the current transaction.'
          type: string
          maxLength: 4
          example: '7311'
        dynamicAddress:
          description: 'Address information that is passed to the issuer (it may appear on the cardholder’s statement) or if merchant wants to pass information that differs from the information stored on our master file.'
          $ref: '#/components/schemas/Address'
      example:
        dynamicMerchantName: 'Merchant XYZ'
        customerServiceNumber: '8045018787'
        mcc: '7311'
        dynamicAddress:
          company: 'XYZ Company'
          address1: '5565 Glenridge Conn'
          address2: 'Dundwoody Area'
          city: 'Atlanta'
          region: 'Georgia'
          postalCode: '30342'
          country: 'USA'
    ExchangeRateRequest:
      description:  Request to perform an exchange rate inquiry. Abstract class, do not use this class directly, use one of its children.
      required:
        - requestType
        - baseAmount
      discriminator:
        propertyName: requestType
      properties:
        requestType:
          description: Object name of the exchange rate request.
          type: string
          example: 'DCCExchangeRateRequest'
        baseAmount:
          description: The original amount of the merchant currency for calculation.
          type: number
          example: '12.32'
        storeId:
          description: An optional outlet ID for clients that support multiple stores in the same app.
          type: string
          maxLength: 20
          example: '1109959991'
      example:
        requestType: 'DCCExchangeRateRequest'
        baseAmount: '12.32'
        bin: '411111'
    DCCExchangeRateRequest:
      description: Request to perform a DCC exchange rate inquiry.
      allOf:
        - $ref: '#/components/schemas/ExchangeRateRequest'
        - type: object
          required:
            - bin
          properties:
            bin:
              description: The bank identification number (BIN) of the card to be used for DCC. The BIN is the first 6-9 digits of the card number.
              type: string
              pattern: '[0-9]{6,9}'
              example: '411111'
      example:
        requestType: 'DCCExchangeRateRequest'
        baseAmount: '12.32'
        bin: '411111'
    DynamicPricingExchangeRateRequest:
      description: Request to perform a dynamic pricing exchange rate inquiry.
      allOf:
        - $ref: '#/components/schemas/ExchangeRateRequest'
        - type: object
          required:
            - foreignCurrency
          properties:
            foreignCurrency:
              type: string
              description: The currency code to convert for dynamic pricing in either numeric or alphabetic ISO 4217 currency code format.
              maxLength: 3
              pattern: '([A-Z]{3})|([0-9]{3})'
              example: 'USD'
      example:
        requestType: 'DynamicPricingExchangeRateRequest'
        baseAmount: '12.32'
        foreignCurrency: 'USD'
    Dcc:
      description: Request to perform a dynamic pricing exchange rate inquiry.
      allOf:
      - $ref: '#/components/schemas/CurrencyConversion'
      - type: object
        required:
          - dccApplied
        properties:
          dccApplied:
            description: Indicates whether customer agrees with rate to be used.
            type: boolean
            example: true
      example:
        conversionType: 'Dcc'
        inquiryRateId: '123456'
        dccApplied: true
    DynamicPricing:
      description: Request to perform a dynamic pricing exchange rate inquiry.
      allOf:
      - $ref: '#/components/schemas/CurrencyConversion'
      - type: object
        required:
        - foreignCurrency
        - foreignAmount
        properties:
          foreignCurrency:
            description: The currency code to convert for dynamic pricing in ISO 4217 currency code format.
            type: string
            pattern: '([A-Z]{3})|([0-9]{3})'
            example: '978'
          foreignAmount:
            description: Foreign amount.
            type: string
            pattern: '^(?!\s*$).+'
            example: '22.52'
      example:
        conversionType: 'DynamicPricing'
        inquiryRateId: '123456'
        foreignCurrency: '978'
        foreignAmount: '22.52'
    CurrencyConversion:
      description: 'Currency conversion. Abstract class, do not use this class directly, use one of its children: Dcc, DynamicPricing.'
      discriminator:
        propertyName: conversionType
      required:
        - conversionType
        - inquiryRateId
      properties:
        conversionType:
          description: Type of currency conversion.
          type: string
          example: 'Dcc'
        inquiryRateId:
          description: Inquiry rate id.
          type: string
          pattern: '^(?!\s*$).+'
          example: '123456'
      example:
        conversionType: 'Dcc'
        inquiryRateId: '123456'
        dccApplied: true
    UnionPayAuthenticationUpdateRequest: # APAC only
      description: Authentication update request specific to UnionPay transactions.
      allOf:
        - $ref: '#/components/schemas/AuthenticationUpdateRequest'
        - type: object
          required:
            - smsVerificationCode
          properties:
            smsVerificationCode:
              description: Customer mobile number for SMS verification.
              type: string
              pattern: '^(?!\s*$).+'
              example: '111111'
            securityCode:
              description: Card security code if required by merchant.
              type: string
              example: '123'
      example:
        authenticationType: 'UnionPayAuthenticationUpdateRequest'
        billingAddress:
          address1: '5565 Glenridge Conn'
          city: 'Atlanta'
          postalCode: '30342'
          country: 'USA'
        securityCode: '123'
        smsVerificationCode: '111111'
    Secure3D10AuthenticationUpdateRequest:
      description: Authentication update request specific to 3DSecure 1.0 transactions. DEPRECATED - use Secure3DAuthenticationUpdateRequest instead
      allOf:
        - $ref: '#/components/schemas/AuthenticationUpdateRequest'
        - type: object
          required:
            - payerAuthenticationResponse
          properties:
            payerAuthenticationResponse:
              description: A formatted message providing results of the issuer’s cardholder authentication.
              type: string
              example: 'eJzVWFm....9f/AhjgEcE='
            merchantData:
              description: Formatted string encoding transaction time, order ID, and return URL data.
              type: string
              example: 'MD__________30002019....85bcd02599'
            securityCode:
              description: Card security code if required by merchant.
              type: string
              example: '123'
      example:
        authenticationType: 'Secure3D10AuthenticationUpdateRequest'
        billingAddress:
          address1: '5565 Glenridge Conn'
          city: 'Atlanta'
          postalCode: '30342'
          country: 'USA'
        payerAuthenticationResponse: 'eJzVWFm....9f/AhjgEcE='
        merchantData: 'MD__________30002019....85bcd02599'
        securityCode: '123'
      deprecated: true # use Secure3DAuthenticationUpdateRequest instead
    Secure3D21AuthenticationUpdateRequest:
      description: Authentication update request specific to 3DSecure 2.x transactions. DEPRECATED - use Secure3DAuthenticationUpdateRequest instead
      allOf:
        - $ref: '#/components/schemas/AuthenticationUpdateRequest'
        - type: object
          properties:
            methodNotificationStatus:
              description: Indicates how the merchant received the 3DS method.
              type: string
              enum: ["RECEIVED", "EXPECTED_BUT_NOT_RECEIVED", "NOT_EXPECTED"]
              example: "RECEIVED"
            acsResponse:
              $ref: '#/components/schemas/ACSResponse'
      example:
        authenticationType: "Secure3D21AuthenticationUpdateRequest"
        methodNotificationStatus: "RECEIVED"
      deprecated: true # use Secure3DAuthenticationUpdateRequest instead
    Secure3DAuthenticationUpdateRequest:
      description: Authentication update request specific to 3DSecure 2.x transactions.
      allOf:
        - $ref: '#/components/schemas/AuthenticationUpdateRequest'
        - type: object
          properties:
            methodNotificationStatus:
              description: Indicates how the merchant received the 3DS method.
              type: string
              enum: ["RECEIVED", "EXPECTED_BUT_NOT_RECEIVED", "NOT_EXPECTED"]
              example: "RECEIVED"
            acsResponse:
              $ref: '#/components/schemas/ACSResponse'
      example:
        authenticationType: "Secure3DAuthenticationUpdateRequest"
        methodNotificationStatus: "RECEIVED"
    ACSResponse:
      description: Encapsulates response data from the ACS.
      type: object
      properties:
        cRes:
          description: The ACS response to the CReq message. It can indicate the result of cardholder authentication or, in the case of an app-based model, also signal that further cardholder interaction is required to complete the authentication.
          type: string
          example: "ewogICAiYWNzUmVmZXJlbmNlTnVtYmVyIiA6ICJBQ1NFbXUyIiwKICAgImFjc1RyYW5zSUQiIDogIjAwMDAwMDAwLTAwMDUtNWE1YS04MDAwLTAxNmZhNTU2MzgzMiIsCiAgICJtZXNzYWdlVHlwZSIgOiAiQ1JlcyIsCiAgICJtZXNzYWdlVmVyc2lvbiIgOiAiMi4xLjAiLAogICAidGhyZWVEU1NlcnZlclRyYW5zSUQiIDogImRlZjlmYmQ4LWY5MzUtNWM3Mi04MDAwLTAwMDAwMDA4MjllZCIsCiAgICJ0cmFuc1N0YXR1cyIgOiAiWSIKfQ"
      example:
        cRes: "ewogICAiYWNzUmVmZXJlbmNlTnVtYmVyIiA6ICJBQ1NFbXUyIiwKICAgImFjc1RyYW5zSUQiIDogIjAwMDAwMDAwLTAwMDUtNWE1YS04MDAwLTAxNmZhNTU2MzgzMiIsCiAgICJtZXNzYWdlVHlwZSIgOiAiQ1JlcyIsCiAgICJtZXNzYWdlVmVyc2lvbiIgOiAiMi4xLjAiLAogICAidGhyZWVEU1NlcnZlclRyYW5zSUQiIDogImRlZjlmYmQ4LWY5MzUtNWM3Mi04MDAwLTAwMDAwMDA4MjllZCIsCiAgICJ0cmFuc1N0YXR1cyIgOiAiWSIKfQ"
    AuthenticationUpdateRequest:
      description: Provides shared fields for all AuthenticationUpdateRequest types. Abstract class, do not use this class directly, use one of its children.
      required:
        - authenticationType
      discriminator:
        propertyName: authenticationType
      properties:
        storeId:
          description: An optional Outlet ID for clients that support multiple stores in the same developer app.
          type: string
          maxLength: 20
          example: '12345500000'
        authenticationType:
          description: Object name of the authentication update request.
          type: string
          example: 'Secure3DAuthenticationUpdateRequest'
        billingAddress:
          description: Billing address of the customer.
          $ref: '#/components/schemas/Address'
      example:
        authenticationType: Secure3DAuthenticationUpdateRequest
        billingAddress:
          address1: 5565 Glenridge Conn
          city: Atlanta
          postalCode: 30342
          country: USA
        securityCode: 123
        merchantData: 'MD123...sdfk'
        payerAuthenticationResponse: 'c7fb83b8a...73t4a827t4af8738a'
    Secure3dResponse:
      description: Contains 3DSecure response code.
      properties:
        responseCode3dSecure:
          description: Code received after successful payer-auth verification.
          type: string
          example: '3'
        cardholderInfo:
          description: The cardholder's information supplied by the ACS.
          type: string
          example: molestie nunc non blandit massa
          maxLength: 128
      example:
        responseCode3dSecure: '3'
    StandinResponseDetails:
      description: Contains Standin response details.
      properties:
        secure3DEnrolmentStatus:
          description: Secure 3D Enrolment Status.
          type: string
          example: 'Y'
        secure3DECI:
          description: Secure 3D ECI.
          type: string
          example: '05'
        secure3DAuthenticationResponse:
          description: Secure 3D Authentication Response.
          type: string
          example: 'Y'
        authenticationValue:
          description: Secure 3D Authentication Value.
          type: string
          example: 'AAABBgFWUQAAAAEzZ1ZRAAAAAAA='
        xid:
          description: Secure 3D XID.
          type: string
          example: 'cb8QZ9mmkTUqreE89RjjjAtpJpg'
        authenticationAlgorithm:
          description: Secure 3D Authentication Algorithm.
          type: string
          example: '2'
      example:
        secure3DEnrolmentStatus: 'Y'
        secure3DECI: '05'
        secure3DAuthenticationResponse: 'Y'
        authenticationValue: 'AAABBgFWUQAAAAEzZ1ZRAAAAAAA='
        xID: 'cb8QZ9mmkTUqreE89RjjjAtpJpg'
        authenticationAlgorithm: '2'
    CardInfoLookupRequest:
      description: Request to look up card-related information such as issuer country, card function and card brand.
      required:
        - paymentCard
      properties:
        storeId:
          description: An optional outlet id for clients that support multiple stores in the same developer app.
          type: string
          maxLength: 20
          example: '12345500000'
        paymentCard:
          $ref: '#/components/schemas/PaymentCard'
      example:
        paymentCard:
          number: '4149011500000147'
    AccountInfoLookupRequest:
      description: Request to look up card-related information such as issuer country, card function and card brand associated with a payment card or payment token. Abstract class, do not use this class directly, use one of its children.
      type: object
      required:
        - requestType
      discriminator:
        propertyName: requestType
      properties:
        requestType:
          description: Object name of the account verification request.
          type: string
          example: 'PaymentCardInfoLookupRequest'
        storeId:
          description: An optional outlet ID for clients that support multiple stores in the same app.
          type: string
          maxLength: 20
          example: '12345500000'
      example:
        requestType: 'PaymentCardInfoLookupRequest'
        paymentCard:
          number: '4149011500000147'
    PaymentCardInfoLookupRequest:
      description: Used to request information associated with a payment card.
      allOf:
      - $ref: '#/components/schemas/AccountInfoLookupRequest'
      - type: object
        required:
        - paymentCard
        properties:
          paymentCard:
            $ref: '#/components/schemas/PaymentCard'
        example:
          requestType: 'PaymentCardInfoLookupRequest'
          paymentCard:
            number: '4149011500000147'
    PaymentTokenInfoLookupRequest:
      description: Used to request card information associated with a payment token.
      allOf:
      - $ref: '#/components/schemas/AccountInfoLookupRequest'
      - type: object
        required:
        - paymentToken
        properties:
          paymentToken:
            $ref: '#/components/schemas/UsePaymentToken'
        example:
          requestType: 'PaymentTokenInfoLookupRequest'
          paymentToken:
            value: '4149011500000147'
    CardInfoLookupResponse:
      description: Response from card info lookup request.
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - properties:
            cardDetails:
              description: One or more card information retrieved based on BIN.
              type: array
              items:
                $ref: '#/components/schemas/CardInfo'
              example:
                - brand: 'VISA'
                  brandProductId: 'VISA BUSINESS'
                  cardFunction: 'credit'
                  commercialCard: 'CORPORATE'
                  issuerCountry: 'DE'
                  issuerName: 'First National Bank of Omaha'
            requestStatus:
              type: string
              enum: [SUCCESS, LIST_EMPTY]
              description: Request status.
              example: 'SUCCESS'
      example:
        cardDetails:
          - brand: 'VISA'
            brandProductId: 'VISA BUSINESS'
            cardFunction: 'credit'
            commercialCard: 'CORPORATE'
            issuerCountry: 'DE'
            issuerName: 'First National Bank of Omaha'
        requestStatus: 'SUCCESS'
    CardInfo:
      description: Card information.
      properties:
        brand:
          type: string
          description: The card brand.
          example: 'VISA'
        brandProductId:
          type: string
          description: The product ID of the brand.
          example: 'VISA BUSINESS'
        cardFunction:
          $ref: '#/components/schemas/CardFunction'
        commercialCard:
          type: string
          enum: [CORPORATE, NON_CORPORATE]
          description: Indicates whether it is a corporate or non-corporate card.
          example: 'CORPORATE'
        issuerCountry:
          type: string
          description: The country of the issuer.
          example: 'DE'
        issuerName:
          type: string
          description: The name of the issuer.
          example: 'First National Bank of Omaha'
      example:
        brand: 'VISA'
        brandProductId: 'VISA BUSINESS'
        cardFunction: 'credit'
        commercialCard: 'CORPORATE'
        issuerCountry: 'DE'
        issuerName: 'First National Bank of Omaha'
    PaymentDevice:
      description: Information from the payment device including the blob data and its mode of entry.
      required:
        - deviceType
        - data
      properties:
        deviceType:
          type: string
          description: The data format.
          enum:
            - SWIPE
          example: 'SWIPE'
        data:
          type: string
          description: Data from device containing, at a minimum, a transaction-unique key serial number (KSN) and track 2 card data.
          pattern: '^(?!\s*$).+'
          example: '02A600C0170018008292;5424********1732=1810?*B73CD8C26233D4FFEC5500ED394439D97DDA5F530942D21D0000000000000000000000000000000000000000363434543035353734326299492410027300000260DC03'
        securityCode:
          description: Card verification value/number.
          type: string
          minLength: 3
          maxLength: 4
          example: '977'
        cardholderName:
          type: string
          description: Name of cardholder.
        cardFunction:
          $ref: '#/components/schemas/CardFunction'
        brand:
          type: string
          description: The card brand.
          example: 'VISA'
      example:
        deviceType: 'SWIPE'
        data: '02A600C0170018008292;5424********1732=1810?*B73CD8C26233D4FFEC5500ED394439D97DDA5F530942D21D0000000000000000000000000000000000000000363434543035353734326299492410027300000260DC03'
        securityCode: '977'
    AchResponse: # NA only
      description: ACH TeleCheck response.
      properties:
        responseCode:
          description: Response code for TeleCheck authentication decision in the sale response message.
          type: string
          maxLength: 2
          example: '49'
        approvalCode:
          description: Code provided if check is approved.
          type: string
          maxLength: 4
          example: 'A123'
        referenceNumber:
          description: Reference number.
          type: string
          example: '1234567'
        preferredFlag:
          description: Preferred flag.
          type: string
          maxLength: 1
          example: 'Y'
        transactionStatus:
          description: Indicates the result of the requested authorization and is returned in the sale response.
          type: string
          maxLength: 1
          example: '1'
      example:
        responseCode: '49'
        approvalCode: 'ASF2'
        referenceNumber: '1234567'
        preferredFlag: 'Y'
        transactionStatus: '1'
    IdInfo:
      description: Identification information.
      properties:
        idType:
          description: Identification type.
          type: string
          maxLength: 2
          example: 'DL'
        idData:
          description: Identification data.
          type: string
          minLength: 1
          maxLength: 35
          example: '12345678'
      example:
        idType: 'DL'
        idData: '12345678'
    TeleCheckAchPaymentMethod: # NA only
      description: ACH means automated clearing house. Contains properties common across TeleCheck message types. Abstract class, do not use this class directly, use one of its children.
      required:
        - achType
        - routingNumber
        - accountNumber
        - accountType
        - checkType
        - sessionId
        - achBillTo
      discriminator:
        propertyName: achType
      properties:
        achType:
          description: ACH application type values will be one of either TeleCheckICAPaymentMethod or TeleCheckCBPPaymentMethod.
          type: string
          example: 'TeleCheckICAPaymentMethod'
        routingNumber:
          description: Bank routing number.
          type: string
          minLength: 9
          maxLength: 9
          pattern: '^[0-9]+$'
          example: '1283673312'
        accountNumber:
          description: Bank account number.
          type: string
          minLength: 1
          maxLength: 56
          pattern: '^[0-9]+$'
          example: '2398649823984789'
        accountType:
          description: Identifies if the account type is checking or savings.
          type: string
          enum: [C, S]
          example: 'C'
        checkNumber:
          description: Check number.
          type: string
          maxLength: 10
          pattern: '^[0-9]+$'
          example: '9878867880'
        checkType:
          description: Identifies if the check type is personal or company.
          type: string
          enum: [P, C]
          example: 'P'
        productCode:
          description: Identifies the product code in the transaction.
          type: string
          maxLength: 6
          pattern: '^[0-9]+$'
          example: '128367'
        manualIdInfo:
          $ref: '#/components/schemas/IdInfo'
        supplementIdInfo:
          $ref: '#/components/schemas/IdInfo'
        agentId:
          description: Used to track the agent transaction activity.
          type: string
          maxLength: 6
          pattern: '(?=.*[^\s])^[^|]+$'
          example: 'RVK001'
        terminalId:
          description: Identifies the register or lane number where the original sale transaction occurred.
          type: string
          maxLength: 10
          pattern: '^[0-9]+$'
          example: '1283673312'
        registrationId:
          description: Unique ID assigned by the merchant for the consumer (never recycled). It is an additional level of authentication. To use this feature, the merchant must work with TeleCheck Risk to discuss. Registration IDs must not be generated for an existing or returning consumer returns. The single registration ID must be unique per consumer.
          type: string
          maxLength: 50
          pattern: '(?=.*[^\s])^[^|]+$'
          example: '12345'
        registrationDate:
          description: Date the consumer originally registered in format MMDDYYYY.
          type: string
          format: date
          example: '2019-10-02'
        releaseType:
          description: Release type is used as a risk variable to gauge risk level when the merchant is releasing the purchased merchandise.
          type: string
          enum: [C, D, P, T]
          example: 'P'
        vipCustomer:
          description: Flags a transaction as a VIP order (based on merchant criteria). This field should not be sent for non-VIP orders.
          type: string
          enum: [Y, N]
          example: 'Y'
        sessionId:
          description: Session identifier.
          type: string
          maxLength: 128
          pattern: '(?=.*[^\s])^[^|]+$'
          example: 'fb2e77d.47a0479900504cb3ab4a1f626d174d2d'
        terminalState:
          description: Identifies the US state or territory where the original sale transaction occurred.
          type: string
          maxLength: 2
          pattern: '^[A-Z]{2}$'
          example: 'GA'
        terminalCity:
          description: Identifies the city where the original sale transaction occurred.
          type: string
          maxLength: 16
          pattern: '(?=.*[^\s])^[^|]+$'
          example: 'Atlanta'
        achBillTo:
          description: Billing details for telecheck transactions.
          required:
            - lastName
            - addressOne
            - city
            - state
            - zip
            - phone
          type: object
          properties:
            firstName:
              description: Customer billing first name.
              type: string
              maxLength: 30
              pattern: '(?=.*[^\s])^[^|]+$'
              example: 'R2-D2'
            lastName:
              description: Customer billing last name.
              type: string
              maxLength: 30
              pattern: '(?=.*[^\s])^[^|]+$'
              example: "O'Calloway"
            addressOne:
              description: Customer billing address, first line.
              type: string
              maxLength: 50
              pattern: '(?=.*[^\s])^[^|]+$'
              example: '1234 Line Ave S.'
            addressTwo:
              description: Customer billing address, second line.
              type: string
              maxLength: 30
              pattern: '(?=.*[^\s])^[^|]+$'
              example: 'Ste 602'
            city:
              description: Customer billing city.
              type: string
              maxLength: 30
              pattern: '(?=.*[^\s])^[^|]+$'
              example: 'Atlanta'
            state:
              description: Customer billing state.
              type: string
              maxLength: 2
              pattern: '^[A-Z]{2}$'
              example: 'GA'
            zip:
              description: Customer billing zip code.
              type: string
              maxLength: 11
              pattern: '(?=.*[^\s])^[^|]+$'
              example: '30040-1309'
            phone:
              description: Customer billing phone number.
              type: string
              maxLength: 10
              pattern: '^[0-9]+$'
              example: '9973322990'
            email:
              description: Customer billing email. Required if performing an ICA transaction.
              type: string
              maxLength: 100
              pattern: '(?=.*[^\s])^[^|]+$'
              example: 'abcd.1234@fiserv.com'
            countryCode:
              description: ISO country code. Required if performing an ICA transaction.
              type: string
              maxLength: 2
              pattern: '^[A-Z]{2}$'
              example: 'US'
    AchRecurringType: # NA only
      description: Identifies if the transaction is single or recurring for ACH transaction which is a optional field for Application Type ICA.
      type: string
      enum: [Single, Recurring]
      example: 'Single'
    TeleCheckICAPaymentMethod:
      description: ACH TeleCheck payment method for internet check acceptance application type.
      allOf:
      - $ref: '#/components/schemas/TeleCheckAchPaymentMethod'
      - type: object
        required:
        - customerIpAddress
        properties:
          customerIpAddress:
            description: Customer IP address from the terminal where the order was placed (as captured by merchant).
            type: string
            maxLength: 15
            pattern: '^[0-9\.]+$'
            example: '11.32.232.44'
          imeiCode:
            description: International mobile equipment identity code.
            type: string
            maxLength: 25
            pattern: '(?=.*[^\s])^[^|]+$'
            example: '99-000086-247185-4'
          recurringType:
            $ref: '#/components/schemas/AchRecurringType'
      example:
        achType: 'TeleCheckICAPaymentMethod'
        routingNumber: '128367331'
        accountNumber: '2398649823984789'
        accountType: 'S'
        checkNumber: '9878867880'
        checkType: 'P'
        productCode: '12836'
        manualIdInfo:
          idType: 'DL'
          idData: '12345678'
        agentId: 'RVK001'
        terminalId: '1283673312'
        registrationId: '12345'
        releaseType: 'P'
        vipCustomer: 'Y'
        sessionId: 'fb2e77d.47a0479900504cb3ab4a1f626d174d2d'
        terminalState: 'GA'
        terminalCity: 'Atlanta'
        customerIpAddress: '11.32.232.44'
        imeiCode: '99-000086-247185-4'
        recurringType: 'Single'
    TeleCheckCBPPaymentMethod:
      description: ACH TeleCheck payment method for check by phone application type.
      allOf:
      - $ref: '#/components/schemas/TeleCheckAchPaymentMethod'
      - type: object
      example:
        achType: 'TeleCheckCBPPaymentMethod'
        routingNumber: '128367331'
        accountNumber: '2398649823984789'
        accountType: 'S'
        checkNumber: '9878867880'
        checkType: 'P'
        productCode: '12836'
        manualIdInfo:
          idType: 'DL'
          idData: '12345678'
        agentId: 'RVK001'
        terminalId: '1283673312'
        registrationId: '12345'
        releaseType: 'P'
        vipCustomer: 'Y'
        sessionId: 'fb2e77d.47a0479900504cb3ab4a1f626d174d2d'
        terminalState: 'GA'
        terminalCity: 'Atlanta'
    ExchangeRateDetails:
      description: Fields related to Currency Conversion Inquiry.
      properties:
        inquiryRateId:
          description: Inquiry rate ID.
          type: string
          example: 49150
        foreignCurrency:
          description: Foreign currency in alphabetic ISO 4217 currency code format.
          type: string
          example: 'AUD'
        foreignAmount:
          description: Foreign amount.
          type: string
          example: 130.33
        exchangeRate:
          description: Exchange rate.
          type: string
          example: 1.2968
        dccOffered:
          description: Dcc offered.
          type: boolean
          example: true
        exchangeRateSourceTimestamp:
          description: Exchange rate source timestamp. The used format is "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
          type: string
          example: 2018-12-05T14:13:00.000-05:00
        expirationTimestamp:
          description: Expiration timestamp. The used format is "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
          type: string
          example: 2018-12-05T15:13:00.000-05:00
        marginRatePercentage:
          description: Margin rate percentage.
          type: string
          example: '3'
        exchangeRateSourceName:
          description: Exchange rate source name.
          type: string
          example: 'REUTERS WHOLESALE INTERBANK'
    CurrencyConversionResponse:
      description: Currency Conversion Response.
      properties:
        dccApplied:
          description: Dynamic Currency Conversion Applied.
          type: boolean
          example: true
        exchangeRateDetails:
          $ref: '#/components/schemas/ExchangeRateDetails'
    PaymentBrandResponse:
      description: List of available brands of a store.
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - properties:
            brands:
              type: array
              items:
                description: This field contains the brand ID.
                type: string
      example:
        clientRequestId: '30dd879c-ee2f-11db-8314-0800200c9a66'
        apiTraceId: 'rrt-0bd552c12342d3448-b-ea-1142-12938318-7'
        brands: [MASTERCARD, VISA, MAESTRO]
    AvailableCurrenciesResponse:
      description: List of available currencies for a store.
      allOf:
      - $ref: '#/components/schemas/BasicResponse'
      - properties:
          currencies:
            type: array
            items:
              description: This field contains the ISO alpha numeric currency code.
              type: string
      example:
        clientRequestId: '30dd879c-ee2f-11db-8314-0800200c9a66'
        apiTraceId: 'rrt-0bd552c12342d3448-b-ea-1142-12938318-7'
        currencies: [EUR, USD, GBP]
#-----------------------------------------------------------------------------------------------
# Start of Fraud Detect transaction changes. This section DOES NOT BELONG to the IPG source API.
#-----------------------------------------------------------------------------------------------
    ScoreOnlyRequest:
      description: Fraud detect request payload.
      required:
        - transactionType
        - originalTransactionType
        - originalTransactionId
        - amount
        - currencyCode
        - payment
        - merchant
      properties:
        merchantRef:
          description: Merchant reference code. Used by FirstAPI and reflected in settlement records and Webhook notifications. Typically, the merchantRef field is the purchase order number or unique sequence value associated to a given transaction.
          type: string
          example: ffd031516002
        transactionType:
          description: Type of transaction merchant wants to process.
          type: string
          example: score_only
        originalTransactionType:
          description: Defines the type of the original transaction that is being evaluated for the Fraud Score.
          type: string
          enum: [transaction/authorization, transaction/authorization-reversal, transaction/deposit, transaction/deposit-reversal, transaction/purchase, transaction/purchase-reversal, transaction/refund-authorization, transaction/refund-deposit, transaction/verification, transaction/balance-inquiry]
          example: transaction/authorization
        originalTransactionId:
          description: The unique ID of this transaction. Must be unique for the entire system (not just within a specific merchant or industry). Subsequent requests related to the same transaction must have the same transactionId (e.g. transaction/deposit or transaction/authorization-reversal). This field is used for matching transactions with settlement and chargeback information. If there is no such ID available you may wish to compose one from fields available in both systems. Consider including backend, issuer, merchant id, date and time, amount, etc. as necessary.
          type: string
          pattern: '^(?!\s*$).+'
          example: fraudFAPI1231231
        amount:
          description: The amount processed for the original transaction.
          type: string
          pattern: '^(?!\s*$).+'
          example: '1100'
        currencyCode:
          description: The currency of the original transaction.
          type: string
          pattern: '([A-Z]{3})|([0-9]{3})'
          example: USD
        customer:
          $ref: '#/components/schemas/Customer'
        billingAddress:
          $ref: '#/components/schemas/BillingAddress'
        device:
          $ref: '#/components/schemas/Device'
        loyalty:
          $ref: '#/components/schemas/Loyalty'
        payment:
          $ref: '#/components/schemas/Payment'
        merchant:
          $ref: '#/components/schemas/Merchant'
        order:
          $ref: '#/components/schemas/FraudOrder'
        userDefined:
          description: A JSON object that can carry any additional information that might be helpful for fraud detection.
          type: object
          example:
            inauthTransId: 1234
      example:
        merchantRef: ffd031516002
        transactionType: score_only
        originalTransactionType: transaction/purchase
        originalTransactionId: fraudFAPI1231231
        amount: '1100'
        currencyCode: USD
        customer:
          id: 125Xasdf57D
          startDate: '2017-01-04'
          firstName: John
          lastName: Smith
          middleName: First
          email: accept@xyz.com
          sessionId: session-1
          username: username
          gender: male
          dateOfBirth: '2017'
          address:
            street: 123 Main Street
            street2: Apartment 123
            stateProvince: NY
            city: New York
            country: US
            phone:
              type: cell
              number: 212-515-1212
            zipPostalCode: '11375'
        billingAddress:
          firstName: John
          lastName: Smith
          middleName: First
          street: 123Mainstreet
          street2: Apartment 123
          stateProvince: NY
          city: NewYork
          country: CAN
          phone:
            type: cell
            number: 212-515-1212
          zipPostalCode: '11375'
        device:
          deviceType: device/mobile
          deviceId: BDE000:008945:58AC03:F02569
          networks:
          - networkType: network/wifi
            ip: 10.201.0.244
            phoneNumber: 302-123-4567
            carrierName: T-Mobile
            mobileNetworkCode: '004'
            subscriptionIdentificationNumber: '123456789'
            locationAreaCode: '12345'
            cellId: '2224'
            standard: GSM
            mac: '02:00:00:00:00:00'
            ssid: Boston-5G-1
            bssid: e8:fc:af:fb:4b:8c
            userDefined:
              battery: 5h 10m
              uptime: '0.95'
              downtime: '123'
          latitude: 90
          longitude: 90
          imei: 49-015420-323751
          model: iphone
          manufacturer: apple
          timezoneOffset: "+02:00"
          rooted: false
          malwareDetected: false
          userDefined:
            battery: 5h 10m
            uptime: '0.95'
            downtime: '123'
        loyalty:
          id: LY342XYS
          program: GOLD
          balance: 200
        payment:
          paymentType: payment/card
          method:
            methodType: method/card
            methodId: '123'
            methodAlias: card_method
            card:
              taTokenKey: ab56
              cardholderName: John Smith
              cardNumber: '444444444444'
              expDate: '122018'
              cvv: Y
              issuer: Bank of America
              cardReissuedNumber: '3'
              taToken: '7591787425749818'
            provider: apple
            userDefined:
              battery: 5h 10m
              uptime: '0.95'
          pinPresent: false
          entryMethod: remote
          issuerResponse:
            code: '000'
            status: approved
            scheme: visa
          issuerapprovedAmount: '2468'
          issuercardBalance: '1357'
          verificationAvs:
            code: '1'
            status: '2'
            scheme: '3'
          verification3ds:
            code: '4'
            status: approved
            scheme: '6'
          verificationCvv:
            code: '7'
            status: approved
            scheme: '9'
          userDefined:
            failedPinAttempts: '20'
        merchant:
          merchantUniqueId: FAPI_TEST
          location:
            locationId: FAPI_TEST
            merchantAddress:
              street: 123 Main street
              street2: St
              stateProvince: NY
              city: New York
              country: US
              zipPostalCode: '11375'
            timezoneOffset: "-05:00"
            hierarchy: abc
          mcc: '7311'
        order:
          shipToAddress:
            phone: 123-123-1234
            address1: 123 Second Ave.
            address2: '222'
            city: Atlanta
            state: GA
            zip: '30024'
            country: US
          items:
          - id: '1234'
            name: mouse
            quantity: '6'
            unit: 1
            unitPrice: '1299'
            categories:
            - [Books, Computer, Programming]
            - [Books, Text Books, Computer Science]
            detailsUrl: https://mystore.domain/product/978-0444751041
            userDefined:
              weight: '5021.23'
              vat: '0.06'
          detailsUrl: https://mystore.domain/product/978-0555751041
          userDefined:
            delivery: express
            carrier: ups
        userDefined:
          inauthTransId: '1234'
    Customer:
      description: Customer model for customers registered at merchant's website.
      required:
        - id
      properties:
        id:
          description: Unique ID for the customer, if registered. This field is required if the parent object is present.
          type: string
          pattern: '^(?!\s*$).+'
          example: 125Xasdf57D
        startDate:
          description: The timestamp of the customers registration in the merchants platform. Format is YYYY-MM-DD.
          type: string
          example: '2017-01-04'
        firstName:
          description: Customer's first name.
          type: string
          example: John
        lastName:
          description: Customer's last name.
          type: string
          example: Smith
        middleName:
          description: Customer's middle name.
          type: string
          example: Joseph
        email:
          description: Customer's email address.
          type: string
          example: accept@xyz.com
        sessionId:
          description: The unique ID of the current login session. Must be unique for the customer.
          type: string
          example: session-1
        username:
          description: The username of this customer in the merchants system. This field should contain customer-supplied data if available instead of a generated ID. This field can contain the clients email address if it is also used for authentication purposes.
          type: string
          example: username
        gender:
          description: The customers gender. Do not set this property if the customer does not specify a gender.
          type: string
          enum: [male, female, other]
          example: male
        dateOfBirth:
          description: The customer's year of birth. Format is YYYY.
          type: string
          example: '1982'
        address:
          $ref: '#/components/schemas/CustomerAddress'
        userDefined:
          description: A JSON object that can carry any additional information about the customer that might be helpful for fraud detection.
          type: object
          example:
            previouslyAffected: 'Y'
      example:
        id: '125Xasdf57D'
        startDate: '2017-01-04'
        firstName: 'John'
        lastName: 'Smith'
        middleName: 'Joseph'
        email: 'accept@xyz.com'
        sessionId: 'session-1'
        username: 'username'
        gender: 'male'
        dateOfBirth: '1982'
        address:
          street: 'Apartment 123'
          street2: '123 Main Street'
          stateProvince: 'NY'
          city: 'New York'
          country: 'US'
          phone:
            type: 'mobile'
            number: '212-515-1212'
          zipPostalCode: '11375'
        userDefined:
          previouslyAffected: 'Y'
    BillingAddress:
      description: Customer address fields associated with billing.
      required:
        - street
      properties:
        firstName:
          description: First name.
          type: string
          example: John
        lastName:
          description: Last name.
          type: string
          example: Smith
        middleName:
          description: Middle name.
          type: string
          example: Joseph
        street:
          description: First line of street address.
          type: string
          pattern: '^(?!\s*$).+'
          example: Apartment 123
        street2:
          description: Second line of street address.
          type: string
          example: 123 Main Street
        stateProvince:
          description: State or province.
          type: string
          example: NY
        city:
          description: City.
          type: string
          example: New York
        country:
          description: Country.
          type: string
          example: US
        phone:
          $ref: '#/components/schemas/Phone'
        zipPostalCode:
          description: Postal code.
          type: string
          example: '11375'
      example:
        firstName: 'John'
        lastName: 'Smith'
        middleName: 'Joseph'
        street: 'Apartment 123'
        street2: '123 Main Street'
        stateProvince: 'NY'
        city: 'New York'
        country: 'US'
        phone:
          type: 'mobile'
          number: '212-515-1212'
        zipPostalCode: '11375'
    Device:
      description: The device where this transaction originated.
      required:
        - deviceType
        - deviceId
      properties:
        deviceType:
          description: Defines the type of this object.
          type: string
          enum:
            - device/pos
            - device/mobile
          example: device/mobile
        deviceId:
          description: The unique ID of the device. Must be unique for the entire system (not just within a specific merchant or industry).
          type: string
          pattern: '^(?!\s*$).+'
          example: 'BDE000:008945:58AC03:F02569'
        networks:
          description: Information about the networks associated with the device.
          type: array
          items:
            $ref: '#/components/schemas/Items'
          example:
            - networkType: 'network/wifi'
              ip: '10.201.0.244'
              phoneNumber: '302-123-4567'
              carrierName: 'T-Mobile'
              mobileCountryCode: '310'
              mobileNetworkCode: '004'
              subscriptionIdentificationNumber: '123456789'
              locationAreaCode: '12345'
              cellId: '2224'
              standard: 'GSM'
              mac: '02:00:00:00:00:00'
              ssid: 'Boston-5G-1'
              bssid: 'e8:fc:af:fb:4b:8c'
              userDefined:
                usedData: '50MB'
        latitude:
          description: The GPS decimal latitude, ranging from (-90.0 to 90.0) where positive numbers indicate locations North of the equator.
          type: number
          example: 41.14961
        longitude:
          description: The GPS decimal longitude, ranging from (-180.0 to 180.0) where positive numbers indicate locations East of the IERS Reference Meridian.
          type: number
          example: -8.61099
        imei:
          description: The device's International Mobile Equipment Identity (IMEI) as described in IETF RFC7254.
          type: string
          example: 49-015420-323751
        model:
          description: The device's model name.
          type: string
          example: iPhone 10
        manufacturer:
          description: The device's manufacturer.
          type: string
          example: Apple
        timezoneOffset:
          description: The timezone offset from UTC to the devices timezone configuration, specified in the format +hh:mm.
          type: string
          example: '+02:00'
        rooted:
          description: A flag indicating that the device has been altered to allow privileged access to users. This flag should only be set to false if a test was performed and the result was negative. Leave unset otherwise.
          type: boolean
          example: false
        malwareDetected:
          description: A flag indicating that malware was detected on the mobile phone. This flag should only be set to false if a test was performed and the result was negative. Leave unset otherwise.
          type: boolean
          example: false
        userDefined:
          description: A JSON object that can carry any additional information about the device that might be helpful for fraud detection.
          type: object
          example:
            battery: '95%'
      example:
        deviceType: 'device/mobile'
        deviceId: 'BDE000:008945:58AC03:F02569'
        networks:
          networkType: 'network/wifi'
          ip: '10.201.0.244'
          phoneNumber: '302-123-4567'
          carrierName: 'T-Mobile'
          mobileCountryCode: '310'
          mobileNetworkCode: '004'
          subscriptionIdentificationNumber: '123456789'
          locationAreaCode: '12345'
          cellId: '2224'
          standard: 'GSM'
          mac: '02:00:00:00:00:00'
          ssid: 'Boston-5G-1'
          bssid: 'e8:fc:af:fb:4b:8c'
          userDefined:
            usedData: '50MB'
        latitude: 41.14961
        longitude: -8.61099
        imei: '49-015420-323751'
        model: 'iPhone 10'
        manufacturer: 'Apple'
        timezoneOffset: '+02:00'
        rooted: false
        malwareDetected: false
        userDefined:
          battery: '95%'
    Loyalty:
      description: The loyalty program information associated with this payment.
      properties:
        id:
          description: A unique ID associated with the loyalty program account. Must be unique within the merchants system. Depending on loyalty programs the account might also serve as a credit/bank account. If this is the case the ID must be not be the PAN.
          type: string
          example: AK0123456789
        program:
          description: A string that identifies the program in which the customer is enrolled if the merchant supports several programs or levels.
          type: string
          example: gold
        balance:
          description: The balance of the loyalty program account in a program specific currency (e.g. points).
          type: number
          example: 163
      example:
        id: 'AK0123456789'
        program: 'gold'
        balance: 163
    Payment:
      description: Payment information for the transaction.
      required:
        - paymentType
        - method
        - pinPresent
        - entryMethod
      properties:
        paymentType:
          description: Defines the type of the payment.
          type: string
          enum:
            - payment/card
            - payment/wallet
          example: payment/card
        method:
          $ref: '#/components/schemas/Method'
        pinPresent:
          description: Indicates if the cards Personal Identification Number was supplied.
          type: boolean
          example: true
        entryMethod:
          description: The method in which the card information entered the system.
          type: string
          enum: [manual, stripe, ocr, emv, nfc, remote, pin_present]
          example: remote
        issuerResponse:
          $ref: '#/components/schemas/IssuerResponse'
        issuerApprovedAmount:
          description: The actual approved amount. This field should be filled in when the message has already passed through the issuer (e.g. post-authorization). For transaction/authorization this amount refers to the amount that was locked on the card-holders account.
          type: string
          example: '1234'
        issuerCardBalance:
          description: The payment methods account balance if available. This field should be filled in when the message has already passed through the issuer (e.g. post-authorization).
          type: string
          example: '2000'
        verificationAvs:
          $ref: '#/components/schemas/VerificationAvs'
        verification3ds:
          $ref: '#/components/schemas/Verification3ds'
        verificationCvv:
          $ref: '#/components/schemas/VerificationCvv'
        userDefined:
          description: A JSON object that carries any additional information that might be helpful for fraud detection.
          type: object
          example:
            failedPinAttempts: 3
      example:
        paymentType: 'payment/card'
        method:
          methodType: 'method/card'
          methodId: '300fa792-bf5f-418e-aa74-d5b3c81298d2'
          methodAlias: 'card one'
          card:
            taToken: '7591787425749818'
            taTokenKey: 'ab56'
            cardholderName: 'John F. Doe'
            cardNumber: '5424180279791732'
            expDate: '122028'
            cvv: 'true'
            issuer: 'Bank of America'
            cardReissuedNumber: '2'
          provider: 'apple'
        pinPresent: true
        entryMethod: 'remote'
        issuerResponse:
          code: '100'
          status: 'approved'
          scheme: 'visa'
        issuerApprovedAmount: '1234'
        issuerCardBalance: '2000'
        verificationAvs:
          code: '+Z'
          status: 'zip match'
          scheme: 'amex'
        verification3ds:
          code: '4'
          status: 'approved'
          scheme: '6'
        verificationCvv:
          code: '7'
          status: 'approved'
          scheme: '9'
        userDefined:
          failedPinAttempts: 3
    Card:
      description: Properties for the payment method.
      properties:
        taToken:
          description: TransArmor token value. Either the token fields or card number field must contain a value.
          type: string
          example: '7591787425749818'
        taTokenKey:
          description: TransArmor token key to identify the merchant.
          type: string
          example: 'ab56'
        cardholderName:
          description: The cardholder name as it appears on the card.
          type: string
          example: John F. Doe
        cardNumber:
          description: Use this field to send clear PAN or tokens other than TransArmor Token.
          type: string
          example: '5424180279791732'
        expDate:
          description: Payment method expiration date. Format is MMYYYY.
          type: string
          example: '122028'
        cvv:
          description: CVV present indicator.
          type: string
          example: 'Y'
        issuer:
          description: The company (usually a bank) that issued the card.
          type: string
          example: Bank of America
        cardReissuedNumber:
          description: A number that distinguishes between two plastic cards with the same card number in the event of the card being re-issued.
          type: string
          example: '2'
      example:
        taToken: '7591787425749818'
        taTokenKey: 'ab56'
        cardholderName: 'John F. Doe'
        cardNumber: '5424180279791732'
        expDate: '122028'
        cvv: 'true'
        issuer: 'Bank of America'
        cardReissuedNumber: '2'
    Merchant:
      description: The merchant where this transaction occurred.
      required:
        - merchantUniqueId
      properties:
        mcc:
          description: The 4-digit Merchant Category Code. The merchant might be associated with multiple MCCs. In that case the MCC provided here will be the one that better describes the current transaction.
          type: string
          example: '7311'
        merchantUniqueId:
          description: The unique ID of this merchant. Must be unique for the entire system (not just within a specific industry).
          type: string
          pattern: '^(?!\s*$).+'
          example: 9a0f5fe8-f907-4b06-88e9-8dd5141cbf44
        location:
          $ref: '#/components/schemas/Location'
        userDefined:
          description: A JSON object that can carry any additional information about the merchant that might be helpful for fraud detection.
          type: object
          example:
            highFraudVolume: true
      example:
        mcc: '7311'
        merchantUniqueId: '9a0f5fe8-f907-4b06-88e9-8dd5141cbf44'
        location:
          locationId: '3'
          merchantAddress:
            street: '5565 Glenridge Connector'
            city: 'Atlanta'
            state: 'GA'
            zipPostalCode: '30342'
            country: 'US'
          hierarchy: 'FDC'
          timezoneOffset: '+02:00'
          userDefined:
            validAddress: false
        userDefined:
          highFraudVolume: true
    FraudOrder:
      description: The list of items included in the order.
      properties:
        shipToAddress:
          $ref: '#/components/schemas/ShipToAddress'
        items:
          description: The list of items included in the order.
          type: array
          items:
            $ref: '#/components/schemas/FraudOrderItems'
          example:
            - id: 'PRODCODE1'
              name: 'The Art of Computer Programming'
              quantity: 'litre'
              unit: '1'
              unitPrice:
                value: 7300
                currency: 'USD'
              categories: '[["Books", "Computers & Technology", "Programming"], ["Books", "Text Books", "Computer Science"]]'
              detailsUrl: 'https://mystore.domain/product/PRODCODE1'
              userDefined:
                weight: 5021.23
                vat: 0.06
        detailsUrl:
          description: The URL to the merchant's management system, for reporting and analysis.
          type: string
          example: 'https://mystore.domain/product/PRODCODE1'
        userDefined:
          description: A JSON object that can carry any additional information about the order that might be helpful for fraud detection.
          type: object
          example:
            delivery: 'express'
            carrier: 'ups'
      example:
        shipToAddress:
          phone: '404-404-4040'
          address1: '5565 Glenridge Connector'
          city: 'Atlanta'
          state: 'GA'
          zip: '30342'
          country: 'US'
        items:
          - id: 'PRODCODE1'
            name: 'The Art of Computer Programming'
            quantity: 'litre'
            unit: 10.23
            unitPrice:
              value: 7300
              currency: 'USD'
            categories: '[["Books", "Computers & Technology", "Programming"], ["Books", "Text Books", "Computer Science"]]'
            detailsUrl: 'https://mystore.domain/product/PRODCODE1'
            userDefined:
              weight: 5021.23
              vat: 0.06
        userDefined:
          delivery: 'express'
          carrier: 'ups'
    CustomerAddress:
      description: Customer address fields.
      allOf:
      - $ref: '#/components/schemas/FraudAddress'
      - properties:
          phone:
            $ref: '#/components/schemas/Phone'
      example:
        street: 'Apartment 123'
        street2: '123 Main Street'
        stateProvince: 'NY'
        city: 'New York'
        country: 'US'
        phone:
          type: 'mobile'
          number: '212-515-1212'
        zipPostalCode: '11375'
    Phone:
      description: Phone number.
      properties:
        type:
          description: Type of phone.
          type: string
          example: mobile
        number:
          description: Free form phone number.
          type: string
          example: 212-515-1212
      example:
        type: 'mobile'
        number: '212-515-1212'
    Items:
      description: Network information.
      required:
        - networkType
      properties:
        networkType:
          description: Defines the type of network associated with the device.
          type: string
          enum: [network/mobile, network/wifi]
          example: network/wifi
        ip:
          description: The IPv4 or IPv6 address of the device if the network assigned one.
          type: string
          example: 10.201.0.244
        phoneNumber:
          description: The devices primary phone number. This value should be supplied directly without any transformation (e.g. removal of spaces, hyphens or parentheses). If this data is available in segregated fields, it should be concatenated using a blank space (" ") as a separator.
          type: string
          example: 302-123-4567
        carrierName:
          description: The network carrier name.
          type: string
          example: T-Mobile
        mobileCountryCode:
          description: The Mobile Country Code (MCC) as described in the ITUs E.212 specification.
          type: string
          example: '310'
        mobileNetworkCode:
          description: The Mobile Network Code (MNC) as described in the ITUs E.212 specification.
          type: string
          example: '004'
        subscriptionIdentificationNumber:
          description: The Mobile Subscription Identification Number code (MSIN) as described in the ITUs E.212 specification.
          type: string
          example: '123456789'
        locationAreaCode:
          description: The Location Area Code (LAC) is a 16-bit identifier for a region that is covered by a set of network antennas.
          type: string
          example: '12345'
        cellId:
          description: The Cell ID (CID) is identifier for a specific Base Transceiver Station (BTS) within a specific Location Area Code (LAC).
          type: string
          example: '2224'
        standard:
          description: An identifier of the network standard used.
          type: string
          example: GSM
        mac:
          description: The MAC address of the device that is connected to the Wi-Fi network.
          type: string
          example: '02:00:00:00:00:00'
        ssid:
          description: The Wi-Fi networks Service Set Identifier (SSID).
          type: string
          example: Boston-5G-1
        bssid:
          description: The Wi-Fi networks Basic Service Set Identifier (BSSID).
          type: string
          example: 'e8:fc:af:fb:4b:8c'
        userDefined:
          description: A JSON object that can carry any additional information about the network that might be helpful for fraud detection.
          type: object
          example:
            usedData: '50MB'
    Method:
      description: Info about the payment method.
      required:
        - methodType
        - card
      properties:
        methodType:
          description: Unique ID for the payment method type.
          type: string
          enum: [method/card, method/wallet]
          example: method/card
        methodId:
          description: The unique ID of this payment method if it was previously registered with a registration/method or if it is currently being registered. Must be unique for the entire system (not just within a specific merchant or industry). Mandatory if being used inside a registration/method.
          type: string
          example: 300fa792-bf5f-418e-aa74-d5b3c81298d2
        methodAlias:
          description: The address that should be used to send billing information for this payment method.
          type: string
          example: 'card one'
        card:
          $ref: '#/components/schemas/Card'
        provider:
          description: The wallet provider. This field should be normalized before sending through the API.
          type: string
          example: apple
        userDefined:
          description: A JSON object that can carry any additional information about the method that might be helpful for fraud detection.
          type: object
          example:
            phoneBrand: 'samsung'
      example:
        methodType: 'method/card'
        methodId: '300fa792-bf5f-418e-aa74-d5b3c81298d2'
        methodAlias: 'card one'
        card:
          taToken: '7591787425749818'
          taTokenKey: 'ab56'
          cardholderName: 'John F. Doe'
          cardNumber: '5424180279791732'
          expDate: '122028'
          cvv: 'true'
          issuer: 'Bank of America'
          cardReissuedNumber: '2'
        provider: 'apple'
    IssuerResponse:
      description: The issuers response to the payment request. This field should be filled in when the message has already passed through the issuer (e.g. post-authorization).
      required:
        - code
        - scheme
      properties:
        code:
          description: The verification response code, as sent by the verification system.
          type: string
          pattern: '^(?!\s*$).+'
          example: '100'
        status:
          description: The interpretation of the response code. Valid values are
            "approved" - The verification was conducted and is approved.
            "declined" - The verification was conducted and is not approved.
            "disabled" - The verification was not conducted because it was not requested or disabled in the verification.
            "unknown" - The verification was attempted but it failed due to some system error (e.g. timeout).
          type: string
          enum:
            - approved
            - declined
            - disabled
            - unknown
          example: approved
        scheme:
          description: An identifier of the system/specification from which the code was received, and how the status was derived.
          type: string
          pattern: '^(?!\s*$).+'
          example: visa
      example:
        code: '100'
        status: 'approved'
        scheme: 'visa'
    Location:
      description: The specific location (e.g. store or station) where the transaction takes place.
      properties:
        locationId:
          description: The unique ID of this location.
          type: string
          example: '3'
        merchantAddress:
          $ref: '#/components/schemas/FraudAddress'
        hierarchy:
          description: Free-text field to describe a hierarchy the merchant would like to provide.
          type: string
          example: 'FDC'
        timezoneOffset:
          description: The timezone offset from UTC to the merchants timezone configuration, specified in the format +hh:mm.
          type: string
          example: '+02:00'
        userDefined:
          description: A JSON object that can carry any additional information about the location that might be helpful for fraud detection.
          type: object
          example:
            validAddress: false
      example:
        locationId: '3'
        merchantAddress:
          street: '5565 Glenridge Connector'
          city: 'Atlanta'
          state: 'GA'
          zipPostalCode: '30342'
          country: 'US'
        hierarchy: 'FDC'
        timezoneOffset: '+02:00'
        userDefined:
          validAddress: false
    ShipToAddress:
      description: The address where the items in this order should be shipped to.
      properties:
        phone:
          description: Free-form phone number associated with the ship-to address.
          type: string
          example: '123-123-1234'
        address1:
          description: First line of street address.
          type: string
          example: 123 Second Ave.
        address2:
          description: Second line of street address.
          type: string
          example: 'Apt #42'
        city:
          description: City.
          type: string
          example: Atlanta
        state:
          description: State or province.
          type: string
          example: GA
        zip:
          description: Postal Code, free form.
          type: string
          example: '30024'
        country:
          description: Country.
          type: string
          example: US
      example:
        phone: '404-404-4040'
        address1: '5565 Glenridge Connector'
        city: 'Atlanta'
        state: 'GA'
        zip: '30342'
        country: 'US'
    FraudOrderItems:
      description: Product details.
      properties:
        id:
          description: A unique ID associated with the product. Must be unique within the merchant's system.
          type: string
          example: PRODCODE1
        name:
          description: A name or short description of the product.
          type: string
          example: The Art of Computer Programming
        quantity:
          description: The unit in which the product is sold (e.g. litre, kilogram, etc). Leave empty if the product is sold as a complete unit.
          type: string
          example: litre
        unit:
          description: The number of units sold. Set to 1 if there is only one unit of the item. Leave empty if the quantity is unknown at the time of the request.
          type: string
          example: '1'
        unitPrice:
          description: The price per unit.
          type: string
          example: '{"value": 7300, "currency": "USD"}'
        categories:
          description: The categories that this product belongs to.
          type: array
          items:
            type: array
            items:
              type: string
              example:
                - 'Books'
            example:
              - ['Books, Programming']
          example:
            - ['Books, Computers & Technology, Programming']
            - ['Books, Text Books, Computer Science']
        detailsUrl:
          description: The URL to the merchant's management system, for reporting and analysis.
          type: string
          example: 'https://mystore.domain/product/PRODCODE1'
        userDefined:
          description: A JSON object that can carry any additional information about the order that might be helpful for fraud detection.
          type: object
          example:
            weight: 5021.23
            vat: 0.06
      example:
        id: 'PRODCODE1'
        name: 'The Art of Computer Programming'
        quantity: 'litre'
        unit: 10.23
        unitPrice:
          value: 7300
          currency: 'USD'
        categories: '[["Books", "Computers & Technology", "Programming"], ["Books", "Text Books", "Computer Science"]]'
        detailsUrl: 'https://mystore.domain/product/PRODCODE1'
        userDefined:
          weight: 5021.23
          vat: 0.06
    FraudAddress:
      description: Address fields.
      required:
        - street
        - country
      properties:
        street:
          description: First line of street address.
          type: string
          pattern: '^(?!\s*$).+'
          example: Apartment 123
        street2:
          type: string
          description: Second line of street address.
          example: 123 Main Street
        stateProvince:
          description: State or province.
          type: string
          example: NY
        city:
          description: City.
          type: string
          example: New York
        country:
          description: Country.
          type: string
          pattern: '^(?!\s*$).+'
          example: US
        zipPostalCode:
          description: Postal code.
          type: string
          pattern: '^(?!\s*$).+'
          example: '11375'
      example:
        street: 'Apartment 123'
        street2: '123 Main Street'
        stateProvince: 'NY'
        city: 'New York'
        country: 'US'
    VerificationAvs:
      description: The result of the AVS (Address Verification System) check.
      type: object
      required:
        - code
        - scheme
      properties:
        code:
          description: AVS response code.
          type: string
          pattern: '^(?!\s*$).+'
          example: '+Z'
        status:
          description: Interpretation of the response code.
          type: string
          example: 'zip match'
        scheme:
          description: Identifier of the scheme.
          type: string
          pattern: '^(?!\s*$).+'
          example: 'amex'
      example:
        code: '+Z'
        status: 'zip match'
        scheme: 'amex'
    Verification3ds:
      description: The result of the 3DS (3D Secure) check.
      type: object
      required:
        - code
        - scheme
      properties:
        code:
          description: 3DS response code.
          type: string
          pattern: '^(?!\s*$).+'
          example: '4'
        status:
          description: Interpretation of the response code.
          type: string
          example: 'approved'
        scheme:
          description: Identifier of the scheme.
          type: string
          pattern: '^(?!\s*$).+'
          example: '6'
      example:
        code: '4'
        status: 'approved'
        scheme: '6'
    VerificationCvv:
      description: The result of the CVV (Card Verification Value, or Card Security Code) check.
      type: object
      required:
        - code
        - scheme
      properties:
        code:
          description: CVV response code.
          type: string
          pattern: '^(?!\s*$).+'
          example: '7'
        status:
          description: Interpretation of the response code.
          type: string
          example: 'approved'
        scheme:
          description: Identifier of the scheme.
          type: string
          pattern: '^(?!\s*$).+'
          example: '9'
      example:
        code: '7'
        status: 'approved'
        scheme: '9'
    ScoreOnlyResponse:
      description: Fraud detect response.
      properties:
        correlationId:
          description: Unique trace ID for issue triage.
          type: string
          example: '228.9404979051319'
        transactionStatus:
          description: Please refer to "Errors Section" for more info.
          type: string
          enum:
            - Scored Successfully
            - Not Processed
          example: 'Not Processed'
        validationStatus:
          description: If status returned is "failure", input validation errors occurred. Please refer to the "Errors Section" for more info. Valid values are 'success' and 'failure'.
          type: string
          example: 'success'
        transactionType:
          description: The transactionType provided in request.
          type: string
          example: 'transaction/authorization'
        fraudScore:
          description: Fraud likelihood assessment consisting of a score, associated warning(s), and explanation(s) of score received.
          type: object
          properties:
            score:
              description: The score attributed to this request by our machine learning system, ranging from 0 (less likely to be fraud) to 1000 (more likely to be fraud).
              type: string
              example: '1000'
            warnings:
              description: A list of non-critical warnings raised while processing the request. Warnings included in this list will have integration and data-quality related messages.
              type: array
              items:
                type: string
                example: 'warning1'
              example:
                - 'warning1'
                - 'warning2'
            explanations:
              description: Explanation of the fraud score applied consisting of a description, type of the explanation, and rule (if applicable).
              type: array
              items:
                type: object
                properties:
                  description:
                    description: 'Description of the fraud score explanation.'
                    type: string
                    example: 'Suspicious transaction amount.'
                  rule:
                    description: ID of the rule being triggered.
                    type: string
                    example: 'QSR_14'
                  type:
                    description: Type of the explanation (model or rule).
                    type: string
                    example: 'explanation/model'
              example:
                - description: 'Suspicious transaction amount.'
                  type: 'explanation/model'
                - description: 'Suspicious pattern compared to number of transactions in the past 1 month for the card.'
                  type: 'explanation/rule'
                  rule: 'QSR_14'
            recommendedDecision:
              description: The action that should be taken for the request that was sent.
              type: string
              example: 'accept'
          example:
            score: '1000'
            warnings:
              - 'warning1'
              - 'warning2'
            explanations:
              - description: 'Suspicious transaction amount.'
                type: 'explanation/model'
              - description: 'Suspicious pattern compared to number of transactions in the past 1 month for the card.'
                type: 'explanation/rule'
                rule: 'QSR_14'
            recommendedDecision: 'accept'
      example:
        correlationId: '228.9404979051319'
        transactionStatus: 'Not Processed'
        validationStatus: 'failure'
        transactionType: 'score_only'
        fraudScore:
          score: '1000'
          warnings:
            - 'warning1'
            - 'warning2'
          explanations:
            - description: 'Suspicious transaction amount.'
              type: 'explanation/model'
            - description: 'Suspicious pattern compared to number of transactions in the past 1 month for the card.'
              type: 'explanation/rule'
              rule: 'QSR_14'
          recommendedDecision: 'reject'
    FraudRegistration:
      required:
        - transactionType
        - customer
        - merchant
      properties:
        merchantRef:
          description: Merchant reference code. Used by FirstAPI and reflected in settlement records and webhook notifications. Typically, the merchantRef field is the purchase order number or unique sequence value associated to a given transaction.
          type: string
          example: ffd031516002
        transactionType:
          description: Type of transaction merchant wants to process.
          type: string
          example: registration
        customer:
          $ref: '#/components/schemas/Customer'
        merchant:
          $ref: '#/components/schemas/Merchant'
        device:
          $ref: '#/components/schemas/FraudRegistrationDevice'
        userDefined:
          description: A JSON object that can carry any additional information that might be helpful for fraud detection.
          type: object
          example:
            inauthTransId: '1234'
      example:
        merchantRef: 'ffd031516002'
        transactionType: 'registration'
        customer:
          id: '125Xasdf57D'
          startDate: '2017-01-04'
          firstName: 'John'
          lastName: 'Smith'
          middleName: 'First'
          email: 'ertpt@xyz.com'
          sessionId: '6a2d41f5-142d-4bf1-839f-33b56dbdcf89'
          username: 'username'
          gender: 'male'
          dateOfBirth: '2017'
          userDefined:
            failedPinAttempts: '20'
          address:
            street: '123 Main Street'
            street2: 'Apartment 123'
            stateProvince: 'NY'
            city: 'New York'
            country: 'US'
            phone:
              number: '212-515-1212'
            zipPostalCode: '11375'
        merchant:
          merchantUniqueId: 'FAPI_TEST'
          location:
            locationId: 'FAPI_TEST'
            merchantAddress:
              street: '123 Main street'
              street2: 'St'
              stateProvince: 'NY'
              city: 'New York'
              country: 'US'
              zipPostalCode: '11375'
            hierarchy: 'abc'
            timeZoneOffset: '+02:00'
            userDefined:
              failedPinAttempts: '20'
          mcc: '7011'
          userDefined:
            failedPinAttempts: '20'
        device:
          deviceType: 'device/mobile'
          deviceId: 'BDE000:008945:58AC03:F02569'
          networks:
            - networkType: 'network/wifi'
              ip: '10.201.0.244'
              mac: '02:00:00:00:00:00'
              ssid: 'Boston-5G-1'
              bssid: 'e8:fc:af:fb:4b:8c'
              userDefined:
                battery: '5h 10m'
                uptime: '0.95'
          latitude: '90'
          longitude: '90'
          imei: '49-015420-323751'
          model: 'iphone'
          manufacturer: 'apple'
          timezoneOffset: '+02:00'
          rooted: 'false'
          malwareDetected: 'false'
          userDefined:
            battery: '5h 10m'
            uptime: '0.95'
        userDefined:
          failedPinAttempts: '1234'
    FraudRegistrationDevice:
      description: The device where this transaction originated.
      required:
        - deviceType
        - deviceId
      properties:
        deviceType:
          description: Defines the type of this object.
          type: string
          enum:
            - device/pos
            - device/mobile
          example: device/mobile
        deviceId:
          description: The unique ID of the device. Must be unique for the entire system (not just within a specific merchant or industry).
          type: string
          pattern: '^(?!\s*$).+'
          example: 'BDE000:008945:58AC03:F02569'
        networks:
          description: Information about the networks associated with the device.
          type: array
          items:
            $ref: '#/components/schemas/FraudRegistrationDeviceItems'
            example:
              - networkType: 'network/wifi'
                ip: '10.201.0.244'
                mac: '02:00:00:00:00:00'
                ssid: 'Boston-5G-1'
                bssid: 'e8:fc:af:fb:4b:8c'
                userDefined:
                  battery: '5h 10m'
        latitude:
          description: The GPS decimal latitude, ranging from (-90.0 to 90.0) where positive numbers indicate locations North of the equator.
          type: number
          example: 41.14961
        longitude:
          description: The GPS decimal longitude, ranging from (-180.0 to 180.0) where positive numbers indicate locations East of the IERS Reference Meridian.
          type: number
          example: -8.61099
        imei:
          description: "The device's International Mobile Equipment Identity (IMEI) as described in IETF RFC7254."
          type: string
          example: 49-015420-323751
        model:
          description: "The device's model name."
          type: string
          example: iPhone 10
        manufacturer:
          description: "The device's manufacturer."
          type: string
          example: Apple
        timezoneOffset:
          description: The timezone offset from UTC to the devices timezone configuration, specified in the format +hh:mm.
          type: string
          example: '+02:00'
        rooted:
          description: A flag indicating that the device has been altered to allow privileged access to users. This flag should only be set to false if a test was performed and the result was negative. Leave unset otherwise.
          type: boolean
          example: false
        malwareDetected:
          description: A flag indicating that malware was detected on the mobile phone. This flag should only be set to false if a test was performed and the result was negative. Leave unset otherwise.
          type: boolean
          example: false
        userDefined:
          description: A JSON object that can carry any additional information about the device that might be helpful for fraud detection.
          type: object
          example:
            battery: '95%'
      example:
        deviceType: 'device/mobile'
        deviceId: 'BDE000:008945:58AC03:F02569'
        networks:
          - networkType: 'network/wifi'
            ip: '10.201.0.244'
            mac: '02:00:00:00:00:00'
            ssid: 'Boston-5G-1'
            bssid: 'e8:fc:af:fb:4b:8c'
            userDefined:
              battery: '5h 10m'
        latitude: 41.14961
        longitude: -8.61099
        imei: '49-015420-323751'
        model: 'iPhone 10'
        manufacturer: 'Apple'
        timezoneOffset: '+02:00'
        rooted: false
        malwareDetected: false
        userDefined:
          battery: '95%'
    FraudRegistrationDeviceItems:
      description: Network information.
      required:
        - networkType
      properties:
        networkType:
          description: Defines the type of network associated with the device.
          type: string
          enum: [network/mobile, network/wifi]
          example: network/wifi
        ip:
          description: The IPv4 or IPv6 address of the device if the network assigned one.
          type: string
          example: 10.201.0.244
        mac:
          description: The MAC address of the device that is connected to the Wi-Fi network.
          type: string
          example: '02:00:00:00:00:00'
        ssid:
          description: The Wi-Fi networks Service Set Identifier (SSID).
          type: string
          example: Boston-5G-1
        bssid:
          description: The Wi-Fi networks Basic Service Set Identifier (BSSID).
          type: string
          example: 'e8:fc:af:fb:4b:8c'
        userDefined:
          description: A JSON object that can carry any additional information about the network that might be helpful for fraud detection.
          type: object
          example:
            battery: '5h 10m'
      example:
        networkType: 'network/wifi'
        ip: '10.201.0.244'
        mac: '02:00:00:00:00:00'
        ssid: 'Boston-5G-1'
        bssid: 'e8:fc:af:fb:4b:8c'
        userDefined:
          battery: '5h 10m'
    ClientRegistration:
      required:
        - originalTransactionType
      allOf:
      - $ref: '#/components/schemas/FraudRegistration'
      - properties:
          originalTransactionType:
            description: Defines the type of the original transaction that is being evaluated for the Fraud Score.
            type: string
            example: registration/client
      example:
        merchantRef: 'ffd031516002'
        transactionType: 'registration'
        originalTransactionType: 'registration/client'
        customer:
          id: '125Xasdf57D'
          startDate: '2017-01-04'
          firstName: 'John'
          lastName: 'Smith'
          middleName: 'First'
          email: 'ertpt@xyz.com'
          sessionId: '6a2d41f5-142d-4bf1-839f-33b56dbdcf89'
          username: 'username'
          gender: 'male'
          dateOfBirth: '2017'
          userDefined:
            failedPinAttempts: '20'
          address:
            street: '123 Main Street'
            street2: 'Apartment 123'
            stateProvince: 'NY'
            city: 'New York'
            country: 'US'
            phone:
              number: '212-515-1212'
            zipPostalCode: '11375'
        merchant:
          merchantUniqueId: 'FAPI_TEST'
          location:
            locationId: 'FAPI_TEST'
            merchantAddress:
              street: '123 Main street'
              street2: 'St'
              stateProvince: 'NY'
              city: 'New York'
              country: 'US'
              zipPostalCode: '11375'
            hierarchy: 'abc'
            timeZoneOffset: '+02:00'
            userDefined:
              failedPinAttempts: '20'
          mcc: '7011'
          userDefined:
            failedPinAttempts: '20'
        device:
          deviceType: 'device/mobile'
          deviceId: 'BDE000:008945:58AC03:F02569'
          networks:
            - networkType: 'network/wifi'
              ip: '10.201.0.244'
              mac: '02:00:00:00:00:00'
              ssid: 'Boston-5G-1'
              bssid: 'e8:fc:af:fb:4b:8c'
              userDefined:
                battery: '5h 10m'
                uptime: '0.95'
          latitude: '90'
          longitude: '90'
          imei: '49-015420-323751'
          model: 'iphone'
          manufacturer: 'apple'
          timezoneOffset: '+02:00'
          rooted: 'false'
          malwareDetected: 'false'
          userDefined:
            battery: '5h 10m'
            uptime: '0.95'
        userDefined:
          failedPinAttempts: '1234'
    PaymentRegistration:
      required:
        - registrationMethod
        - originalTransactionType
      allOf:
      - $ref: '#/components/schemas/FraudRegistration'
      - properties:
          originalTransactionType:
            description: Defines the type of the original transaction that is being evaluated for the Fraud Score.
            type: string
            example: registration/method/card
          issuerResponse:
            $ref: '#/components/schemas/IssuerResponse'
          verificationAvs:
            $ref: '#/components/schemas/VerificationAvs'
          verification3ds:
            $ref: '#/components/schemas/Verification3ds'
          verificationCvv:
            $ref: '#/components/schemas/VerificationCvv'
          registrationMethod:
            $ref: '#/components/schemas/RegistrationMethod'
      example:
        merchantRef: 'ffd031516002'
        transactionType: 'registration'
        originalTransactionType: 'registration/method/card'
        issuerResponse:
          code: '100'
          status: 'approved'
          scheme: 'visa'
        verificationAvs:
          code: '1'
          status: '2'
          scheme: '3'
        verification3ds:
          code: '4'
          status: 'approved'
          scheme: '6'
        verificationCvv:
          code: '7'
          status: 'approved'
          scheme: '9'
        customer:
          id: '125Xasdf57D'
          startDate: '2017-01-04'
          firstName: 'John'
          lastName: 'Smith'
          middleName: 'First'
          email: 'ertpt@xyz.com'
          sessionId: '6a2d41f5-142d-4bf1-839f-33b56dbdcf89'
          username: 'username'
          gender: 'male'
          dateOfBirth: '2017'
          userDefined:
            failedPinAttempts: '20'
          address:
            street: '123 Main Street'
            street2: 'Apartment 123'
            stateProvince: 'NY'
            city: 'New York'
            country: 'US'
            phone:
              number: '212-515-1212'
            zipPostalCode: '11375'
        merchant:
          merchantUniqueId: 'FAPI_TEST'
          location:
            locationId: 'FAPI_TEST'
            merchantAddress:
              street: '123 Main street'
              street2: 'St'
              stateProvince: 'NY'
              city: 'New York'
              country: 'US'
              zipPostalCode: '11375'
            hierarchy: 'abc'
            timeZoneOffset: '+02:00'
            userDefined:
              failedPinAttempts: '20'
          mcc: '7011'
          userDefined:
            failedPinAttempts: '20'
        device:
          deviceType: 'device/mobile'
          deviceId: 'BDE000:008945:58AC03:F02569'
          networks:
            - networkType: 'network/wifi'
              ip: '10.201.0.244'
              mac: '02:00:00:00:00:00'
              ssid: 'Boston-5G-1'
              bssid: 'e8:fc:af:fb:4b:8c'
              userDefined:
                battery: '5h 10m'
                uptime: '0.95'
          latitude: '90'
          longitude: '90'
          imei: '49-015420-323751'
          model: 'iphone'
          manufacturer: 'apple'
          timezoneOffset: '+02:00'
          rooted: 'false'
          malwareDetected: 'false'
          userDefined:
            battery: '5h 10m'
            uptime: '0.95'
        registrationMethod:
          methodType: 'method/card'
          methodId: '300fa792-bf5f-418e-aa74-d5b3c81298d2'
          methodAlias: 'card one'
          card:
            cardholderName: 'John F. Doe'
            cardNumber: '5424180279791732'
            expDate: '122028'
            cvv: 'true'
            issuer: 'Bank of America'
            cardReissuedNumber: '2'
          methodAddress:
            street: '125 Main Street'
            street2: 'Apartment 123'
            stateProvince: 'NY'
            city: 'New York'
            country: 'US'
            zipPostalCode: '11375'
        userDefined:
          failedPinAttempts: '1234'
    RegistrationMethod:
      description: A JSON object that holds info about the payment registration method.
      required:
        - methodType
        - card
      properties:
        methodType:
          description: Unique ID for the payment method type.
          type: string
          enum: [method/card, method/wallet]
          example: method/card
        methodId:
          description: The unique ID of this payment method if it was previously registered with a registration/method or if it is currently being registered. Must be unique for the entire system (not just within a specific merchant or industry). Mandatory if being used inside a registration/method.
          type: string
          example: 300fa792-bf5f-418e-aa74-d5b3c81298d2
        userDefined:
          description: A JSON object that carries any additional information that might be helpful for fraud detection.
          type: object
          example:
            failedPinAttempts: 3
        billingPhoneNumber:
          description: The address that should be used to send billing information for this payment method.
          type: string
          example: '123456789'
        methodAlias:
          description: The address that should be used to send billing information for this payment method.
          type: string
          example: 'card one'
        card:
          $ref: '#/components/schemas/FraudRegistrationCard'
        methodAddress:
          $ref: '#/components/schemas/FraudAddress'
      example:
        methodType: 'method/card'
        methodId: '300fa792-bf5f-418e-aa74-d5b3c81298d2'
        methodAlias: 'card one'
        billingPhoneNumber: '123456789'
        userDefined:
          failedPinAttempts: 20
        card:
          cardholderName: 'John F. Doe'
          cardNumber: '5424180279791732'
          expDate: '122028'
          cvvPresent: 'true'
          issuer: 'Bank of America'
          cardReissuedNumber: '2'
        methodAddress:
          street: '125 Main Street'
          street2: 'Apartment 123'
          stateProvince: 'NY'
          city: 'New York'
          country: 'US'
          zipPostalCode: '11375'
    FraudRegistrationCard:
      description: A JSON object that holds info about the payment registration card.
      properties:
        cardholderName:
          description: The cardholder name as it appears on the card.
          type: string
          example: John F. Doe
        cardNumber:
          description: Use this field to send clear PAN or tokens other than TransArmor Token.
          type: string
          example: '5424180279791732'
        expDate:
          description: Payment method expiration date. Format is MMYYYY.
          type: string
          example: '122028'
        cvvPresent:
          description: CVV present indicator.
          type: string
          example: 'Y'
        issuer:
          description: The company (usually a bank) that issued the card.
          type: string
          example: Bank of America
        cardReissuedNumber:
          description: A number that distinguishes between two plastic cards with the same card number in the event of the card being re-issued.
          type: string
          example: '2'
      example:
        cardholderName: 'John F. Doe'
        cardNumber: '5424180279791732'
        expDate: '122028'
        cvvPresent: 'true'
        issuer: 'Bank of America'
        cardReissuedNumber: '2'
    FraudRegistrationResponse:
      properties:
        correlationId:
          description: The value used to track the transaction.
          type: string
          example: '228.6277057434761'
        transactionStatus:
          description: Status of the transaction. Valid values are 'Not Processed' and 'Scored successfully'
          type: string
          enum:
            - Scored Successfully
            - Not Processed
          example: 'Not Processed'
        validationStatus:
          description: If status returned is "failure", input validation errors occurred. Please refer to the "Errors Section" for more info. Valid values are 'success' and 'failed'.
          type: string
          example: 'success'
        transactionType:
          description: The transactionType provided in request.
          type: string
          example: 'registration'
        fraudScore:
          $ref: '#/components/schemas/FraudScore'
        Error:
          $ref: '#/components/schemas/FraudRegistrationError'
      example:
        correlationId: '228.6278892207286'
        transactionStatus: 'Scored Successfully'
        validationStatus: 'success'
        transactionType: 'registration'
        fraudScore:
          score: '100'
          recommendedDecision: 'approve'
    FraudScore:
      description: Fraud likelihood assessment consisting of a score, associated warning(s), and explanation(s) of score received.
      type: object
      properties:
        score:
          description: The score attributed to this request by our machine learning system, ranging from 0 (less likely to be fraud) to 1000 (more likely to be fraud).
          type: string
          example: '1000'
        warnings:
          description: A list of non-critical warnings raised while processing the request. Warnings included in this list will have integration and data-quality related messages.
          type: array
          items:
            type: string
            example: 'warning1'
          example:
            - 'warning1'
            - 'warning2'
        explanations:
          $ref: '#/components/schemas/FraudScoreExplanation'
        recommendedDecision:
          description: The score attributed to this request by our machine learning system, ranging from 0 (less likely to be fraud) to 1000 (more likely to be fraud).
          type: string
          example: 'approve'
      example:
        score: '100'
        recommendedDecision: 'approve'
        warnings:
          - 'warning1'
          - 'warning2'
        explanations:
          - description: 'Suspicious transaction amount.'
            type: 'explanation/model'
          - description: 'Suspicious pattern compared to number of transactions in the past 1 month for the card.'
            type: 'explanation/rule'
            rule: 'QSR_14'
    FraudScoreExplanation:
      description: Explanation of the fraud score applied consisting of a description, type of the explanation, and rule (if applicable).
      type: array
      items:
        type: object
        properties:
          description:
            description: 'Description of the fraud score explanation.'
            type: string
            example: 'Suspicious transaction amount.'
          rule:
            description: ID of the rule being triggered.
            type: string
            example: 'QSR_14'
          type:
            description: Type of the explanation (model or rule).
            type: string
            example: 'explanation/model'
        example:
          description: 'Suspicious pattern compared to number of transactions in the past 1 month for the card.'
          type: 'explanation/rule'
          rule: 'QSR_14'
    FraudRegistrationError:
      description: Error occurred during the registration.
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'
      example:
        messages:
          - code: 'invalid_transaction_type'
            description: 'The transaction type is not supported'
          - code: 'missing_originalTransactionType'
            description: 'Original Transaction Type is missing or invalid'
    ErrorMessage:
      description: Error message.
      properties:
        code:
          description: Error code.
          type: string
          example: 'invalid_transaction_type'
        description:
          description: Error description.
          type: string
          example: 'The transaction type is not supported'
      example:
        code: 'invalid_transaction_type'
        description: 'The transaction type is not supported'
#------------------------------------------------------------------
# End of Fraud Detect transaction changes.
#------------------------------------------------------------------
    ManagedRedirectTransactionType:
      description: 'Type of transaction to perform with ManagedRedirectRequest. Primary transaction types in requests include ''SALE'', ''PREAUTH'', ''PAYER_AUTH''.'
      type: string
      enum:
        - SALE
        - PREAUTH
        - PAYER_AUTH
      example: SALE
    RedirectAttributes:
      description: 'Attributes for controlling transactions with additional parameters like dccFlow, ''3ds'' flows.'
      type: object
      properties:
        challengeIndicator:
          description: |
            Indicates whether or not a challenge should be performed. 01 = No preference (You have no preference whether a challenge should be performed. This is the default value) 02 = No challenge requested (You prefer that no challenge should be performed) 03 = Challenge requested: 3DS Requestor Preference (You prefer that a challenge should be performed) 04 = Challenge requested: Mandate (There are local or regional mandates that mean that a challenge must be performed)
          type: string
          enum:
            - '01'
            - '02'
            - '03'
            - '04'
          default: '01'
          example: '01'
        authenticateTransaction:
          description: If 3D secure should be applied.
          type: boolean
          example: true
        threeDSEmvCoMessageCategory:
          description: EmvCo Messag Category
          type: string
          enum:
            - '01'
            - '02'
            - '80'
          example: '01'
        browserJavaScriptEnabled:
          description: Browser Java Script Enabled flag
          type: boolean
          default: false
        override3dsCountryExclusion:
          description: Override 3ds Country Exclusion flag
          type: boolean
          default: false
        threeDSTransactionType:
          description: Secure 3D Transaction Type
          type: string
          enum:
            - '01'
            - '03'
            - '10'
            - '11'
            - '28'
          example: '01'
        skipTRA:
          description: skip TRA exemption for the transaction
          type: boolean
          default: false
        fullBypass:
          description: Full by pass flag
          type: boolean
          default: false
        mobileMode:
          description: Mobile mode flag
          type: boolean
          default: false
        paymentMode:
          description: Payment Mode
          type: string
          enum:
            - 'FULLPAY'
            - 'PAYONLY'
            - 'PAYPLUS'
          example: 'FULLPAY'
        language:
          description: Language used by client.
          type: string
          pattern: '^(?!\s*$).+'
          example: 'en'
    ManagedRedirectRequest:
      description: Request to generate an embedded payment link for Managed redirect.
      type: object
      properties:
        transactionAmount:
          $ref: '#/components/schemas/Amount'
        storeId:
          description: An optional Outlet ID for clients that support multiple stores in the same developer app.
          type: string
          maxLength: 20
          example: '12345500000'
        merchantTransactionId:
            description: The unique merchant transaction ID from the request, if supplied.
            type: string
            maxLength: 40
            example: 'lsk23532djljff3'
        transactionType:
          $ref: '#/components/schemas/ManagedRedirectTransactionType'
        order:
          $ref: '#/components/schemas/Order'
        redirectAttributes:
          $ref: '#/components/schemas/RedirectAttributes'
        paymentMethod:
          description: Payment method containing payment tokenization information.
          $ref: '#/components/schemas/PaymentMethod'
      required:
        - transactionAmount
        - transactionType
        - paymentMethod
    ManagedRedirectPaymentMethod:
      description: Accomodate other Payment method that is not listed above
      type: object
      properties:
        paymentMethodType:
          type: string
          description: Payment Method Type Enum
          enum:
            - APPLEPAY
            - BCMC_APM
            - GOOGLEPAY
            - IDEAL
            - INDIAWALLET
        paymentDetails:
          type: array
          description: Key Value pairs of Payment detail appropriate for the Payment Method Type
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
    ManagedRedirectResponse:
      description: Response for Managed redirect transaction request
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - properties:
            requestStatus:
              description: The status of the request.
              type: string
              enum: ['SUCCESS', 'VALIDATION_FAILED', 'PROCESSING_FAILED', 'FAILURE']
              example: 'SUCCESS'
            orderId:
              description: Note - Client Order ID if supplied by client which should not contain any special characters or spaces. If not supplied by client, IPG will generate. The first 12 alphanumeric digits are passed down to Fiserv Enterprise reporting tool, Clientline and Data File Manager (DFM).
              type: string
              example: '123456'
            redirectURL:
              description: URL for embedded payment link.
              type: string
              example: 'https://api.firstdata.com/connect/gateway/processing?storename=123456789&oid=R-96cdbaa4-c22e-4598-a2f1-c2b5fed79ef1&redirectRequestId=d3eb74fe-cf63-47e1-b89f-52ba0cc7965c'
            transactionId:
              type: string
              description: ID code from the transaction.
              example: '123978432'