/* 
 * Payment Gateway API Specification.
 *
 * The documentation here is designed to provide all of the technical guidance required to consume and integrate with our APIs for payment processing. To learn more about our APIs please visit https://docs.firstdata.com/org/gateway.
 *
 * The version of the OpenAPI document: 21.3.0.20210608.001
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing CurrencyConversion
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CurrencyConversionTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CurrencyConversion
        //private CurrencyConversion instance;

        public CurrencyConversionTests()
        {
            // TODO uncomment below to create an instance of CurrencyConversion
            //instance = new CurrencyConversion();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CurrencyConversion
        /// </summary>
        [Fact]
        public void CurrencyConversionInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" CurrencyConversion
            //Assert.IsInstanceOfType<CurrencyConversion> (instance, "variable 'instance' is a CurrencyConversion");
        }

        /// <summary>
        /// Test deserialize a DynamicPricing from type CurrencyConversion
        /// </summary>
        [Fact]
        public void DynamicPricingDeserializeFromCurrencyConversionTest()
        {
            // TODO uncomment below to test deserialize a DynamicPricing from type CurrencyConversion
            //Assert.IsInstanceOf<CurrencyConversion>(JsonConvert.DeserializeObject<CurrencyConversion>(new DynamicPricing().ToJson()));
        }
        /// <summary>
        /// Test deserialize a Dcc from type CurrencyConversion
        /// </summary>
        [Fact]
        public void DccDeserializeFromCurrencyConversionTest()
        {
            // TODO uncomment below to test deserialize a Dcc from type CurrencyConversion
            //Assert.IsInstanceOf<CurrencyConversion>(JsonConvert.DeserializeObject<CurrencyConversion>(new Dcc().ToJson()));
        }

        /// <summary>
        /// Test the property 'ConversionType'
        /// </summary>
        [Fact]
        public void ConversionTypeTest()
        {
            // TODO unit test for the property 'ConversionType'
        }
        /// <summary>
        /// Test the property 'InquiryRateId'
        /// </summary>
        [Fact]
        public void InquiryRateIdTest()
        {
            // TODO unit test for the property 'InquiryRateId'
        }

    }

}
