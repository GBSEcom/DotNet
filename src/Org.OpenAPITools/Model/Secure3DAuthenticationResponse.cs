/* 
 * Payment Gateway API Specification.
 *
 * The documentation here is designed to provide all of the technical guidance required to consume and integrate with our APIs for payment processing. To learn more about our APIs please visit https://docs.firstdata.com/org/gateway.
 *
 * The version of the OpenAPI document: 21.3.0.20210608.001
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Encapsulates 3DS authentication details in transaction responses.
    /// </summary>
    [DataContract]
    public partial class Secure3DAuthenticationResponse : IEquatable<Secure3DAuthenticationResponse>, IValidatableObject
    {
        /// <summary>
        /// The type of authentication.
        /// </summary>
        /// <value>The type of authentication.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TypeEnum
        {
            /// <summary>
            /// Enum _3DSECURE for value: 3D_SECURE
            /// </summary>
            [EnumMember(Value = "3D_SECURE")]
            _3DSECURE = 1

        }

        /// <summary>
        /// The type of authentication.
        /// </summary>
        /// <value>The type of authentication.</value>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public TypeEnum? Type { get; set; }
        /// <summary>
        /// The version of 3DS used to authenticate.
        /// </summary>
        /// <value>The version of 3DS used to authenticate.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum VersionEnum
        {
            /// <summary>
            /// Enum _10 for value: 1.0
            /// </summary>
            [EnumMember(Value = "1.0")]
            _10 = 1,

            /// <summary>
            /// Enum _21 for value: 2.1
            /// </summary>
            [EnumMember(Value = "2.1")]
            _21 = 2,

            /// <summary>
            /// Enum _22 for value: 2.2
            /// </summary>
            [EnumMember(Value = "2.2")]
            _22 = 3

        }

        /// <summary>
        /// The version of 3DS used to authenticate.
        /// </summary>
        /// <value>The version of 3DS used to authenticate.</value>
        [DataMember(Name = "version", EmitDefaultValue = false)]
        public VersionEnum? Version { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="Secure3DAuthenticationResponse" /> class.
        /// </summary>
        /// <param name="type">The type of authentication..</param>
        /// <param name="version">The version of 3DS used to authenticate..</param>
        /// <param name="_params">_params.</param>
        /// <param name="secure3dMethod">secure3dMethod.</param>
        public Secure3DAuthenticationResponse(TypeEnum? type = null, VersionEnum? version = null, Secure3DAuthenticationResponseParams _params = default(Secure3DAuthenticationResponseParams), Secure3DAuthenticationResponseSecure3dMethod secure3dMethod = default(Secure3DAuthenticationResponseSecure3dMethod))
        {
            this.Type = type;
            this.Version = version;
            this.Params = _params;
            this.Secure3dMethod = secure3dMethod;
        }

        /// <summary>
        /// Gets or Sets Params
        /// </summary>
        [DataMember(Name = "params", EmitDefaultValue = false)]
        public Secure3DAuthenticationResponseParams Params { get; set; }

        /// <summary>
        /// Gets or Sets Secure3dMethod
        /// </summary>
        [DataMember(Name = "secure3dMethod", EmitDefaultValue = false)]
        public Secure3DAuthenticationResponseSecure3dMethod Secure3dMethod { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Secure3DAuthenticationResponse {\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Version: ").Append(Version).Append("\n");
            sb.Append("  Params: ").Append(Params).Append("\n");
            sb.Append("  Secure3dMethod: ").Append(Secure3dMethod).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Secure3DAuthenticationResponse);
        }

        /// <summary>
        /// Returns true if Secure3DAuthenticationResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of Secure3DAuthenticationResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Secure3DAuthenticationResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                ) && 
                (
                    this.Version == input.Version ||
                    (this.Version != null &&
                    this.Version.Equals(input.Version))
                ) && 
                (
                    this.Params == input.Params ||
                    (this.Params != null &&
                    this.Params.Equals(input.Params))
                ) && 
                (
                    this.Secure3dMethod == input.Secure3dMethod ||
                    (this.Secure3dMethod != null &&
                    this.Secure3dMethod.Equals(input.Secure3dMethod))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Type != null)
                    hashCode = hashCode * 59 + this.Type.GetHashCode();
                if (this.Version != null)
                    hashCode = hashCode * 59 + this.Version.GetHashCode();
                if (this.Params != null)
                    hashCode = hashCode * 59 + this.Params.GetHashCode();
                if (this.Secure3dMethod != null)
                    hashCode = hashCode * 59 + this.Secure3dMethod.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
