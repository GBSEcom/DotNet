/* 
 * Payment Gateway API Specification.
 *
 * The documentation here is designed to provide all of the technical guidance required to consume and integrate with our APIs for payment processing. To learn more about our APIs please visit https://docs.firstdata.com/org/gateway.
 *
 * The version of the OpenAPI document: 21.3.0.20210608.001
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Encapsulates the 3DS method form and unique transaction identifier.
    /// </summary>
    [DataContract]
    public partial class Secure3DAuthenticationResponseSecure3dMethod : IEquatable<Secure3DAuthenticationResponseSecure3dMethod>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Secure3DAuthenticationResponseSecure3dMethod" /> class.
        /// </summary>
        /// <param name="methodForm">An iframe to be hidden in the browser used to collect browser data for the issuers. This information adds to the overall consumer profile and helps in identifying potentially fraudulent transactions..</param>
        /// <param name="secure3dTransId">A unique transaction identifier supplied by the ACS..</param>
        public Secure3DAuthenticationResponseSecure3dMethod(string methodForm = default(string), string secure3dTransId = default(string))
        {
            this.MethodForm = methodForm;
            this.Secure3dTransId = secure3dTransId;
        }

        /// <summary>
        /// An iframe to be hidden in the browser used to collect browser data for the issuers. This information adds to the overall consumer profile and helps in identifying potentially fraudulent transactions.
        /// </summary>
        /// <value>An iframe to be hidden in the browser used to collect browser data for the issuers. This information adds to the overall consumer profile and helps in identifying potentially fraudulent transactions.</value>
        [DataMember(Name = "methodForm", EmitDefaultValue = false)]
        public string MethodForm { get; set; }

        /// <summary>
        /// A unique transaction identifier supplied by the ACS.
        /// </summary>
        /// <value>A unique transaction identifier supplied by the ACS.</value>
        [DataMember(Name = "secure3dTransId", EmitDefaultValue = false)]
        public string Secure3dTransId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Secure3DAuthenticationResponseSecure3dMethod {\n");
            sb.Append("  MethodForm: ").Append(MethodForm).Append("\n");
            sb.Append("  Secure3dTransId: ").Append(Secure3dTransId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Secure3DAuthenticationResponseSecure3dMethod);
        }

        /// <summary>
        /// Returns true if Secure3DAuthenticationResponseSecure3dMethod instances are equal
        /// </summary>
        /// <param name="input">Instance of Secure3DAuthenticationResponseSecure3dMethod to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Secure3DAuthenticationResponseSecure3dMethod input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MethodForm == input.MethodForm ||
                    (this.MethodForm != null &&
                    this.MethodForm.Equals(input.MethodForm))
                ) && 
                (
                    this.Secure3dTransId == input.Secure3dTransId ||
                    (this.Secure3dTransId != null &&
                    this.Secure3dTransId.Equals(input.Secure3dTransId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MethodForm != null)
                    hashCode = hashCode * 59 + this.MethodForm.GetHashCode();
                if (this.Secure3dTransId != null)
                    hashCode = hashCode * 59 + this.Secure3dTransId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
