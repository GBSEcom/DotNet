/*
 * Payment Gateway API Specification.
 *
 * The documentation here is designed to provide all of the technical guidance required to consume and integrate with our APIs for payment processing. To learn more about our APIs please visit https://docs.firstdata.com/org/gateway.
 *
 * The version of the OpenAPI document: 21.5.0.20211029.001
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Contains 3DSecure response code.
    /// </summary>
    [DataContract(Name = "Secure3dResponse")]
    public partial class Secure3dResponse : IEquatable<Secure3dResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Secure3dResponse" /> class.
        /// </summary>
        /// <param name="responseCode3dSecure">Code received after successful payer-auth verification..</param>
        /// <param name="cardholderInfo">The cardholder&#39;s information supplied by the ACS..</param>
        public Secure3dResponse(string responseCode3dSecure = default(string), string cardholderInfo = default(string))
        {
            this.ResponseCode3dSecure = responseCode3dSecure;
            this.CardholderInfo = cardholderInfo;
        }

        /// <summary>
        /// Code received after successful payer-auth verification.
        /// </summary>
        /// <value>Code received after successful payer-auth verification.</value>
        [DataMember(Name = "responseCode3dSecure", EmitDefaultValue = false)]
        public string ResponseCode3dSecure { get; set; }

        /// <summary>
        /// The cardholder&#39;s information supplied by the ACS.
        /// </summary>
        /// <value>The cardholder&#39;s information supplied by the ACS.</value>
        [DataMember(Name = "cardholderInfo", EmitDefaultValue = false)]
        public string CardholderInfo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Secure3dResponse {\n");
            sb.Append("  ResponseCode3dSecure: ").Append(ResponseCode3dSecure).Append("\n");
            sb.Append("  CardholderInfo: ").Append(CardholderInfo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Secure3dResponse);
        }

        /// <summary>
        /// Returns true if Secure3dResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of Secure3dResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Secure3dResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ResponseCode3dSecure == input.ResponseCode3dSecure ||
                    (this.ResponseCode3dSecure != null &&
                    this.ResponseCode3dSecure.Equals(input.ResponseCode3dSecure))
                ) && 
                (
                    this.CardholderInfo == input.CardholderInfo ||
                    (this.CardholderInfo != null &&
                    this.CardholderInfo.Equals(input.CardholderInfo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ResponseCode3dSecure != null)
                    hashCode = hashCode * 59 + this.ResponseCode3dSecure.GetHashCode();
                if (this.CardholderInfo != null)
                    hashCode = hashCode * 59 + this.CardholderInfo.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // CardholderInfo (string) maxLength
            if(this.CardholderInfo != null && this.CardholderInfo.Length > 128)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CardholderInfo, length must be less than 128.", new [] { "CardholderInfo" });
            }

            yield break;
        }
    }
}
